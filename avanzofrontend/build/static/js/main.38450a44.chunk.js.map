{"version":3,"sources":["ui/assets/authentication/avanzoMenu.jpg","ui/assets/home2.PNG","ui/assets/authentication/background2.png","ui/assets/authentication/avanzo.jpg","configuration/routing/Routes.js","ui/components/general/MainMenu.js","ui/components/subcomponents/modalMessages.js","ui/components/authentication/password/ConfirmedPassword.js","store/redux/types.js","services/BaseURL.js","services/requestWrapper.js","services/general/loginServices.js","services/customer/registerServices.js","store/redux/actions/general/loginActions.js","ui/components/authentication/password/ForgotPassword.js","ui/components/authentication/LoginForm.js","services/integrationWrapper.js","services/customer/customerServices.js","store/redux/actions/customer/customerActions.js","ui/components/authentication/register/RegisterCustomer.js","ui/components/authentication/ConfirmedAccount.js","services/admin/adminServices.js","store/redux/actions/admin/adminActions.js","ui/components/authentication/register/Register.js","ui/components/home/index.js","ui/components/authentication/index.js","ui/components/general/Information.js","services/integration/integrationServices.js","store/redux/actions/integration/integrationActions.js","ui/components/integration/IFormRequest.js","ui/components/subcomponents/MiniLoading.js","ui/components/integration/IMenu.js","ui/components/integration/ITransactions.js","ui/components/authentication/password/ResetPassword.js","ui/components/subcomponents/FieldTitle.js","ui/components/admin/company_management/CreateCompany.js","ui/components/admin/company_management/EditModal.js","ui/components/admin/company_management/ServiceTableButtons.js","ui/components/admin/company_management/CompanyTable.js","ui/components/admin/company_management/index.js","configuration/constants.js","ui/components/admin/customer_management/create/CreateCustomer.js","ui/components/admin/customer_management/approve/RequestModalCard.js","ui/components/admin/customer_management/approve/ApproveCustomer.js","ui/components/admin/customer_management/list/ServiceTableButtons.js","ui/components/admin/customer_management/list/CustomerTable.js","ui/components/admin/customer_management/index.js","services/general/generalServices.js","store/redux/actions/general/generalActions.js","ui/components/admin/request_management/approve_requests/RequestStateModal.js","ui/components/admin/request_management/approve_requests/ApproveRequest.js","ui/components/admin/request_management/make_outlay/RequestStateModal.js","ui/components/admin/request_management/make_outlay/MakeOutlay.js","ui/components/admin/request_management/rejected_requests/RequestDetailModal.js","ui/components/admin/request_management/rejected_requests/RejectedRequest.js","ui/components/admin/request_management/pending_rrhh/RequestDetailModal.js","ui/components/admin/request_management/pending_rrhh/PendingRequest.js","ui/components/admin/request_management/index.js","ui/components/admin/generate_reports/ReceiptManagement.js","ui/components/admin/generate_reports/index.js","ui/components/company/request_management/approve_requests/RequestStateModal.js","ui/components/company/request_management/approve_requests/ApproveRequest.js","ui/components/company/request_management/index.js","ui/components/company/generate_reports/ReceiptManagement.js","ui/components/company/generate_reports/index.js","ui/components/customer/index.js","ui/components/customer/Transactions.js","ui/components/customer/RequestForm.js","ui/components/customer/RequestStateModal.js","ui/components/customer/RequestState.js","ui/components/customer/AccountState.js","ui/components/general/Router.js","ui/components/App.js","configuration/serviceWorker.js","store/redux/reducers/login/loginReducer.js","store/redux/reducers/customer/customerReducer.js","store/redux/reducers/company/companyReducer.js","store/redux/reducers/admin/adminReducer.js","store/redux/reducers/integration/integrationReducer.js","store/redux/reducers/index.js","store/store.js","index.js","ui/assets/authentication/background.png"],"names":["module","exports","integration_form","integration_transactions","integrations_requests","home","login","forgot_password","reset_password","confirm_password","confirm_account","receive_confirmation","admin_register","admin_company_management","admin_customer_management","admin_request_management","admin_generate_reports","company_request_management","company_generate_reports","customer","customer_register","customer_transactions","customer_form_request","customer_review_requests","customer_account","Header","Layout","MainMenu","props","state","log_out","visible","redirectTo","loggedIn","isSignedIn","logOut","bind","handleCancelModal","localStorage","clear","this","setState","undefined","access_token","role","parseInt","role_id","className","mode","Item","src","icon","alt","onClick","type","to","routes","title","onOk","okText","onCancel","cancelText","width","Component","withRouter","ERROR_MODAL","err_message","Modal","error","content","SUCCESS_MODAL","success","CONFIRM_MODAL","window","location","reload","WARNING_MODAL","warning","allowEmergingWindows","FormItem","Form","ConfirmedPassword","handleSubmit","e","preventDefault","form","validateFields","err","values","accountInfo","email","recoverPassword","requestSent","sendMessage","loading","modal","secondIcon","onSubmit","htmlType","loginTypes","LOGGING","LOGOUT","RESET_PASSWORD","CONFIRM_PASSWORD","customerTypes","companyTypes","adminTypes","generalTypes","integrationTypes","BaseURL","client","initializeClient","axios","create","baseURL","headers","request","options","then","response","console","config","status","data","message","Promise","reject","loginService","password","url","method","logout","forgetPassword","changePassword","token","registerService","register","getDocumentTypes","newRegister","bodyFormData","FormData","append","name","lastName","identificationId","phoneNumber","company","documentId","photo","paymentReport","getCompanies","dispatch","loginServices","user_info","expires_on","user_name","roleId","roleName","userId","setItem","saveLocalStorage","idUser","payload","C","ForgotPassword","getFieldDecorator","forgetPasswordResponse","rules","required","prefix","placeholder","connect","LoginForm","isLoading","login_success","rol","isLogin","loginError","target","value","getItem","isLogged","initialValue","onChange","onChangeEmail","onChangePassword","integration_token","customerService","getHomeData","getRequestData","customerId","integrationRequest","getOutLayData","getOultayDatesList","split","quantity","generateDocuments","createRequest","signature","file","dataurl","filename","arr","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","dataURLtoFile","moyen","accountType","accountNumber","isBank","interest","idCompany","loanData","paymentSupport","workingSupport","getAllTransactions","getAllRequest","getAllRequestWasOutlayed","getAllRequestWasRejected","getAccountDetail","generateCodes","phonenumber","clientid","getOutlayData","correct","RegisterCustomer","compareToFirstPassword","rule","callback","getFieldValue","captchaSolved","onSignInClicked","handleEmail","getDocumentsTypes","birthDate","moment","_d","format","expeditionDate","idDocumentsTypes","registerResponse","signInBackground","signInBackground2","logo","gutter","lg","md","sm","xs","allowClear","showSearch","notFoundContent","map","i","Option","key","typeName","min","pattern","validator","xxs","visibleTermModal","footer","dangerouslySetInnerHTML","__html","terms","WrappedRegisterCustomer","registerDataResponse","ConfirmedAccount","adminService","registerAdmin","createCompany","createCustomer","createMultipleCustomer","getAllRequestToOutLay","getAllRequestToApprove","getAllCompanies","getAllCustomers","getAllCustomersToApprove","approveCustomer","approve","cycleId","clientId","updateCompany","activateCustomer","updateCustomer","getAllCompaniesWithSalaries","companyid","activateCompany","getDateListToCustomer","getAllRejectedRequest","getAllPendingRHRequest","deleteClient","updateCompanySalaries","adminServices","getCompanyWithSalary","companyId","Register","names","username","description","onChangeValue","param","modifier","nameSplit","confirmationPassword","registerAdminResponse","WrappedRegisterAdmin","admin","Home","handleSliderChange","sliderValue","Math","round","onChangeName","isNaN","test","validationLetters","input","replace","validationNumbers","openTermsandConditions","file1","file2","newWindow","open","newWindow1","closed","checkBox1","clicked","next","previous","carousel","React","createRef","prevProps","prevState","newRegisterResponse","prev","confirmPassword","toString","fileType","files","partner","checked","companyList","xxl","maxLength","socialReason","kBK","multiple","accept","onChangeField","disabled","WrappedHome","Content","Sider","WrappedNormalLoginStandard","WrappedForgotPassword","WrappedConfirmPassword","ConfirmResetPassword","WrappedConfirmAccount","ConfirmAccount","Login","height","updateWindowDimensions","addEventListener","removeEventListener","innerWidth","innerHeight","log","pathname","path","component","style","backgroundColor","AdminRegister","second_background","CustomerRegister","company_register","render","Information","href","rel","ticking","timezone","integrationService","integrationRegistration","integrationRegister","Role_idRole","IFormRequest","fee","loan","money_wallet","wallet_type","wallet_number","bank_account","bank_name","bank_number","bank_type","signatureDone","trimmedDataURL","params","integrationRegisterResponse","marginTop","color","fontSize","textAlign","size","IRequestForm","propTypes","PropTypes","bool","integrationToken","string","integration","MiniLoading","IMainMenu","table","dataIndex","align","text","sorter","a","b","transaction","localeCompare","date","itemRender","current","originalElement","ITransactions","firstText","firstTextLength","linkName","linkUrl","setData","inputLinkName","linkList","rows","item","row","link","push","tableData","date2","JSON","stringify","IMenu","dataSource","columns","rowKey","locale","emptyText","pagination","showSizeChanger","pageSizeOptions","scroll","x","transactionList","ResetPassword","validateFieldsAndScroll","burstingKey","resetPasswordResponse","FieldTitle","visibility","Panel","Collapse","CreateCompany","onConfirmRequest","handleSalaryRate","companyRate","salary_rate","newSalary","companyReportDates","companyReportDate","companyFirstDate","companySecondDate","address","approveHumanResources","companySalaries","defaultAmount","economyActivity","maximumSplit","nit","companyMembers","memberName","memberLastName","memberId","profession","memberEmail","representantName","representantLastName","representantId","representantProfession","representantPhone","representantEmail","addNewSalary","defaultPaymentRate","defaultSalaryDate","datesArray","clearSelect","defaultReportDate","changeRatesValues","changeSalariesValues","setter","changeDateValues","setterValue","validationNumbersFee","validationNITNumbers","validationNumbersNumber","cleanValues","meeting","report","upload","salariesArray","companyRateName","companyPaymentNumber","burstingFormKey","resetValue","defaultActiveKey","bordered","header","autoClearSearchValue","formatter","onSelect","max","minLength","nextProps","companyResponse","CreateCompanyForm","EditCompanyModal","searchInfo","id","rate","reportDate","salaryDate","idDefault","array","idCompanySalaries","companyPaymentDates","visiblePays","idDefaultSalary","changeReportDate","changeSalariesDate","changeSplit","changeAmount","service","time","companySalaryResponse","pop","actions","span","removeRow","handleEdit","keyboard","closable","defaultValue","inputServiceName","inputServiceNumber","inputServiceSplit","handleEditCylce","TableButtons","inputServiceTime","EditModal","registeredDate","CompanyTable","filterData","toCompare","toUpperCase","includes","TabPane","Tabs","Administrator","tab","bankTypeAccountInfo","requestState","CustomerManagement","fixedNumber","Date","customer_initDate","handleWallet","onLoadFile","particular_modal","onChangeFile","onChangeNames","seeDocument","changeCompany","user_id","outlayDataResponse","bankInfo","walletInfo","cycles","customerDateList","action","authorization","info","changeBankName","bank","bankName","changeBankType","changeWalletType","wallet","changeWalletNumber","CustomerManagementForm","createCustomerResponse","RequestModalCard","defineBadgeName","defineButtonClass","file3","newWindow2","cycle","approve_modal","approveCustomers","idNewClient","onRejectRequest","reject_modal","validationInputNumbers","changeCycle","card_style_requested","card_style_analysis","card_style_approved","card_style_rejected","marginBottom","montlyFee","customerList","ApproveCustomer","loadInfo","createdDate","platformState","totalRemainder","customerListToApprove","renderItem","k","maximumAmount","delete","inputService","idClient","idAccount","deleteUser","CustomerTable","Customer_Management","generalService","approveorRejectRequest","requestid","requestId","transactionCode","getAllCustomer","getReportByCustomer","getReportByCompany","generalServices","Step","Steps","RequestStateModal","filePath","idRequest","inputChange","count","requestStateId","idRequestState","displayType","thousandSeparator","decimalSeparator","interestValue","administrationValue","account","okButtonProps","onshowSearch","ApproveRequest","onChangeMoyen","requestStateName","Company_idCompany","requestResponse","RequestOutLayState","onChangeTransactionCode","MakeOutlayProcess","requestOutLayResponse","accumulatedQuantity","marginLeft","observation","rejectedRequest","pendingRHRequest","margin","MakeOutlay","RejectedRequest","PendingRequest","ReceiptManagement","inputAdviserName","GenerateReports","newUrl","approveorRejectRequestByCompany","Company","Customer","homeDataResponse","partialQuantity","partialCapacity","transactions","pendingRequests","active","paragraph","Title","level","Transactions","LoanRequest","sigPad","trim","getTrimmedCanvas","toDataURL","onChangeFee","sendReportInfo","handleQuantity","handleQuantityBlur","handleBankProp","changeBankNumber","defineDocumentsCondition","openDocument","route","checkRequest","adminValue","paymentDocument","workingDocument","account_type","account_number","administration","requestDataResponse","outlayDatesList","datesList","form_data","confirmed_data","onChangeWorking","onChangePaymentSupport","changeNewEmail","emailConfirmation","changeNewPhone","phone","phoneConfirmation","confirmData","confirmCodes","enterCodes","flagState","feeCondition","accountBank","step","onBlur","quantityBlur","tipFormatter","d","Intl","NumberFormat","currency","maximumSignificantDigits","totalInterest","subTotal","ceil","ivaValue","totalValue","RequestForm","object","generateCodesResponse","code","stateName","RequestState","getAllOutlayedRequest","getAllRequestsWasRejected","requestList","tableOutlayedData","outlayedRequestList","tableRejectData","rejectedRequestList","AccountState","accountDetail","totalCapital","totalFeeAdministration","totalOtherCollection","Router","AdminCompanyManagement","AdminCustomerManagement","AdminRequestManagement","AdminGenerateReports","CompanyGenerateReports","Customer_Transactions","Customer_RequestForm","Customer_ListRequest","Customer_Account","Footer","WrappedResetPassword","App","viewportWidth","expireTime","signedIn","exact","viewPortWidth","Boolean","hostname","initialState","documentsReponse","combineReducers","RESET_ALL","Cu","middleware","thunk","store","createStore","reducer","compose","applyMiddleware","devToolsExtension","f","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38450a44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avanzoMenu.7387a43a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/home2.f48bb85c.PNG\";","module.exports = __webpack_public_path__ + \"static/media/background2.5f906126.png\";","module.exports = __webpack_public_path__ + \"static/media/avanzo.f5f62129.jpg\";","export default {\r\n  integration_form: \"/integration-form/:name/:lastName/:identificationId/:birthDate/:expeditionDate/:email/:phoneNumber\",\r\n  integration_transactions: \"/integration-transactions\",\r\n  integrations_requests: \"/integrations-requests\",\r\n\r\n\r\n  home: \"/home\",\r\n  login: \"/login\",\r\n  forgot_password: \"/forgot_password\",\r\n  reset_password: \"/confirm_password/:token\",\r\n  confirm_password: \"/password_confirmed\",\r\n  confirm_account: \"/account_confirmed\",\r\n  receive_confirmation: \"/account_confirmation/:token\",\r\n  \r\n  admin_register: \"/admon-register\",\r\n  admin_company_management: \"/admin-company-management\",\r\n  admin_customer_management: \"/admin-customer-management\",\r\n  admin_request_management: \"/admin-request-management\",\r\n  admin_generate_reports: \"/admin-generate-reports\",\r\n  \r\n  company_request_management: \"/company-request-management\",\r\n  company_generate_reports: \"/company-generate-reports\",\r\n  \r\n  customer: \"/customer-home\",\r\n  customer_register: \"/customer-register\",\r\n  customer_transactions: \"/customer-transactions\",\r\n  customer_form_request: \"/customer-form-request\",\r\n  customer_review_requests: \"/customer-review-requests\", \r\n  customer_account: \"/customer-account\",\r\n};  \r\n","//Libraries\r\nimport {Layout, Menu, Modal, Icon} from 'antd';\r\nimport React, {Component} from 'react';\r\nimport { Redirect } from \"react-router\";\r\nimport {withRouter, NavLink} from 'react-router-dom';\r\n\r\n//Subcomponents\r\nimport routes from \"../../../configuration/routing/Routes\";\r\nimport icon from \"../../assets/authentication/avanzoMenu.jpg\";\r\n\r\n//Styles\r\nimport '../../styles/general/mainmenu.css';\r\n\r\n//Constants\r\nconst { Header } = Layout;\r\n\r\nclass MainMenu extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      log_out: 0,\r\n      visible: false,\r\n      redirectTo: \"\",\r\n      loggedIn: this.isSignedIn()\r\n    };\r\n\r\n    this.logOut = this.logOut.bind(this);\r\n    this.handleCancelModal = this.handleCancelModal.bind(this);\r\n    this.isSignedIn=this.isSignedIn.bind(this);\r\n\r\n  };\r\n\r\n  logOut(){\r\n    //this.props.logout();\r\n    localStorage.clear();\r\n    this.setState({loggedIn: false})\r\n  };\r\n\r\n  handleCancelModal(){\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n  \r\n  isSignedIn(){\r\n    if (localStorage.access_token !== undefined && localStorage.access_token !== null &&\r\n        localStorage.access_token !== 'null' && localStorage.access_token){\r\n      return true;\r\n    } else {\r\n      localStorage.clear();\r\n      return false;\r\n    }\r\n  };\r\n \r\n  render(){\r\n    \r\n    let {loggedIn} = this.state;\r\n    //let {role} = this.props;\r\n    let role = parseInt(localStorage.role_id, 10);\r\n\r\n    return(\r\n      <Layout className=\"layout\" >\r\n        <Header className={\"header-menu1\"} >         \r\n          <Menu\r\n            mode=\"horizontal\"\r\n            className={\"menu-style\"}>\r\n              <Menu.Item>\r\n                <img src={icon} alt=\"menulogo\" className=\"menu-logo\" />\r\n              </Menu.Item>\r\n              <Menu.Item className={\"menu-logout\"} onClick={() => this.setState({visible: true})}>\r\n                <Icon type=\"poweroff\" />Cerrar sesión\r\n              </Menu.Item>\r\n              {\r\n                (role === 2 || role === 1 ) && \r\n                <Menu.Item className={\"menu-admin-report\"}>\r\n                  <NavLink to={routes.admin_generate_reports}>\r\n                    <Icon type=\"file\"/>Generar Reportes\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (role === 2 || role === 1 ) && \r\n                <Menu.Item className={\"menu-admin-customer\"}>\r\n                  <NavLink to={routes.admin_customer_management}>\r\n                    <Icon type=\"idcard\"/>Gestionar Clientes\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (role === 2 || role === 1 ) && \r\n                <Menu.Item className={\"menu-admin-loan\"}>\r\n                  <NavLink to={routes.admin_request_management}>\r\n                    <Icon type=\"percentage\"/>Gestionar Créditos\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (role === 2 || role === 1 ) && \r\n                <Menu.Item className={\"menu-admin-home\"}>\r\n                  <NavLink to={routes.admin_company_management}>\r\n                    <Icon type=\"cluster\"/>Gestionar Empresas\r\n                  </NavLink>\r\n                  \r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (parseInt(role,10) === 3) && \r\n                <Menu.Item className={\"menu-admin-customer\"}>\r\n                  <NavLink to={routes.company_generate_reports}>\r\n                    <Icon type=\"file-text\"/>Generar informes\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              } \r\n              {\r\n                (parseInt(role,10) === 3) && \r\n                <Menu.Item className={\"menu-admin-customer\"}>\r\n                  <NavLink to={routes.company_request_management}>\r\n                    <Icon type=\"file-done\"/>Gestionar solicitudes\r\n                  </NavLink>  \r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (parseInt(role,10) === 4) && \r\n                <Menu.Item className={\"menu-user-request\"}>\r\n                  <NavLink to={routes.customer_account}>\r\n                    <Icon type=\"control\"/>Cuenta\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }            \r\n              {\r\n                (parseInt(role,10) === 4) && \r\n                <Menu.Item className={\"menu-user-transactions\"}>\r\n                  <NavLink to={routes.customer_transactions}>\r\n                    <Icon type=\"profile\"/>Transacciones\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (parseInt(role,10) === 4) && \r\n                <Menu.Item className={\"menu-user-request\"}>\r\n                  <NavLink to={routes.customer_review_requests}>\r\n                    <Icon type=\"schedule\"/>Revisar solicitudes\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (parseInt(role,10) === 4) && \r\n                <Menu.Item className={\"menu-user-loan\"}>\r\n                  <NavLink to={routes.customer_form_request}>\r\n                    <Icon type=\"dollar\"/>Solicitar préstamo\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (parseInt(role,10) === 4) && \r\n                <Menu.Item className={\"menu-user-home\"}>\r\n                  <NavLink to={routes.customer}>\r\n                    <Icon type=\"home\"/>Inicio\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n              \r\n            </Menu>\r\n            \r\n        </Header>\r\n        <Modal\r\n            title=\"Cerrar sesión\"\r\n            visible={this.state.visible}\r\n            onOk={this.logOut}\r\n            okText={\"Confirmar\"}\r\n            onCancel={this.handleCancelModal}\r\n            cancelText={\"Cancelar\"}\r\n            width={400}\r\n            className={\"log-out-modal\"}>\r\n          <p>¿Confirma que desea cerrar sesión?</p>\r\n        </Modal>\r\n        {\r\n          !loggedIn &&\r\n          <Redirect to={\"/\"}/>\r\n        }\r\n      </Layout>\r\n    );\r\n  };\r\n  \r\n}\r\n\r\n/*MainMenu.propTypes = {\r\n  logout: PropTypes.func,\r\n  isLogin: PropTypes.bool,\r\n  role: PropTypes.number.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLogin: state.login.isLogin,\r\n    role: state.login.role\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch(logout())\r\n  }\r\n};*/\r\n\r\n//export default connect(mapStateToProps, mapDispatchToProps)(withRouter(MainMenu));\r\n\r\nexport default (withRouter(MainMenu));","//Libraries\r\nimport {Modal} from 'antd';\r\n\r\nexport function ERROR_MODAL(title, err_message) {\r\n  Modal.error({\r\n    title: title,\r\n    content: err_message\r\n  });\r\n};\r\n\r\nexport function SUCCESS_MODAL(title, err_message) {\r\n  Modal.success({\r\n    title: title,\r\n    content: err_message\r\n  });\r\n};\r\n\r\nexport function CONFIRM_MODAL(title, err_message) {\r\n  Modal.success({\r\n    title: title,\r\n    content: err_message,\r\n    onOk() {\r\n      window.location.reload();\r\n    },\r\n  });\r\n};\r\n\r\nexport function ERROR_NEW_MODAL(title, err_message) {\r\n  Modal.error({\r\n    title: title,\r\n    content: err_message,\r\n    onOk() {\r\n      window.location.reload();\r\n    },\r\n  });\r\n};\r\n\r\nexport function WARNING_MODAL(title, err_message) {\r\n  Modal.warning({\r\n    title: title,\r\n    content: err_message,\r\n  });\r\n};\r\n\r\nexport function allowEmergingWindows() {\r\n  Modal.warning({\r\n    title: 'Ventanas emergentes',\r\n    content: 'Por favor habilite las ventanas emergentes de acuerdo con su navegador',\r\n  });\r\n};","//Libraries\r\nimport {Form, Icon, Button} from 'antd';\r\nimport {Redirect, NavLink} from \"react-router-dom\";\r\nimport React, {Component} from 'react';\r\n\r\n//Subcomponents\r\nimport routes from \"../../../../configuration/routing/Routes\";\r\n\r\n//Actions\r\nimport { SUCCESS_MODAL } from '../../subcomponents/modalMessages';\r\n\r\n//Assets\r\nimport secondIcon from \"../../../assets/authentication/avanzo.jpg\";\r\n\r\n//Constants\r\nconst FormItem = Form.Item;\r\n\r\nclass ConfirmedPassword extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state={\r\n      loading: false,\r\n      requestSent: false,\r\n      modal: false,\r\n    };\r\n\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const accountInfo = {\r\n          email: values.email\r\n        };\r\n        this.props.recoverPassword(accountInfo);\r\n        this.setState({requestSent: true});\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  sendMessage = (e) => {\r\n    SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", \"Se ha enviado un correo electrónico con las instrucciones necesarias para restablecer la contraseña.\")\r\n  };\r\n\r\n  render() {\r\n\r\n    //const { getFieldDecorator } = this.props.form;\r\n    const {requestSent} = this.state;\r\n\r\n    return (\r\n        <div>\r\n          <div className=\"div-logo\">\r\n            <img src={secondIcon} alt=\"icon\" className={\"logo-confirmed\"} />\r\n          </div>\r\n          <div className={\"login-card-confirmed\"}>\r\n            <div className=\"login-form\">\r\n              <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <div className={\"confirm_account\"}>\r\n                  <div className={\"confirm_account_text\"}>\r\n                    <Icon className='question-button' type='check-circle'/>\r\n                       La cuenta ha sido confirmada satisfactoriamente.\r\n                      Ahora puede iniciar sesión con la contraseña asignada.\r\n                      <br/>\r\n                  </div>\r\n                </div>\r\n                <FormItem className={\"submit\"}>\r\n                  <NavLink to={routes.login} >\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" >\r\n                      <p className={\"login-button-text\"}>Iniciar Sesión</p>\r\n                    </Button>\r\n                  </NavLink>\r\n                </FormItem>\r\n\r\n              </Form>\r\n            </div>\r\n            \r\n          {requestSent === true &&\r\n            <Redirect to={routes.login}/>\r\n          }\r\n        </div>\r\n        <div className={\"bottom-title\"}>\r\n          Avanzo © 2020\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*ForgotPassword.propTypes = {\r\n  postForgotPassword: PropTypes.func,\r\n  onSwap: PropTypes.func,\r\n  forgot_password: PropTypes.object,\r\n  recoverPassword: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    recoverPassword: (accountInfo) => dispatch(recoverPassword(accountInfo))\r\n  };\r\n};*/\r\n\r\n//export default connect(null, mapDispatchToProps)(ForgotPassword);\r\n\r\nexport default (ConfirmedPassword);","/* ----------------- Account ---------------- */\r\nexport const loginTypes = {\r\n  LOGGING: 'LOGGING',\r\n  LOGOUT: 'LOGOUT',\r\n  RESET_PASSWORD: 'RESET_PASSWORD',\r\n  CONFIRM_PASSWORD: 'CONFIRM_PASSWORD'\r\n};\r\n\r\n/* --------------- Customer -------------- */\r\nexport const customerTypes = {\r\n  GET_DOCUMENTS_TYPE: \"GET_DOCUMENTS_TYPE\",\r\n  REGISTER: \"REGISTER\",\r\n  GET_COMPANIES: \"GET_COMPANIES\",\r\n  NEW_REGISTER: \"NEW_REGISTER\",\r\n  GET_HOME_DATA: \"GET_HOME_DATA\",\r\n  GET_REQUEST_DATA: \"GET_REQUEST_DATA\",\r\n  GET_OUTLAY_DATA: \"GET_OUTLAY_DATA\",\r\n  GET_OUTLAY_DATESLIST: \"GET_OUTLAY_DATESLIST\",\r\n  GET_ACCOUNT_DETAIL:  \"GET_ACCOUNT_DETAIL\",\r\n  GENERATE_DOCUMENTS: \"GENERATE_DOCUMENTS\",\r\n  CREATE_REQUEST: \"CREATE_REQUEST\",\r\n  GET_TRANSACTIONS_LIST: \"GET_TRANSACTIONS_LIST\",\r\n  GET_REQUEST_LIST: \"GET_REQUEST_LIST\",\r\n  GET_OUTLAYED_REQUEST_LIST: \"GET_OUTLAYED_REQUEST_LIST\",\r\n  GET_REJECTED_REQUEST_LIST: \"GET_REJECTED_REQUEST_LIST\",\r\n  GENERATE_CODES: \"GENERATE_CODES\",\r\n  RESET_VALUES: \"RESET_VALUES\",\r\n};\r\n\r\n/* ----------------- Company ------------------- */\r\nexport const companyTypes = {\r\n  GET_REQUEST_LIST: \"GET_REQUEST_LIST\",\r\n};\r\n\r\n/* ----------------- Admin ------------------- */\r\nexport const adminTypes = {\r\n  GET_ALL_CUSTOMERS: \"GET_ALL_CUSTOMERS\",\r\n  GET_CUSTOMERS_TO_APPROVE: \"GET_CUSTOMERS_TO_APPROVE\",\r\n  GET_DATELIST_TO_CUSTOMER: \"GET_DATELIST_TO_CUSTOMER\",\r\n  APPROVE_CUSTOMERS: \"APPROVE_CUSTOMERS\",\r\n  GET_ALL_COMPANIES: \"GET_ALL_COMPANIES\",\r\n  GET_COMPANY_WITH_SALARY: \"GET_COMPANY_WITH_SALARY\",\r\n  REGISTER_ADMIN: \"REGISTER_ADMIN\",\r\n  CREATE_COMPANY: \"CREATE_COMPANY\",\r\n  UPDATE_COMPANY: \"UPDATE_COMPANY\",\r\n  UPDATE_COMPANY_SALARIES: \"UPDATE_COMPANY_SALARIES\",\r\n  DELETE_CUSTOMERS: \"DELETE_CUSTOMERS\",\r\n  CREATE_CUSTOMER: \"CREATE_CUSTOMER\",\r\n  ACTIVATE_CUSTOMER: \"ACTIVATE_CUSTOMER\",\r\n  ACTIVATE_COMPANY: \"ACTIVATE_COMPANY\",\r\n  UPDATE_CUSTOMER: \"UPDATE_CUSTOMER\",\r\n  CREATE_MULTIPLE_CUSTOMER: \"CREATE_MULTIPLE_CUSTOMER\",\r\n  GET_REQUEST_LIST: \"GET_REQUEST_LIST\",\r\n  GET_REJECTED_REQUEST: \"GET_REJECTED_REQUEST\",\r\n  GET_PENDINGRH_REQUEST: \"GET_PENDINGRH_REQUEST\",\r\n  GET_REQUEST_TO_APPROVE: \"GET_REQUEST_TO_APPROVE\",\r\n  GET_REQUEST_TO_OUTLAY: \"GET_REQUEST_TO_OUTLAY\",\r\n  RESET_VALUES: \"RESET_VALUES\"\r\n};\r\n\r\n/* ---------------- General --------------------- */\r\nexport const generalTypes = {\r\n  APPROVE_REJECT_REQUEST: \"APPROVE_REJECT_REQUEST\",\r\n  GET_CUSTOMER_LIST: \"GET_CUSTOMER_LIST\",\r\n  GET_CUSTOMER_REPORT: \"GET_CUSTOMER_REPORT\",\r\n  GET_COMPANY_REPORT: \"GET_COMPANY_REPORT\",\r\n};\r\n\r\nexport const integrationTypes = {\r\n  INTEGRATION_REGISTER: \"INTEGRATION_REGISTER\",\r\n};\r\n\r\n","const BaseURL = \"http://backend.avanzocreditos.com:4000\";\r\n//const BaseURL = \"http://localhost:4000/\"\r\n\r\nexport default BaseURL;","//Libraries\r\nimport axios from 'axios';\r\n\r\n//Subcomponents\r\nimport BaseURL from \"./BaseURL\";\r\n\r\n/*** Create an Axios Client with defaults ***/\r\nlet client = null;\r\n\r\nexport const initializeClient = function () {\r\n  client = axios.create({\r\n    baseURL: BaseURL,\r\n    headers: { 'Authorization': 'Bearer ' + localStorage.access_token }\r\n  });\r\n};\r\n\r\ninitializeClient();\r\n\r\n/*** Request Wrapper with default success/error actions ***/\r\nconst request = function (options) {\r\n\r\n  const onSuccess = function (response) {\r\n    //console.info('Request Successful: response: ', response);\r\n    return response;\r\n  };\r\n\r\n  const onError = function (error) {\r\n    console.error('Request Failed: Config Sent:', error.config);\r\n\r\n    if (error.response) {\r\n      console.error('Status:', error.response.status);\r\n      console.error('Data:', error.response.data);\r\n      console.error('Headers:', error.response.headers);\r\n\r\n      if(error.response.status === 500){\r\n        error.response.data = \"Error en el servidor\";\r\n      }\r\n    } else {\r\n      console.error('Error Message:', error.message);\r\n    }\r\n    return Promise.reject(error.response || error.message);\r\n  };\r\n\r\n  return client(options).then(onSuccess).catch(onError);\r\n};\r\n\r\nexport default request;","//Subcomponents\r\nimport request from '../requestWrapper';\r\n\r\nfunction login(email, password) {\r\n  \r\n  let data = {\r\n    email: email,\r\n    password: password \r\n  };\r\n\r\n  return request({\r\n    url: '/Account/Token',\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n}\r\n\r\nfunction logout(){\r\n  return request({\r\n    url: '/Account/Logout',\r\n    method: 'PUT',\r\n  });\r\n};\r\n\r\nfunction forgetPassword(email) {\r\n  \r\n  return request({\r\n    url: '/Account/ResetPassword',\r\n    method: 'GET',\r\n    headers:{\r\n      email: email\r\n    }\r\n  });\r\n}\r\n\r\nfunction changePassword(data, token){\r\n  return request({\r\n    url: '/Account/ConfirmPassword',\r\n    method: 'PUT',\r\n    data: data,\r\n    headers: { \r\n      'Authorization': 'Bearer ' + token \r\n    }\r\n  });\r\n}; \r\n\r\n\r\nconst loginService = {\r\n  login, logout, forgetPassword, changePassword\r\n};\r\n\r\nexport default loginService;","//Subcomponents\r\nimport request from '../requestWrapper';\r\n\r\nfunction getDocumentTypes(){\r\n  return request({\r\n    url: '/DocumentTypes/GetAll',\r\n    method: 'GET',\r\n  });\r\n};\r\n\r\nfunction register(data) {\r\n  \r\n  return request({\r\n    url: '/Account/Register',\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n};\r\n\r\nfunction newRegister(data) {\r\n\r\n  var bodyFormData = new FormData();\r\n\r\n  bodyFormData.append('name', data.name);\r\n  bodyFormData.append('lastName', data.lastName);\r\n  bodyFormData.append('email', data.email);\r\n  bodyFormData.append('identificationId', data.identificationId);\r\n  bodyFormData.append('phoneNumber', data.phoneNumber);\r\n  bodyFormData.append('company', data.company);\r\n  bodyFormData.append('password', data.password);\r\n  bodyFormData.append('documentId', data.documentId); \r\n  bodyFormData.append('photo', data.photo); \r\n  bodyFormData.append('paymentReport', data.paymentReport); \r\n  \r\n  return request({\r\n    url: '/Account/NewRegister',\r\n    method: 'POST',\r\n    data: bodyFormData\r\n  });\r\n};\r\n\r\nfunction getCompanies(){\r\n  return request({\r\n    url: '/Company/GetAllForUsers',\r\n    method: 'GET',\r\n  });\r\n};\r\n\r\n\r\nconst registerService = {\r\n  register, getDocumentTypes, newRegister, getCompanies\r\n};\r\n\r\nexport default registerService;","///Types\r\nimport {loginTypes} from '../../types';\r\nimport {customerTypes as C} from '../../types';\r\n\r\n//Subcomponents\r\nimport { SUCCESS_MODAL, ERROR_MODAL } from '../../../../ui/components/subcomponents/modalMessages';\r\n\r\n//Services\r\nimport { initializeClient } from '../../../../services/requestWrapper';\r\nimport loginServices from '../../../../services/general/loginServices'; \r\nimport registerService from '../../../../services/customer/registerServices'; \r\n\r\nfunction saveLocalStorage(access_token, expires_on, user_name, roleId, roleName, email, userId){\r\n\r\n  localStorage.setItem('access_token', access_token);\r\n  localStorage.setItem('expires_on', expires_on);\r\n  localStorage.setItem('user_name', user_name);\r\n  localStorage.setItem('role_id', roleId);\r\n  localStorage.setItem('email', email);  \r\n  localStorage.setItem('user_id', userId);\r\n\r\n  initializeClient();\r\n};\r\n\r\n//Exports login function.\r\nexport const login = (email, password) => {\r\n  return dispatch => {\r\n    return loginServices.login(email, password)\r\n        //Response\r\n        .then(response => {\r\n          let data = response.data;\r\n          let user_info = response.data.user_info;\r\n          saveLocalStorage(data.access_token, data.expires_on, user_info.name, user_info.roleId,\r\n             user_info.roleName, user_info.email, user_info.idUser);\r\n          dispatch({\r\n            type: loginTypes.LOGGING,\r\n            payload: true,\r\n          });\r\n          //SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", \r\n          //\"Ha ingresado a nuestra plataforma exitosamente.\");\r\n        //Manejo error\r\n        }).catch(err => {\r\n          dispatch({\r\n            type: loginTypes.LOGGING,\r\n            payload: false,\r\n          });\r\n          ERROR_MODAL(\"Error al realizar la acción\", err.data.message);\r\n        });\r\n  }\r\n};\r\n\r\nfunction setLogout (isLogin) {\r\n  return {\r\n    type: loginTypes.LOGOUT,\r\n    isLogin\r\n  };\r\n}\r\n\r\nexport const logout = () => {\r\n  return dispatch => {\r\n    dispatch(setLogout(false));\r\n    localStorage.clear();\r\n  }\r\n};\r\n\r\nexport const forgetPassword = (email) => {\r\n  return dispatch => {\r\n    return loginServices.forgetPassword(email)\r\n      .then(response => {\r\n        dispatch({\r\n          type: loginTypes.RESET_PASSWORD,\r\n          payload: response.data\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", \"Se te ha enviado un correo electrónico con las instrucciones necesarias para restablecer la contraseña.\")\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: loginTypes.RESET_PASSWORD,\r\n          payload: err\r\n        });\r\n      });\r\n  }\r\n};\r\n\r\nexport const changePassword = (data, token) => {\r\n  return dispatch => {\r\n    return loginServices.changePassword(data, token)\r\n        .then(response => {\r\n          dispatch({\r\n            type: loginTypes.CONFIRM_PASSWORD,\r\n            payload: response.data,\r\n            correct: true,\r\n          });\r\n          SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", \"La contraseña se ha cambiado existosamente. Puedes iniciar con tu nueva contraseña.\")\r\n        }).catch(err => {\r\n          dispatch({\r\n            type: loginTypes.CONFIRM_PASSWORD,\r\n            payload: err,\r\n            correct: false,\r\n          });\r\n        });\r\n  }\r\n};\r\n\r\nexport const newRegister = (data) => {\r\n  return dispatch => {\r\n    return registerService.newRegister(data)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.NEW_REGISTER,\r\n          payload: true,\r\n          correct: true,\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada exitosamente\", response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.NEW_REGISTER,\r\n          payload: false,\r\n          correct: false,\r\n        });\r\n        ERROR_MODAL('Error al registrar el usuario',  err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getCompanies = () => {\r\n  return dispatch => {\r\n    return registerService.getCompanies()\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_COMPANIES,\r\n          payload: response.data,\r\n        });\r\n        //SUCCESS_MODAL(\"Acción realizada exitosamente\", response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_COMPANIES,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al registrar el usuario',  err.response.message);\r\n      });\r\n  }\r\n};","//Libraries\r\nimport {Form, Icon, Input, Button} from 'antd';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Subcomponents\r\nimport routes from \"../../../../configuration/routing/Routes\";\r\n\r\n//Actions\r\nimport {forgetPassword} from \"../../../../store/redux/actions/general/loginActions\";\r\n\r\n//Assets\r\nimport secondIcon from \"../../../assets/authentication/avanzo.jpg\"\r\n\r\n//Constants\r\nconst FormItem = Form.Item;\r\n\r\nclass ForgotPassword extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state={\r\n      loading: false,\r\n      requestSent: false,\r\n      modal: false,\r\n    };\r\n\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        //console.log(values);\r\n        let email = values.email;\r\n        this.props.forgetPassword(email);\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  sendMessage = (e) => {\r\n  };\r\n\r\n  render() {\r\n\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { forgetPasswordResponse } = this.props;\r\n\r\n    return (\r\n        <div>\r\n          <div className=\"div-logo\">\r\n            <img src={secondIcon} alt=\"icon\" className={\"logo\"} />\r\n          </div>\r\n          <div className={\"login-card\"}>\r\n            <div className=\"login-form\">\r\n              <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                  <div className={\"info\"}>\r\n                    Ingrese su correo electrónico para poder restablecer la contraseña\r\n                  </div>\r\n                  <FormItem>\r\n                      {getFieldDecorator('email', {\r\n                          rules: [{\r\n                              type: 'email', message: 'El texto no es un email válido',\r\n                          },\r\n                              { required: true, message: 'Por favor, inserte su email para enviar un correo' }]\r\n                      })(\r\n                          <Input className={\"form-content\"} prefix={<Icon type=\"mail\" className={\"field-icon\"}/>} placeholder=\"Email\"/>\r\n                      )}\r\n                  </FormItem>\r\n                  \r\n                  <FormItem className={\"submit\"}>\r\n                      <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                          Restablecer\r\n                      </Button>\r\n                      <div>\r\n                          <Link to={routes.login}>\r\n                              <p className={\"url-form\"}>Iniciar Sesión</p>\r\n                          </Link>\r\n                          <Link to={routes.customer_register}>\r\n                              <p className={\"url-form\"}>¿Desea Registrarse?</p>\r\n                          </Link>\r\n                      </div>\r\n                  </FormItem>\r\n              </Form>\r\n            </div>\r\n            \r\n          {(forgetPasswordResponse !== null ? forgetPasswordResponse.message === \"Sample text\" : false) &&\r\n            <Redirect to={routes.login}/>\r\n          }\r\n        </div>\r\n        <div className={\"bottom-title\"}>\r\n          Avanzo © 2020\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nForgotPassword.propTypes = {\r\n  forgetPasswordResponse: PropTypes.object,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    forgetPasswordResponse: state.login.forgetPasswordResponse,\r\n  }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    forgetPassword: (email) => dispatch(forgetPassword(email))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);\r\n","//Libraries\r\nimport { Form, Icon, Input, Button } from 'antd';\r\nimport React, {Component} from 'react';\r\nimport { Redirect } from \"react-router\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\n//Subcomponents\r\nimport routes from \"../../../configuration/routing/Routes\";\r\nimport {ERROR_MODAL} from \"../subcomponents/modalMessages\";\r\n\r\n//Actions\r\nimport {login} from \"../../../store/redux/actions/general/loginActions\";\r\n\r\n//Assets\r\nimport secondIcon from \"../../assets/authentication/avanzo.jpg\";\r\n\r\n//Constants\r\nconst FormItem = Form.Item;\r\n\r\nclass LoginForm extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state={\r\n\r\n      isLoading: false,\r\n      login_success: 0,\r\n      email: '',\r\n      password: '',\r\n      rol: null,\r\n      isLogin: false,\r\n      token: null,\r\n      loginError: null,\r\n    };\r\n\r\n  };\r\n\r\n  onChangeEmail(email) {\r\n    this.setState({ email: email.target.value })\r\n  };\r\n\r\n  onChangePassword(password) {\r\n    this.setState({ password: password.target.value })\r\n  };\r\n\r\n  sendMessage = (e) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (err){\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingrese un email y contraseña válidos.\");\r\n      }else{\r\n        this.props.login(values.email, values.password);\r\n      }     \r\n    });\r\n  };\r\n\r\n  render() {  \r\n\r\n    const { getFieldDecorator } = this.props.form;\r\n    let role = parseInt(localStorage.getItem(\"role_id\"), 10);\r\n    let isLogged = this.props.isLogin !== undefined ? this.props.isLogin : false;\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"div-logo\">\r\n          <img src={secondIcon} alt=\"icon\" className=\"logo\" />\r\n        </div>\r\n        <div className={\"login-card\"}>\r\n          <div className=\"login-form\">\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n              <div>\r\n                <br/>\r\n                <br/>\r\n                <FormItem>\r\n                  {getFieldDecorator('email', { initialValue: '',\r\n                    rules: [\r\n                      {type: \"email\", message: \"Ingrese un correo válido, por favor.\"},\r\n                      {required: true, message: 'Por favor, ingrese su correo electrónico.'}],\r\n                  })(\r\n                    <Input prefix={<Icon type=\"user\" className={\"field-icon\"} />} placeholder=\"Email\" \r\n                    onChange={(value) => this.onChangeEmail(value)}/>\r\n                  )}\r\n                </FormItem>\r\n                <FormItem>\r\n                  {getFieldDecorator('password', {\r\n                    rules: [{ required: true, message: 'Por favor, ingrese su contraseña' }],\r\n                  })(\r\n                  <Input prefix={<Icon type=\"lock\" className={\"field-icon\"} />} type=\"password\" placeholder=\"Contraseña\"\r\n                    onChange={(value) => this.onChangePassword(value)}/>)\r\n                  }\r\n                </FormItem>\r\n                <FormItem className={\"submit\"}>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" \r\n                          onClick={() => this.sendMessage()}>\r\n                    <p className={\"login-button-text\"}>Iniciar Sesión</p>\r\n                  </Button>\r\n                  <div className={\"for-links\"}>\r\n                    <Link to={routes.forgot_password}>\r\n                      <p className={\"url-form\"}>¿Olvidó su contraseña?</p>\r\n                    </Link>\r\n                    <Link to={routes.home }>\r\n                      <p className={\"url-form\"}>¿Desea Registrarse?</p>\r\n                    </Link>\r\n                  </div>\r\n                </FormItem>\r\n              </div>\r\n            </Form>\r\n            \r\n          </div>\r\n        </div>\r\n        <div className={\"bottom-title\"}>\r\n          Avanzo © 2020\r\n        </div>\r\n        {(isLogged && (role===4)) &&\r\n          <Redirect to={routes.customer}/>\r\n        }\r\n        {(isLogged && (role===3)) &&\r\n          <Redirect to={routes.company_request_management}/>\r\n        }\r\n        {(isLogged && (role===2 || role===1)) &&\r\n          <Redirect to={routes.admin_company_management}/>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  isLogin: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLogin: state.login.isLogin\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (email, password) => dispatch(login(email, password))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LoginForm));\r\n","//Libraries\r\nimport axios from 'axios';\r\n\r\n//Subcomponents\r\nimport BaseURL from \"./BaseURL\";\r\n\r\n/*** Create an Axios Client with defaults ***/\r\nlet client = null;\r\n\r\nexport const initializeClient = function () {\r\n  client = axios.create({\r\n    baseURL: BaseURL,\r\n    headers: { 'Authorization': 'Bearer ' + localStorage.integration_token }\r\n  });\r\n};\r\n\r\ninitializeClient();\r\n\r\n/*** Request Wrapper with default success/error actions ***/\r\nconst request = function (options) {\r\n\r\n  const onSuccess = function (response) {\r\n    //console.info('Request Successful: response: ', response);\r\n    return response;\r\n  };\r\n\r\n  const onError = function (error) {\r\n    console.error('Request Failed: Config Sent:', error.config);\r\n\r\n    if (error.response) {\r\n      console.error('Status:', error.response.status);\r\n      console.error('Data:', error.response.data);\r\n      console.error('Headers:', error.response.headers);\r\n\r\n      if(error.response.status === 500){\r\n        error.response.data = \"Error en el servidor\";\r\n      }\r\n    } else {\r\n      console.error('Error Message:', error.message);\r\n    }\r\n    return Promise.reject(error.response || error.message);\r\n  };\r\n\r\n  return client(options).then(onSuccess).catch(onError);\r\n};\r\n\r\nexport default request;","//Subcomponents\r\nimport request from '../requestWrapper';\r\nimport integrationRequest from '../integrationWrapper';\r\n\r\nfunction getHomeData(){\r\n\r\n  return request({\r\n    url: '/Customer/GetInitialData',\r\n    method: 'GET',\r\n  });\r\n};\r\n\r\nfunction getRequestData(customerId, token) {\r\n  if (token === undefined){\r\n    return request({\r\n      url: '/Customer/GetRequestData',\r\n      method: 'GET',\r\n    });\r\n  }else{   \r\n    return integrationRequest({\r\n      url: '/Customer/GetRequestData',\r\n      method: 'GET',\r\n      headers: { \r\n        'Authorization': 'Bearer ' + token \r\n      }\r\n    });\r\n  }\r\n  \r\n};\r\n\r\nfunction getOutLayData(customerId, token) {\r\n  \r\n  if (token === undefined){\r\n    return request({\r\n      url: '/Request/GetOutlayData',\r\n      method: 'GET',\r\n    });\r\n  }else{\r\n    return integrationRequest({\r\n      url: '/Request/GetOutlayData',\r\n      method: 'GET',\r\n      headers: { \r\n        'Authorization': 'Bearer ' + token \r\n      }\r\n    });\r\n  }  \r\n};\r\n\r\nfunction getOultayDatesList(customerId, split, quantity) {\r\n  return request({\r\n    url: '/Request/GetOultayDatesList',\r\n    method: 'GET',\r\n    headers:{\r\n      customerId: customerId,\r\n      split: split,\r\n      quantity: quantity\r\n    }\r\n  });\r\n};\r\n\r\nfunction generateDocuments(customerId, split, quantity) {\r\n  return request({\r\n    url: '/Documents/Generate',\r\n    method: 'GET',\r\n    headers:{\r\n      customerId: customerId,\r\n      split: split,\r\n      quantity: quantity\r\n    }\r\n  });\r\n};\r\n\r\nfunction dataURLtoFile(dataurl, filename) {\r\n \r\n  var arr = dataurl.split(','),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]), \r\n      n = bstr.length, \r\n      u8arr = new Uint8Array(n);\r\n      \r\n  while(n--){\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  \r\n  return new File([u8arr], filename, {type:mime});\r\n};\r\n\r\nfunction createRequest(data, token){\r\n\r\n  let signature = data.file;\r\n\r\n  var file = dataURLtoFile(signature, 'hello.png');\r\n\r\n  var bodyFormData = new FormData();\r\n  \r\n  bodyFormData.append('quantity', data.quantity);\r\n  bodyFormData.append('split', data.split);\r\n  bodyFormData.append('moyen', data.moyen);\r\n  bodyFormData.append('accountType', data.accountType);\r\n  bodyFormData.append('accountNumber', data.accountNumber);\r\n  bodyFormData.append('isBank', data.isBank); \r\n  bodyFormData.append('interest', data.interest);\r\n  bodyFormData.append('administration', data.interest);\r\n  bodyFormData.append('idCompany', data.idCompany);\r\n  bodyFormData.append('identificationId', data.identificationId);\r\n  bodyFormData.append('loanData', data.loanData);\r\n  bodyFormData.append('fileString', signature);\r\n  bodyFormData.append('file', file);\r\n  bodyFormData.append('paymentSupport', data.paymentSupport);\r\n  bodyFormData.append('workingSupport', data.workingSupport);\r\n  \r\n  if (token === undefined){\r\n    return request({\r\n      url: '/Request/Create',\r\n      method: 'POST',\r\n      data: bodyFormData\r\n    });\r\n  }else{  \r\n    return integrationRequest({\r\n      url: '/Request/Create',\r\n      method: 'POST',\r\n      data: bodyFormData,\r\n      headers: { \r\n        'Authorization': 'Bearer ' + token \r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nfunction getAllTransactions(customerId){\r\n  return request({\r\n    url: '/Transactions/GetTransactionsByUserId',\r\n    method: 'GET',\r\n    headers:{\r\n      customerId: customerId\r\n    }\r\n  });\r\n};\r\n\r\nfunction getAllRequest(customerId){\r\n  return request({\r\n    url: '/Request/GetAll',\r\n    method: 'GET',\r\n    headers:{\r\n      customerId: customerId\r\n    }\r\n  });\r\n}\r\n\r\nfunction getAllRequestWasOutlayed(customerId){\r\n  return request({\r\n    url: '/Request/GetAllWasOutlayed',\r\n    method: 'GET',\r\n    headers:{\r\n      customerId: customerId\r\n    }\r\n  });\r\n}\r\n\r\nfunction getAllRequestWasRejected(customerId){\r\n  return request({\r\n    url: '/Request/GetAllWasRejected',\r\n    method: 'GET',\r\n    headers:{\r\n      customerId: customerId\r\n    }\r\n  });\r\n}\r\n\r\nfunction getAccountDetail(){\r\n  return request({\r\n    url: '/Customer/GetAccountDetail',\r\n    method: 'GET'\r\n  });\r\n};\r\n\r\nfunction generateCodes(email, phonenumber, clientid){\r\n  return request({\r\n    url: '/Request/GenerateCodes',\r\n    method: 'GET',\r\n    headers: {\r\n      email: email,\r\n      phonenumber: phonenumber,\r\n      clientid: clientid\r\n    }\r\n  });\r\n}\r\n\r\nconst customerService = {\r\n  getHomeData, getRequestData, getOutLayData, getOultayDatesList, generateDocuments, createRequest,\r\n  getAllTransactions, getAllRequest, getAllRequestWasOutlayed, getAllRequestWasRejected,\r\n  getAccountDetail, generateCodes\r\n};\r\n\r\nexport default customerService;","///Types\r\nimport {customerTypes as C} from '../../types';\r\n\r\n//Services\r\nimport registerService from '../../../../services/customer/registerServices';\r\nimport customerService from '../../../../services/customer/customerServices';\r\n\r\n//Subcomponents\r\nimport { ERROR_MODAL, SUCCESS_MODAL } from '../../../../ui/components/subcomponents/modalMessages';\r\n\r\nexport const getDocumentsTypes = () => {\r\n  return dispatch => {\r\n    return registerService.getDocumentTypes()\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_DOCUMENTS_TYPE,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_DOCUMENTS_TYPE,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer los tipos de documentos', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const register = (data) => {\r\n  return dispatch => {\r\n    return registerService.register(data)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.REGISTER,\r\n          payload: response.data,\r\n          correct: true,\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada exitosamente\", response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.REGISTER,\r\n          payload: err,\r\n          correct: false,\r\n        });\r\n        ERROR_MODAL('Error al registrar el usuario',  err.request.response.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getHomeData = () => {\r\n  return dispatch => {\r\n    return customerService.getHomeData()\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_HOME_DATA,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_HOME_DATA,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la información de inicio', err.data.message);\r\n      });\r\n  };\r\n};\r\n\r\nexport const getRequestData = (customerId, token) => {\r\n  return dispatch => {\r\n    return customerService.getRequestData(customerId, token)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_DATA,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_DATA,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la información particular de la solicitud', err.data.message);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const getOutlayData = (customerId, token) => {\r\n  return dispatch => {\r\n    return customerService.getOutLayData(customerId, token)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_OUTLAY_DATA,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_OUTLAY_DATA,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la información del desembolso', err.data.message);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const getOultayDatesList = (customerId, split, quantity) => {\r\n  return dispatch => {\r\n    return customerService.getOultayDatesList(customerId, split, quantity)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_OUTLAY_DATESLIST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_OUTLAY_DATESLIST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la información de las fechas desembolso.',  err.data.message);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const generateDocuments = (customerId, split, quantity) => {\r\n  return dispatch => {\r\n    return customerService.generateDocuments(customerId, split, quantity)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GENERATE_DOCUMENTS,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GENERATE_DOCUMENTS,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al generar los documentos necesarios.',  err.data.message);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const resetValue = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: C.RESET_VALUES\r\n    });\r\n  }\r\n}\r\n\r\nexport const createRequest = (data, token) => {\r\n\r\n  \r\n  /*let img_b64 = data.file;\r\n  let png = img_b64.split(',')[1];\r\n\r\n  let the_file = new Blob([window.atob(png)],  {type: 'image/png', encoding: 'utf-8'});\r\n\r\n  let fr = new FileReader();\r\n  fr.onload = function ( oFREvent ) {\r\n      let v = oFREvent.target.result.split(',')[1]; // encoding is messed up here, so we fix it\r\n      v = atob(v);\r\n      let good_b64 = btoa(decodeURIComponent(escape(v)));\r\n      document.getElementById(\"uploadPreview\").src = \"data:image/png;base64,\" + good_b64;\r\n  };\r\n  fr.readAsDataURL(the_file);*/\r\n\r\n  return dispatch => {\r\n    return customerService.createRequest(data, token)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.CREATE_REQUEST,\r\n          payload: response.data,\r\n          correct: true,\r\n        });\r\n        SUCCESS_MODAL('Acción realizada exitosamente', response.data.message);\r\n        dispatch(resetValue());\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.CREATE_REQUEST,\r\n          payload: err,\r\n          correct: false\r\n        });\r\n        ERROR_MODAL('Error al crear la solicitud de préstamo.', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllTransactions = (customerId) => {\r\n  return dispatch => {\r\n    return customerService.getAllTransactions(customerId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_TRANSACTIONS_LIST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_TRANSACTIONS_LIST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de transacciones.', err);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const getAllRequest = (customerId) => {\r\n  return dispatch => {\r\n    return customerService.getAllRequest(customerId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_LIST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_LIST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de solicitudes pendientes.', err.data);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const getAllOutlayedRequest = (customerId) => {\r\n  return dispatch => {\r\n    return customerService.getAllRequestWasOutlayed(customerId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_OUTLAYED_REQUEST_LIST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_OUTLAYED_REQUEST_LIST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de solicitudes desembolsadas.', err.data);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const getAllRequestsWasRejected = (customerId) => {\r\n  return dispatch => {\r\n    return customerService.getAllRequestWasRejected(customerId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_REJECTED_REQUEST_LIST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_REJECTED_REQUEST_LIST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de solicitudes rechazadas.', err.data);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const getAccountDetail = () => {\r\n  return dispatch => {\r\n    return customerService.getAccountDetail()\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_ACCOUNT_DETAIL,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_ACCOUNT_DETAIL,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer el detalle de cuenta.', err.data);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const generateCodes = (email, phonenumber, clientid) => {\r\n  return dispatch => {\r\n    return customerService.generateCodes(email, phonenumber, clientid)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GENERATE_CODES,\r\n          payload: response.data,\r\n          code: true\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GENERATE_CODES,\r\n          payload: err,\r\n          code: true\r\n        });\r\n        ERROR_MODAL('Error al generar los códigos de validación.', err.data);\r\n      });\r\n  };\r\n};  ","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { Button, Form, Icon, Input, Col, Row, Modal, Select, InputNumber, DatePicker} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport moment from 'moment';\r\n\r\n//Subcomponents\r\nimport routes from '../../../../configuration/routing/Routes';\r\nimport {ERROR_MODAL} from \"../../subcomponents/modalMessages\";\r\n\r\n//Actions\r\nimport {getDocumentsTypes, register} from \"../../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../../styles/authentication/loginCustomer.css';\r\n\r\n//Assets\r\nimport logo from '../../../assets/authentication/avanzo.jpg';\r\nimport signInBackground from '../../../assets/authentication/background.png';\r\nimport signInBackground2 from  '../../../assets/authentication/background.png';\r\n\r\n//Constants\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass RegisterCustomer extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      isLoading: false,\r\n      captchaSolved: true,\r\n      email: null,\r\n      login: null,\r\n    };\r\n\r\n    this.onSignInClicked = this.onSignInClicked.bind(this);\r\n    this.handleEmail = this.handleEmail.bind(this);\r\n\r\n    this.props.getDocumentsTypes();\r\n\r\n  };\r\n\r\n  onSignInClicked(){\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    this.props.form.validateFields((err, values) => {\r\n      if (err){\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingrese un email y contraseña válidos.\");\r\n      }else{\r\n        values.birthDate = moment(values.birthDate._d).format();\r\n        values.expeditionDate = moment(values.expeditionDate._d).format();\r\n        this.props.register(values);\r\n      }     \r\n    });\r\n  };\r\n\r\n  handleEmail(e){\r\n    this.setState({\r\n      email: e,\r\n    });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Las dos contraseñas no coinciden');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  render(){\r\n    \r\n    let { login } = this.state;\r\n    let { idDocumentsTypes, registerResponse } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <div className=\"div-meeting\">\r\n          <div className='sign-in-background-crop'>\r\n            <img className='sign-in-background' alt='background' src={signInBackground} />\r\n            <img className='background2' alt='background2' src={signInBackground2} />\r\n          </div>\r\n          <Form className='home-form'>        \r\n          <div className='home-logo-div'>\r\n            <div className='home-logo-container'>\r\n              <img className='home-logo' alt='home-logo' src={logo} />\r\n            </div>\r\n          </div>\r\n          <Row gutter={8}>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('name', { initialValue: '',\r\n                  rules: [\r\n                    { required: true, message: 'Por favor, ingrese su(s) nombre(s).' }],\r\n                })(\r\n                    <Input prefix={<Icon type=\"user\" className={'icon-prefix'} />}\r\n                          placeholder=\"Nombres\"/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('lastName', { initialValue: '',\r\n                  rules: [\r\n                    { required: true, message: 'Por favor, ingrese su(s) apellido(s).' }],\r\n                })(\r\n                    <Input prefix={<Icon type=\"user\" className={'icon-prefix'} />}\r\n                          placeholder=\"Apellidos\"/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n          </Row> \r\n          <Row gutter={8}>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n            <FormItem className='home-form-item'>\r\n                {getFieldDecorator('documentType', {\r\n                  rules: [{ required: true, message: 'Por ingrese su tipo de documento' }],\r\n                })(\r\n                  <Select placeholder={'Tipo de documento'} allowClear={true} showSearch={true}\r\n                    notFoundContent={\"No hay tipos de documento disponibles\"}>\r\n                      {idDocumentsTypes.map((type, i) => (\r\n                        <Select.Option key={i} value={type.typeName}>\r\n                          {type.typeName}\r\n                        </Select.Option>))\r\n                      }\r\n                  </Select>)\r\n                }\r\n                </FormItem>\r\n            </Col>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('identificationId', {\r\n                  initialValue: '',\r\n                  rules: [{ required: true, message: 'Por favor ingrese su número de cédula' }],\r\n                })(\r\n                    <InputNumber prefix={<Icon type=\"idcard\" className={'icon-prefix'} />}\r\n                                 placeholder=\"Número de documento\" className={\"input-number\"}/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={8}>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('expeditionDate', {\r\n                  rules: [{ required: true, message: 'Por favor ingrese la fecha de expedición de su documento' }],\r\n                })(\r\n                  <DatePicker placeholder=\"Fecha de expedición\" className={\"input-number\"}/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('birthDate', {\r\n                  rules: [{ required: true, message: 'Por ingrese su fecha de nacimiento' }],\r\n                })(\r\n                    <DatePicker placeholder=\"Fecha de nacimiento\" className={\"input-number\"}/>)}\r\n              </FormItem>\r\n            </Col>\r\n          </Row>          \r\n          <Row gutter={8}>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('email', { initialValue: '',\r\n                  rules: [ \r\n                    {type: 'email', message: 'Por favor, ingrese un correo electrónico válido.'},\r\n                    {required: true, message: 'Por favor, ingrese su correo electrónico.' }],\r\n                })(\r\n                    <Input prefix={<Icon type=\"mail\" className={'icon-prefix'} />}\r\n                          placeholder=\"Correo electrónico\"/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('phoneNumber', {\r\n                  initialValue: '',\r\n                  rules: [{ required: true, message: 'Por favor ingrese el celular' }],\r\n                })(\r\n                <InputNumber prefix={<Icon type=\"phone\" className={'icon-prefix'} />} \r\n                             placeholder=\"Celular\" className={\"input-number\"}/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={8}>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('password', { \r\n                  initialValue: '',\r\n                  rules: [ \r\n                    {required: true, message: 'Por favor, ingrese su contraseña.' }, {min: 6, message: \"Mínimo 6 caracteres.\"},\r\n                    {pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)^(?=.*[!@#\\\\$%\\\\^&.,\\\\*])', message: \"La contraseña debe contener al menos una mayúscula, una minúscula, un número y un caracter especial\"}],\r\n                })(<Input type=\"password\" prefix={<Icon type=\"lock\" className={'icon-prefix'} />}\r\n                          placeholder=\"Contraseña\"/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('confirmPassword', {\r\n                  initialValue: '',\r\n                  rules: [\r\n                    {required: true, message: 'Confirme la contraseña'},\r\n                    {validator: this.compareToFirstPassword}\r\n                  ],\r\n                })(<Input type=\"password\" prefix={<Icon type=\"lock\" className={'icon-prefix'} />} \r\n                             placeholder=\"Confirme contraseña\" className={\"input-number\"}/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <div className={'home-buttons-div'}>\r\n            <Row gutter={24}>\r\n              <Col lg={12} md={12} sm={12} xs={24} xxs={24} className={\"register-col\"}>\r\n                <Button className={\"register-button\"}  onClick={() => this.onSignInClicked()}\r\n                        icon=\"user-add\">\r\n                  Registrarse\r\n                </Button>\r\n              </Col>\r\n              <Col lg={12} md={12} sm={12} xs={24} xxs={24} className={\"login-col\"}>\r\n                <Button type=\"primary\" className={\"login-button\"} onClick={() => this.setState({login: true})}\r\n                      icon=\"login\" loading={false}>\r\n                    Iniciar sesión\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            \r\n          </div>\r\n          <Modal\r\n            title={\"Términos y Condiciones\"}\r\n            visible={this.state.visibleTermModal}\r\n            onCancel={() => this.setState({visibleTermModal: false})}\r\n            footer={\r\n              <Button key='submit' type='primary' onClick={() => this.setState({visibleTermModal: false})}>\r\n                Aceptar\r\n              </Button>}\r\n          >\r\n            <div>\r\n              <p dangerouslySetInnerHTML={{ __html: this.props.terms }}/>\r\n            </div>\r\n          </Modal>\r\n        </Form>    \r\n\r\n          {\r\n            (login) && \r\n            <Redirect to={routes.login}/>\r\n          }\r\n          {\r\n            (registerResponse) && \r\n            <Redirect to={routes.confirm_account}/>\r\n          }\r\n        </div> \r\n    );\r\n  \r\n  };\r\n  \r\n}\r\n\r\nRegisterCustomer.propTypes = {\r\n  idDocumentsTypes: PropTypes.array,\r\n  registerResponse: PropTypes.bool,\r\n  registerDataResponse: PropTypes.object,\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    idDocumentsTypes: state.customer.idDocumentsTypes,\r\n    registerResponse: state.customer.registerResponse,\r\n    registerDataResponse: state.customer.registerDataResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getDocumentsTypes: () => dispatch(getDocumentsTypes()),\r\n    register: (data) => dispatch(register(data)),\r\n  }\r\n};\r\n\r\nlet WrappedRegisterCustomer = Form.create()(RegisterCustomer);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegisterCustomer);\r\n","//Libraries\r\nimport {Form, Icon, Button} from 'antd';\r\nimport {Redirect, NavLink} from \"react-router-dom\";\r\nimport React, {Component} from 'react';\r\n\r\n//Subcomponents\r\nimport routes from \"../../../configuration/routing/Routes\";\r\n\r\n//Actions\r\nimport { SUCCESS_MODAL } from '../subcomponents/modalMessages';\r\n\r\n//Assets\r\nimport secondIcon from \"../../assets/authentication/avanzo.jpg\";\r\n\r\n//Constants\r\nconst FormItem = Form.Item;\r\n\r\nclass ConfirmedAccount extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state={\r\n      loading: false,\r\n      requestSent: false,\r\n      modal: false,\r\n    };\r\n\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const accountInfo = {\r\n          email: values.email\r\n        };\r\n        this.props.recoverPassword(accountInfo);\r\n        this.setState({requestSent: true});\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  sendMessage = (e) => {\r\n    SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", \"Se ha enviado un correo electrónico con las instrucciones necesarias para restablecer la contraseña.\")\r\n  };\r\n\r\n  render() {\r\n\r\n    //const { getFieldDecorator } = this.props.form;\r\n    const {requestSent} = this.state;\r\n\r\n    return (\r\n        <div>\r\n          <div className=\"div-logo\">\r\n            <img src={secondIcon} alt=\"icon\" className={\"logo-confirmed\"} />\r\n          </div>\r\n          <div className={\"login-card-confirmed\"}>\r\n            <div className=\"login-form\">\r\n              <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <div className={\"confirm_account\"}>\r\n                  <div className={\"confirm_account_text\"}>\r\n                      <p><Icon className='question-button' type='check-circle'/>Has sido registrado exitosamente. Luego del proceso de aprobación interno, será enviado un correo que permitirá realizar la confirmación de la cuenta.</p>\r\n                      <p>Luego de que se realice la validación, podrás iniciar sesión con tu correo y contraseña.</p>\r\n                  </div>\r\n                </div>\r\n                <FormItem className={\"submit\"}>\r\n                  <NavLink to={routes.login} >\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" >\r\n                      <p className={\"login-button-text\"}>Iniciar sesión</p>\r\n                    </Button>\r\n                  </NavLink>\r\n                </FormItem>\r\n\r\n              </Form>\r\n            </div>\r\n            \r\n          {requestSent === true &&\r\n            <Redirect to={routes.login}/>\r\n          }\r\n        </div>\r\n        <div className={\"bottom-title\"}>\r\n          Avanzo © 2020\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (ConfirmedAccount);","//Subcomponents\r\nimport request from '../requestWrapper';\r\n\r\nfunction registerAdmin(data) {\r\n  return request({\r\n    url: '/Account/RegisterAdministrator',\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n};\r\n\r\nfunction createCompany(data){\r\n  return request({\r\n    url: '/Company/Create',\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n};\r\n\r\nfunction updateCompany(data){\r\n  return request({\r\n    url: '/Company/Update',\r\n    method: 'PUT',\r\n    data: data\r\n  });\r\n};\r\n\r\nfunction updateCompanySalaries(data){\r\n  return request({\r\n    url: '/Company/UpdateCompanySalaries',\r\n    method: 'PUT',\r\n    data: data\r\n  });\r\n};\r\n\r\nfunction createCustomer(data){\r\n  return request({\r\n    url: '/Customer/Create',\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n};\r\n\r\nfunction updateCustomer(data){\r\n  return request({\r\n    url: '/Customer/Update',\r\n    method: 'PUT',\r\n    data: data\r\n  });\r\n};\r\n\r\nfunction activateCustomer(clientId, status){\r\n  return request({\r\n    url: '/Customer/ChangePlatformStatus',\r\n    method: 'GET',\r\n    headers:{\r\n      clientId: clientId,\r\n      status: status\r\n    }\r\n  });\r\n};\r\n\r\nfunction createMultipleCustomer(data){\r\n  return request({\r\n    url: '/Customer/CreateMultiple',\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n};\r\n\r\nfunction activateCompany(companyid, status){\r\n  return request({\r\n    url: '/Company/ChangePlatformStatus',\r\n    method: 'PUT',\r\n    headers:{\r\n      companyid: companyid,\r\n      status: status\r\n    }\r\n  });\r\n};\r\n\r\nfunction getAllRequest(userId){\r\n  return request({\r\n    url: '/Request/GetAllByAdmin',\r\n    method: 'GET',\r\n    headers:{\r\n      userId: userId\r\n    }\r\n  });\r\n};\r\n\r\nfunction getAllRequestToOutLay(userId){\r\n  return request({\r\n    url: '/Request/GetAllToOutLayByAdmin',\r\n    method: 'GET',\r\n    headers:{\r\n      userId: userId\r\n    }\r\n  });\r\n};\r\n\r\nfunction getAllRequestToApprove(){\r\n  return request({\r\n    url: '/Request/GetToApproveByAdmin',\r\n    method: 'GET'\r\n  });\r\n};\r\n\r\nfunction getAllCompanies(){\r\n  return request({\r\n    url: '/Company/GetAll',\r\n    method: 'GET'\r\n  });\r\n};\r\n\r\nfunction getAllCompaniesWithSalaries(companyid){\r\n  return request({\r\n    url: '/Company/GetWithSalaries',\r\n    method: 'GET',\r\n    headers:{\r\n      companyid: companyid\r\n    }\r\n  });\r\n}\r\n\r\nfunction getAllCustomers(){\r\n  return request({\r\n    url: '/Customer/GetAllWithCompany',\r\n    method: 'GET'\r\n  });\r\n};\r\n\r\nfunction getAllCustomersToApprove(){\r\n  return request({\r\n    url: '/Customer/GetAllToApprove',\r\n    method: 'GET'\r\n  });\r\n};\r\n\r\nfunction getAllRejectedRequest(){\r\n  return request({\r\n    url: '/Request/GetAllRejected',\r\n    method: 'GET'\r\n  });\r\n};\r\n\r\nfunction getAllPendingRHRequest(){\r\n  return request({\r\n    url: '/Request/GetAllPendingRRHH',\r\n    method: 'GET'\r\n  });\r\n};\r\n\r\nfunction getDateListToCustomer(companyid){\r\n  return request({\r\n    url: '/Customer/GetDateListToCustomer',\r\n    method: 'GET',\r\n    headers:{\r\n      companyid: companyid\r\n    }\r\n  });\r\n};\r\n\r\nfunction approveCustomer(client, approve, cycleId){\r\n\r\n  return request({\r\n    url: '/Customer/ApproveorReject',\r\n    method: 'PUT',\r\n    headers: {\r\n      clientId: parseInt(client, 10),\r\n      approve: approve,\r\n      cycleId: cycleId\r\n    }\r\n  });\r\n\r\n};\r\n\r\n\r\nfunction deleteClient(client){\r\n\r\n  return request({\r\n    url: '/Customer/Delete',\r\n    method: 'PUT',\r\n    headers: {\r\n      clientId: parseInt(client, 10),\r\n    }\r\n  });\r\n  \r\n};\r\n\r\nconst adminService = {\r\n  registerAdmin, createCompany, createCustomer, createMultipleCustomer, \r\n  getAllRequest, getAllRequestToOutLay, getAllRequestToApprove, getAllCompanies, getAllCustomers,\r\n  getAllCustomersToApprove, approveCustomer, updateCompany, activateCustomer, updateCustomer,\r\n  getAllCompaniesWithSalaries, activateCompany, getDateListToCustomer, getAllRejectedRequest,\r\n  getAllPendingRHRequest, deleteClient, updateCompanySalaries\r\n};\r\n\r\nexport default adminService;","///Types\r\nimport {adminTypes as C} from '../../types';\r\n\r\n//Services\r\nimport adminServices from '../../../../services/admin/adminServices';\r\n\r\n//Subcomponents\r\nimport { ERROR_MODAL, SUCCESS_MODAL, CONFIRM_MODAL } from '../../../../ui/components/subcomponents/modalMessages';\r\n\r\nexport const resetValue = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: C.RESET_VALUES\r\n    });\r\n  }\r\n}\r\n\r\nexport const registerAdmin = (data) => {\r\n  return dispatch => {\r\n    return adminServices.registerAdmin(data)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.REGISTER_ADMIN,\r\n          payload: true\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.REGISTER_ADMIN,\r\n          payload: false,\r\n        });\r\n        if(err.data){\r\n          ERROR_MODAL('Error al registrar el administrador', err.data.message);\r\n        }\r\n      });\r\n  }\r\n};\r\n\r\nexport const createCompany = (data) => {\r\n  return dispatch => {\r\n    return adminServices.createCompany(data)\r\n      .then(response => {\r\n        dispatch(getAllCompanies());\r\n        dispatch({\r\n          type: C.CREATE_COMPANY,\r\n          payload: response.data,\r\n          correct: true,\r\n        });\r\n        CONFIRM_MODAL('Acción realizada exitosamente', response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.CREATE_COMPANY,\r\n          payload: err,\r\n          correct: false,\r\n        });\r\n        ERROR_MODAL('Error al crear la empresa', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const updateCompany = (data) => {\r\n  return dispatch => {\r\n    return adminServices.updateCompany(data)\r\n      .then(response => {\r\n        dispatch(getAllCompanies());\r\n        dispatch({\r\n          type: C.UPDATE_COMPANY,\r\n          payload: response.data,\r\n          correct: true,\r\n        });\r\n        SUCCESS_MODAL('Acción realizada exitosamente', response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.UPDATE_COMPANY,\r\n          payload: err,\r\n          correct: false,\r\n        });\r\n        ERROR_MODAL('Error al editar la empresa', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const updateCompanySalaries = (data) => {\r\n  return dispatch => {\r\n    return adminServices.updateCompanySalaries(data)\r\n      .then(response => {\r\n        dispatch(getCompanyWithSalary());\r\n        dispatch({\r\n          type: C.UPDATE_COMPANY_SALARIES,\r\n          payload: response.data,\r\n          correct: true,\r\n        });\r\n        SUCCESS_MODAL('Acción realizada exitosamente', response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.UPDATE_COMPANY_SALARIES,\r\n          payload: err,\r\n          correct: false,\r\n        });\r\n        ERROR_MODAL('Error al editar el ciclo de pago', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const createCustomer = (data) => {\r\n  return dispatch => {\r\n    return adminServices.createCustomer(data)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.CREATE_CUSTOMER,\r\n          payload: response.data,\r\n          correct: true,\r\n        });\r\n        //SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El cliente ha sido creado satisfactoriamente\");\r\n        CONFIRM_MODAL(\"Acción realizada exitosamente\", \"El cliente ha sido creado satisfactoriamente\");\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.CREATE_CUSTOMER,\r\n          payload: err,\r\n          correct: false,\r\n        });\r\n        ERROR_MODAL('Error al crear el cliente', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const updateCustomer = (data) => {\r\n  return dispatch => {\r\n    return adminServices.updateCustomer(data)\r\n      .then(response => {\r\n        dispatch(getAllCustomers());\r\n        dispatch({\r\n          type: C.UPDATE_CUSTOMER,\r\n          payload: response.data\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El cliente ha sido actualizado satisfactoriamente\");\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.UPDATE_CUSTOMER,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al actualizar el cliente', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const activateCustomer = (clientId, status) => {\r\n  return dispatch => {\r\n    return adminServices.activateCustomer(clientId, status)\r\n      .then(response => {\r\n        dispatch(getAllCustomers());\r\n        dispatch({\r\n          type: C.ACTIVATE_CUSTOMER,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.ACTIVATE_CUSTOMER,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al activar el cliente', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const activateCompany = (clientId, status) => {\r\n  return dispatch => {\r\n    return adminServices.activateCompany(clientId, status)\r\n      .then(response => {\r\n        dispatch(getAllCompanies());\r\n        dispatch({\r\n          type: C.ACTIVATE_COMPANY,\r\n          payload: response.data\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.ACTIVATE_COMPANY,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al activar la empresa.', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const createMultipleCustomer = (data) => {\r\n  return dispatch => {\r\n    return adminServices.createMultipleCustomer(data)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.CREATE_MULTIPLE_CUSTOMER,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.CREATE_MULTIPLE_CUSTOMER,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al crear múltiples clientes', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllRequest = (userId) => {\r\n  return dispatch => {\r\n    return adminServices.getAllRequest(userId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_LIST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_LIST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de solicitudes', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllRequestToApprove = () => {\r\n  return dispatch => {\r\n    return adminServices.getAllRequestToApprove()\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_TO_APPROVE,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_TO_APPROVE,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de solicitudes para aprobar', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllRejectedRequest = () => {\r\n  return dispatch => {\r\n    return adminServices.getAllRejectedRequest()\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_REJECTED_REQUEST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_REJECTED_REQUEST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de solicitudes rechazadas', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllPendingRHRequest = () => {\r\n  return dispatch => {\r\n    return adminServices.getAllPendingRHRequest()\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_PENDINGRH_REQUEST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_PENDINGRH_REQUEST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de solicitudes pendientes por RR.HH.', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllRequestToOutLay = (userId) => {\r\n  return dispatch => {\r\n    return adminServices.getAllRequestToOutLay(userId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_TO_OUTLAY,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_TO_OUTLAY,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de solicitudes para desembolsar', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllCompanies = ( ) => {\r\n  return dispatch => {\r\n    return adminServices.getAllCompanies( )\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_ALL_COMPANIES,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_ALL_COMPANIES,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de empresas', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getCompanyWithSalary = (companyid) => {\r\n  return dispatch => {\r\n    return adminServices.getAllCompaniesWithSalaries(companyid)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_COMPANY_WITH_SALARY,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_COMPANY_WITH_SALARY,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la información de la empresa', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllCustomers = ( ) => {\r\n  return dispatch => {\r\n    return adminServices.getAllCustomers( )\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_ALL_CUSTOMERS,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_ALL_CUSTOMERS,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de clientes', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllCustomersToApprove = ( ) => {\r\n  return dispatch => {\r\n    return adminServices.getAllCustomersToApprove( )\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_CUSTOMERS_TO_APPROVE,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_CUSTOMERS_TO_APPROVE,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de clientes', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getDateListToCustomer = (companyId) => {\r\n  return dispatch => {\r\n    return adminServices.getDateListToCustomer(companyId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_DATELIST_TO_CUSTOMER,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_DATELIST_TO_CUSTOMER,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer las fechas de la empresa de clientes', err.data);\r\n      });\r\n  }\r\n};\r\n\r\n\r\n\r\nexport const approveCustomers = (client, approve, cycleId) => {\r\n\r\n  return dispatch => {\r\n    return adminServices.approveCustomer(client, approve, cycleId)\r\n      .then(response => {\r\n        dispatch(getAllCustomersToApprove());\r\n        dispatch({\r\n          type: C.APPROVE_CUSTOMERS,\r\n          payload: response.data\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", response.data);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.APPROVE_CUSTOMERS,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al modificar el estado del cliente', err.data);\r\n      });\r\n  }\r\n\r\n};\r\n\r\nexport const deleteClient = (client) => {\r\n  \r\n  return dispatch => {\r\n    return adminServices.deleteClient(client)\r\n      .then(response => {\r\n        dispatch(getAllCustomers());\r\n        dispatch({\r\n          type: C.DELETE_CUSTOMERS,\r\n          payload: response.data\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.DELETE_CUSTOMERS,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al realizar el proceso', err.data);\r\n      });\r\n  }\r\n};","//Libraries\r\nimport {Form, Icon, Input, Button} from 'antd';\r\nimport React, {Component} from 'react';\r\nimport { Redirect } from \"react-router\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\n//Assets\r\nimport secondIcon from \"../../../assets/authentication/avanzo.jpg\"\r\n\r\n//Subcomponents\r\nimport {ERROR_MODAL} from \"../../subcomponents/modalMessages\";\r\nimport routes from \"../../../../configuration/routing/Routes\";\r\n\r\n//Actions\r\nimport {registerAdmin} from \"../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Constants\r\nconst FormItem = Form.Item;\r\n\r\nclass Register extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      names: null,\r\n      username: null,\r\n      description: null,\r\n      email: null,\r\n      password: null,\r\n      loginError: null,\r\n    };\r\n\r\n    this.onChangeValue = this.onChangeValue.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    //this.handleSubmit = this.handleSubmit.bind(this);\r\n  };\r\n\r\n  onChangeValue(value, param){\r\n    let modifier = this.state;\r\n    modifier[param] = value.target.value;\r\n    if(param !== \"\"){\r\n      this.setState({\r\n        state: modifier\r\n      });\r\n    }else{\r\n      ERROR_MODAL(\"Acción erronea\", \"Los valores ingresados están incompletos o están vacíos.\")\r\n    }\r\n  };\r\n\r\n  onChangeEmail(e){\r\n    this.setState({\r\n      email: e,\r\n    });\r\n  };\r\n\r\n  onChangePassword(e){\r\n    this.setState({\r\n      email: e,\r\n    });\r\n  };\r\n\r\n  onSignInClicked(){\r\n    this.props.form.validateFields((err, values) => {\r\n      if (err){\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingrese un email y contraseña válidos.\");\r\n      }else{\r\n        \r\n        let data = values;\r\n        let nameSplit = values.name.split(\" \");\r\n        data.name = nameSplit[0];\r\n        data.lastName = nameSplit[1];\r\n        data.confirmationPassword = values.password;\r\n        this.props.registerAdmin(data);\r\n      }     \r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    //let { login } = this.state;\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"div-logo\">\r\n          <img src={secondIcon} alt=\"icon\" className=\"logo\" />\r\n        </div>\r\n        <div className={\"login-card\"}>\r\n          <div className=\"login-form\">\r\n            <Form className=\"login-form\">\r\n              <div>\r\n                <br/>\r\n                <FormItem>\r\n                  {getFieldDecorator('name', {\r\n                    rules: [{ required: true, message: 'Ingrese sus nombres y apellidos, por favor.' }],\r\n                  })(\r\n                    <Input prefix={<Icon type=\"user\" className={\"field-icon\"} />} placeholder=\"Nombre - Apellido\"/>)\r\n                  }\r\n                </FormItem>\r\n                <FormItem>\r\n                  {getFieldDecorator('identificationId', {\r\n                    rules: [{ required: true, message: 'Ingrese su número de identificación, por favor.' }],\r\n                  })(\r\n                    <Input prefix={<Icon type=\"number\" className={\"field-icon\"} />} placeholder=\"Número de identificación\"/>)\r\n                  }\r\n                </FormItem>\r\n                <FormItem>\r\n                  {getFieldDecorator('email', { initialValue: '',\r\n                    rules: [\r\n                      {type: \"email\", message: \"Ingrese un correo válido, por favor.\"},\r\n                      {required: true, message: 'Por favor, ingrese su correo electrónico.'}],\r\n                  })(\r\n                    <Input prefix={<Icon type=\"mail\" className={\"field-icon\"} />} placeholder=\"Email\"/>\r\n                  )}\r\n                </FormItem>\r\n                <FormItem>\r\n                  {getFieldDecorator('password', {\r\n                    rules: [{ required: true, message: 'Por ingrese su contraseña' }],\r\n                  })(\r\n                  <Input prefix={<Icon type=\"lock\" className={\"field-icon\"} />} type=\"password\" placeholder=\"Contraseña\"/>)\r\n                  }\r\n                </FormItem>\r\n                \r\n                <FormItem className={\"submit\"}>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" \r\n                          onClick={() => this.onSignInClicked()}>\r\n                    <p className={\"login-button-text\"}>Registrarse</p>\r\n                  </Button>\r\n                  <div className={\"for-links\"}>\r\n                    <Link to={routes.login}>\r\n                      <p className={\"url-form\"}>Iniciar sesión</p>\r\n                    </Link>\r\n                  </div>\r\n                </FormItem>\r\n              </div>\r\n            </Form>\r\n            \r\n          </div>\r\n        </div>\r\n        <div className={\"bottom-title\"}>\r\n          Avanzo © 2020\r\n        </div>\r\n        {\r\n          (this.props.registerAdminResponse) && \r\n          <Redirect to={routes.login}/>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerAdminResponse: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    registerAdminResponse: state.admin.registerAdminResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    registerAdmin: (data) => dispatch(registerAdmin(data)),\r\n  }\r\n};\r\n\r\nlet WrappedRegisterAdmin = Form.create()(Register);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegisterAdmin);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Card, Row, Col, Layout, Menu, Form, Input, Icon, Button, Select, Checkbox, Modal} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\n//Subcomponents\r\nimport routes from '../../../configuration/routing/Routes';\r\n\r\n//Actions\r\nimport {newRegister, getCompanies} from \"../../../store/redux/actions/general/loginActions\";\r\n\r\n//Assets\r\nimport icon from \"../../assets/authentication/avanzoMenu.jpg\";\r\nimport home from \"../../assets/home2.PNG\";\r\n\r\n//Styles\r\nimport '../../styles/home/home.css'\r\nimport { ERROR_MODAL, WARNING_MODAL, allowEmergingWindows } from '../subcomponents/modalMessages';\r\n\r\n//Functions\r\n/*function format(d) {\r\n  var formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  });\r\n\r\n  return formatter.format(d);\r\n};*/\r\n\r\n//Constants\r\nconst { Header } = Layout;\r\nconst FormItem = Form.Item;\r\n//const { Dragger } = Upload;\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      documentId: null,\r\n      photo: null,\r\n      paymentReport: null,\r\n      sliderValue: 300000,\r\n      login: null,\r\n      checkBox1: false,\r\n      visibleTermModal: false,\r\n      clicked: false,\r\n    };\r\n    \r\n    this.next = this.next.bind(this);\r\n    this.previous = this.previous.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleSliderChange = this.handleSliderChange.bind(this);\r\n    this.carousel = React.createRef();\r\n\r\n    this.props.getCompanies();\r\n\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // You don't have to do this check first, but it can help prevent an unneeded render\r\n    if (prevProps.newRegisterResponse !== this.props.newRegisterResponse) {\r\n      this.setState({ clicked: null });\r\n    }\r\n  }\r\n\r\n  next() {\r\n    this.carousel.next();\r\n  };\r\n\r\n  previous() {\r\n    this.carousel.prev();\r\n  };\r\n\r\n  onSignInClicked(){\r\n    //console.log(\"entro\");\r\n    let { documentId, photo, paymentReport, checkBox1 } = this.state;\r\n    this.props.form.validateFields((err, values) => {\r\n      if (err ){\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor, ingresa datos válidos, carga los archivos correspondientes y acepta los términos y condiciones.\");\r\n      }else if(documentId === null && photo === null && paymentReport === null ){\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor, carga los archivos correspondientes.\");\r\n      }else if(checkBox1 === false ){\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor, acepta los términos y condiciones.\");\r\n      }else{\r\n        if(documentId !== null && photo !== null && paymentReport !== null ){\r\n  \r\n          if(values.password !== values.confirmPassword){\r\n            WARNING_MODAL(\"Las contraseñas no coinciden\");\r\n          }else if(values.phoneNumber.toString()[0] !== \"3\" || values.phoneNumber.toString().length !== 10 ){\r\n            ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingresa un número de teléfono válido.\");\r\n          }else{\r\n            \r\n            let data = values;\r\n            data.documentId = documentId;\r\n            data.photo = photo;\r\n            data.documentId = documentId;\r\n            data.paymentReport = paymentReport;\r\n            data.sliderValue = this.state.sliderValue;\r\n            \r\n            //Actions\r\n            this.props.newRegister(data);\r\n          }\r\n        }else{\r\n          ERROR_MODAL(\"Error al realizar la acción\", \"Alguno de los archivos no ha sido cargado correctamente.\");\r\n        }\r\n\r\n      }     \r\n    });\r\n  };\r\n\r\n  handleSliderChange = (e) => {\r\n    this.setState({\r\n      sliderValue: Math.round(e),\r\n    });\r\n  };\r\n\r\n  onChange(e) {\r\n    //let { documentId, photo, paymentReport } = this.state;\r\n    let fileType = e.target.files;\r\n    for (let file in fileType){\r\n      //console.log(file===0);\r\n      if(parseInt(file,10) === 0){\r\n        this.setState({\r\n          documentId: fileType[0]\r\n        });\r\n      }\r\n      if(parseInt(file,10) === 1){\r\n        this.setState({\r\n          photo: fileType[1]\r\n        });\r\n      }\r\n      if(parseInt(file,10) === 2){\r\n        this.setState({\r\n          paymentReport: fileType[2]\r\n        });\r\n      }\r\n    }\r\n    //console.log(fileType);\r\n    /*if (status !== 'uploading') {\r\n      //console.log(info.file, info.fileList);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }*/\r\n  };\r\n\r\n  onChangeField(e, param){\r\n    let partner = this.state.partner;\r\n    if(param !== \"checkBox1\"){\r\n      this.setState({\r\n        [param]: e.target.value\r\n      });\r\n    }else{\r\n      this.setState({\r\n        checkBox1: e.target.checked\r\n      });\r\n    }\r\n    this.setState({\r\n      partner: partner\r\n    });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Las dos contraseñas no coinciden');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  onChangeName = (rule, value, callback) => {\r\n    //const { value } = e.target;\r\n    //const reg = /^-?[0-9]*(\\.[0-9]*)?$/;\r\n    const reg = /[^a-zA-Z\\s]$/;\r\n    if ((!isNaN(value) && reg.test(value)) || value === '' || value === '-') {\r\n      callback('Ingresa los nombres correctamente.');\r\n    }else{\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validationLetters = (e) => {\r\n    const input = e.target.value;\r\n    //e.target.value = input.replace(/[^a-zA-Z\\s]$/g, '');\r\n    e.target.value = input.replace(/[^A-zÀ-ú\\s]$/g, '');\r\n    \r\n    //e.target.value = input.replace(/[A-Za-zÀ-ÖØ-öø-ÿ]$/g, '');\r\n    //[A-Za-zÀ-ÖØ-öø-ÿ]\r\n  };\r\n\r\n  validationNumbers = (e) => {\r\n    const input = e.target.value\r\n    e.target.value = input.replace(/[^0-9]/g, '')\r\n  };\r\n\r\n  openTermsandConditions = () => {\r\n    this.setState({\r\n      visibleTermModal: true\r\n    });\r\n    \r\n    let file1 = \"https://drive.google.com/open?id=1QmZLrbxljJAcsHqY9EOL8epl6-wPLloj\";\r\n    let file2 = \"https://drive.google.com/open?id=1tW9L5Mg7mKxfhZdwR2QqcAvJNnc8PXev\";\r\n\r\n    if (file1 !== null && file2 !== null) {\r\n      let newWindow = window.open(file1, \"_blank\");\r\n      let newWindow1 = window.open(file2, \"_blank\");\r\n      if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined' ||\r\n          !newWindow1 || newWindow1.closed || typeof newWindow1.closed === 'undefined'){\r\n        allowEmergingWindows();\r\n      }\r\n    }else {\r\n      WARNING_MODAL('Advertencia', 'Los términos y condiciones no están disponibles. Intenta más tarde.');\r\n    }\r\n\r\n    this.setState({\r\n      visibleTermModal: true\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    /*const marks = {0: { style: { color: '#000', }, label: <p className={\"left-marker\"}>$80.000</p>},\r\n                   100: { style: { color: '#1c77ff', }, label: <p className={\"right-marker\"}>$300.000</p>}};*/\r\n    const { getFieldDecorator } = this.props.form;\r\n    let { companyList } = this.props;\r\n\r\n    return (\r\n      <div >\r\n        <Layout>\r\n          <Header className={\"header-menu1\"} >         \r\n            <Menu\r\n              mode=\"horizontal\"\r\n              className={\"menu-home-style\"}>\r\n                <Menu.Item>\r\n                  <img src={icon} alt=\"menulogo\" className=\"menu-logo\" />\r\n                </Menu.Item>\r\n                <Menu.Item className={\"login-menu-item\"}>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"home-login-button\" \r\n                            onClick={() => this.setState({login: true})}>Iniciar sesión</Button>\r\n                </Menu.Item>\r\n            </Menu>\r\n          </Header>\r\n          <Layout>\r\n            <Row className={\"home-main-row\"}>\r\n              <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n                <Card className={\"customer-home-card\"}>\r\n                  <span className={\"home-first-text\"}>Llena estos datos con tus campos personales y nos pondremos en contacto contigo.</span> \r\n                  <Row className={\"home-second-row\"}>\r\n                    <Col xxl={12} lg={12} md={12} sm={24} xs={24}>\r\n                      <img src={home} alt=\"homes\" className=\"home-img\" />\r\n                      <br/>\r\n                    </Col>\r\n                    <Col xxl={12} lg={12} md={12} sm={24} xs={24}>\r\n                      <Form className={\"form-home\"}> \r\n                      <Row gutter={4}>      \r\n                        <Col lg={12} md={12} sm={12} xs={12}>\r\n                          <p className={\"form-names\"}>Nombres</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('name', { initialValue: '',\r\n                              rules: [\r\n                                { required: true, message: 'Por favor, ingrese su(s) nombre(s).' }],\r\n                            })(\r\n                                <Input onChange={this.validationLetters} maxLength={21} className={\"input-box\"} prefix={<Icon type=\"user\" className={'icon-prefix'} />}\r\n                                      placeholder=\"Nombres\"/>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col lg={12} md={12} sm={12} xs={12}>\r\n                          <p className={\"form-names\"}>Apellidos</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('lastName', { initialValue: '',\r\n                              rules: [\r\n                                { required: true, message: 'Por favor, ingrese su(s) apellido(s).' }],\r\n                            })(\r\n                                <Input onChange={this.validationLetters} maxLength={21} prefix={<Icon type=\"user\" className={'icon-prefix'} />}\r\n                                      placeholder=\"Apellidos\"/>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={4}>      \r\n                        <Col lg={12} md={12} sm={12} xs={12}>\r\n                          <p className={\"form-names\"}>Cédula</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('identificationId', {\r\n                              initialValue: '',\r\n                              rules: [{ required: true, message: 'Por favor ingrese su número de cédula' }],\r\n                            })(\r\n                                <Input onChange={this.validationNumbers} maxLength={12}  prefix={<Icon type=\"idcard\" className={'icon-prefix'} />}\r\n                                            placeholder=\"Número de documento\" className={\"input-number\"}/>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col lg={12} md={12} sm={12} xs={12}>\r\n                          <p className={\"form-names\"}>Número de celular</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('phoneNumber', {\r\n                              initialValue: '',\r\n                              rules: [{ required: true, message: 'Por favor ingrese el celular' }],\r\n                            })(\r\n                            <Input onChange={this.validationNumbers} maxLength={10} placeholder=\"Número de celular\"\r\n                                className={\"input-number\"}/>\r\n                                )}\r\n                          </FormItem>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={4}>\r\n                        <Col lg={24} md={12} sm={24} xs={24}>\r\n                          <p className={\"form-names\"}>Correo Electrónico</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('email', { initialValue: '',\r\n                              rules: [ \r\n                                {type: 'email', message: 'Por favor, ingrese un correo electrónico válido.'},\r\n                                {required: true, message: 'Por favor, ingrese su correo electrónico.' }],\r\n                            })(\r\n                                <Input maxLength={35} prefix={<Icon type=\"mail\" className={'icon-prefix'} />}\r\n                                      placeholder=\"Correo electrónico\"/>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={4}>\r\n                        <Col lg={24} md={12} sm={24} xs={24}>\r\n                          <p className={\"form-names\"}>Empresa</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('company', {\r\n                              rules: [ \r\n                                {required: true, message: 'Por favor, ingrese su empresa.' }],\r\n                            })(\r\n                              <Select placeholder=\"Selecciona tu empresa\" allowClear={true} showSearch={true}\r\n                                notFoundContent={\"No hay empresas disponibles\"}>\r\n                                {companyList.map((type, i) => (\r\n                                  <Select.Option key={i} value={type.idCompany}>\r\n                                    {type.socialReason}\r\n                                  </Select.Option>))\r\n                                }\r\n                              </Select>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={4}>\r\n                        <Col lg={12} md={10} sm={24} xs={24}>\r\n                          <p className={\"form-names\"}>Contraseña</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('password', { initialValue: '',\r\n                              rules: [ \r\n                                {required: true, message: 'Por favor, ingrese una contraseña válida.' }],\r\n                            })(\r\n                                <Input maxLength={20} type=\"password\"  prefix={<Icon type=\"lock\" className={'icon-prefix'} />}\r\n                                      placeholder=\"Contraseña\"/>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col lg={12} md={12} sm={24} xs={24}>\r\n                          <p className={\"form-names\"}>Confirmar contraseña</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('confirmPassword', { initialValue: '',\r\n                              rules: [ \r\n                                {required: true, message: 'Por favor, ingrese una contraseña válida.' },\r\n                                {validator: this.compareToFirstPassword}\r\n                              ],\r\n                            })(\r\n                                <Input maxLength={20} type=\"password\"  prefix={<Icon type=\"lock\" className={'icon-prefix'} />}\r\n                                      placeholder=\"Confirmar contraseña\"/>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                      </Row>\r\n                      \r\n                      <Row className={\"upload-documents\"}>\r\n                        <Col xs={24} sm={24} md={24} lg={24}>\r\n                          <p className={\"form-names\"}>Cargar cédula, foto y comprobante de pago</p>\r\n                          <input key={this.state.kBK} type=\"file\" multiple=\"multiple\" onChange={this.onChange}\r\n                                accept=\".pdf, application/pdf\"/>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <FormItem className='home-form-item'>\r\n                          {getFieldDecorator('checkBox1', { initialValue: '',\r\n                            rules: [\r\n                              { required: true, message: 'Por favor, acepta los términos y condiciones.' }],\r\n                            })(\r\n                              <Row>\r\n                                <Col lg={24} md={23} >\r\n                                  <Row gutter={2}>\r\n                                    <Col lg={2} md={2} sm={2} xs={2} className={\"checkbox-terms-firstCol\"}>\r\n                                      <Checkbox className={'checkbox-terms-conditions'} onChange={(e) => this.onChangeField(e, 'checkBox1')}/>\r\n                                    </Col>\r\n                                    <Col lg={22} md={22} sm={22} xs={22}>\r\n                                      <span className={\"form-names-terms\"}>{\"\"} Acepto los <u onClick={() => this.openTermsandConditions()}>Términos, Condiciones de uso y Autorización de tratamiento de datos.</u></span>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </Col>\r\n                              </Row>\r\n                          )}\r\n                        </FormItem>\r\n                      </Row>\r\n                      \r\n                      <Row className={\"button-home-row\"}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className={\"home-form-button\"}\r\n                                onClick={() => this.onSignInClicked()}>\r\n                          <p className={\"login-button-text\"}>Enviar datos</p>\r\n                        </Button>\r\n                      </Row>\r\n                      <Modal\r\n                        title={\"Términos y condiciones de uso de la página web - Autorización de la política de tratamiento de datos\"}\r\n                        visible={this.state.visibleTermModal}\r\n                        width={600}\r\n                        onCancel={() => this.setState({visibleTermModal: false})}\r\n                        footer={\r\n                          <Button key='submit' type='primary' disabled={this.state.clicked && this.props.newRegisterResponse === null} onClick={() => this.setState({visibleTermModal: false, clicked: true})}>\r\n                            Aceptar\r\n                          </Button>}>\r\n                        <div>\r\n                          <p className={\"terms-conditions\"}>\r\n                             <br/>\r\n                             AVANZO solicita a los visitantes y usuarios de la página web la lectura de los términos, las condiciones de uso de la página web y la autorización de tratamiento de datos antes de iniciar su\r\n                             navegación o utilizar los servicios ofrecidos a través de este portal web. El acceso y navegación en la página web,\r\n                             así como el registro en la plataforma tecnológica de AVANZO, se encuentra precedido de un “click” en el botón Aceptar,\r\n                             lo cual constituye el conocimiento de la autorización del tratamiento de datos y la aceptación expresa del <b>usuario </b>\r\n                             de estos términos y condiciones. \r\n                             <br/><br/>\r\n                             En caso de no estar de acuerdo con estas condiciones sugerimos al visitante y usuario que se abstenga de acceder o navegar por la página web.\r\n                             <br/>\r\n                            </p>\r\n                        </div>\r\n                      </Modal>\r\n                    </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Layout>\r\n        </Layout>\r\n        \r\n        {\r\n          (this.props.newRegisterResponse === true) &&\r\n          <Redirect to={routes.confirm_account}/> \r\n        }\r\n\r\n        \r\n        {\r\n          (this.state.login === true) &&\r\n          <Redirect to={routes.login}/> \r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  newRegisterResponse: PropTypes.bool,\r\n  companyList: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    newRegisterResponse: state.login.newRegisterResponse,\r\n    companyList: state.login.companyList\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    newRegister: (customerId) => dispatch(newRegister(customerId)),\r\n    getCompanies: ( ) => dispatch(getCompanies( ))\r\n  }\r\n};\r\n\r\nlet WrappedHome = Form.create()(Home);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedHome);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Form, Layout} from 'antd';\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n//Subcomponents\r\nimport ConfirmResetPassword from './password/ConfirmedPassword';\r\n//import ResetPassword from './password/ResetPassword';\r\nimport ForgotPassword from \"./password/ForgotPassword\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport CustomerRegister from \"./register/RegisterCustomer\";\r\nimport ConfirmAccount from \"./ConfirmedAccount\";\r\nimport AdminRegister from \"./register/Register\";\r\nimport Home from \"../home/index\";\r\nimport routes from \"../../../configuration/routing/Routes\";\r\n\r\n//Styles\r\nimport '../../styles/authentication/login.css';\r\n\r\n//Assets\r\nimport second_background from \"../../assets/authentication/background.png\";\r\n\r\n\r\n//Constants\r\nconst { Content, Sider } = Layout;\r\nconst WrappedNormalLoginStandard = Form.create()(LoginForm);\r\nconst WrappedForgotPassword = Form.create()(ForgotPassword);\r\n//const WrappedResetPassword = Form.create()(ResetPassword);\r\nconst WrappedConfirmPassword = Form.create()(ConfirmResetPassword);\r\nconst WrappedConfirmAccount = Form.create()(ConfirmAccount);\r\n\r\n\r\nclass Login extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      width: 0, height: 0 \r\n    };\r\n    \r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  \r\n  updateWindowDimensions() {\r\n    this.setState({ \r\n      width: window.innerWidth,\r\n      height: window.innerHeight });\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log(\"Width: \", this.state.width);\r\n    \r\n     return (\r\n      <div className='login'>\r\n        {\r\n          (this.props.pathname === routes.home) && \r\n          <Layout>\r\n            <Route path={routes.home} component={Home}/>\r\n          </Layout>     \r\n        }\r\n        {\r\n          (this.props.pathname === routes.admin_register) && \r\n          <Layout>\r\n            <Sider width={400} style={{backgroundColor: \"#fff\"}}>\r\n              <Route path={routes.admin_register} component={AdminRegister}/>\r\n            </Sider>\r\n            <Layout className={\"background-sider\"}>\r\n              <Content className={\"background-picture-login\"}>\r\n                <img src={second_background} alt=\"shopping_cart\" className=\"shop\"/>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>     \r\n        }\r\n        {\r\n          (this.props.pathname === routes.customer_register) && \r\n          <Layout>\r\n            <Route path={routes.customer_register} component={CustomerRegister}/>\r\n          </Layout>          \r\n        }\r\n        {\r\n          (this.props.pathname !== routes.customer_register && this.props.pathname !== routes.company_register && this.props.pathname !== routes.admin_register && this.props.pathname !== routes.home) && \r\n          <Layout>\r\n            <Sider width={this.state.width < 500 ? this.state.width : 400} style={{backgroundColor: \"#fff\"}}>\r\n                <Switch>            \r\n                  <Route path={routes.login} component={WrappedNormalLoginStandard} />\r\n                  <Route path={routes.forgot_password} component={WrappedForgotPassword} />\r\n                  <Route path={routes.confirm_password} component={WrappedConfirmPassword} />\r\n                  <Route path={routes.confirm_account} component={WrappedConfirmAccount} />\r\n                  <Route render = {()=><Redirect to={routes.home}/>}/>\r\n                </Switch>\r\n            </Sider>\r\n            <Layout className={\"background-sider\"}>\r\n              <Content className={\"background-picture-login\"}>\r\n                <img src={second_background} alt=\"shopping_cart\" className=\"shop\"/>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        }        \r\n      </div>\r\n     );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","//Libraries\r\n\r\nimport React, {Component} from 'react';\r\nimport {Row, Col} from 'antd';\r\nimport Clock from 'react-live-clock';\r\n\r\n//Styles\r\nimport '../../styles/general/information.css';\r\n\r\nclass Information extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n\r\n  };\r\n\r\n  render(){\r\n\r\n    return(\r\n      <Row className={\"general-row\"}>\r\n        <Row className={\"row-information\"}>\r\n          <Col  xxl={4} lg={4} md={8} sm={8} xs={10} className={\"name-col\"}>\r\n          <span className=\"information-name\">Hola, {localStorage.user_name}</span>\r\n          </Col>\r\n          <Col xxl={16} lg={16} md={8} sm={8} xs={4} className={\"page-col\"}>\r\n          <span className=\"information-page\"><a className={\"page-link\"} href=\"http://www.avanzo.co\" target=\"_blank\" rel=\"noopener noreferrer\">www.avanzo.co</a></span>\r\n          </Col>\r\n          <Col xxl={4} lg={4} md={8} sm={8} xs={10} className={\"clock-col\"}>\r\n           <span><Clock format={'DD/MM/YYYY-HH:mm:ss'} ticking={true} timezone={'America/Bogota'} className={\"information-clock\"}/></span>\r\n          </Col>\r\n        </Row>\r\n      </Row>\r\n         \r\n    );\r\n  };\r\n  \r\n}\r\n  \r\nexport default Information;","//Subcomponents\r\nimport request from '../requestWrapper';\r\n\r\nfunction integrationRegistration(data){\r\n\r\n  return request({\r\n    url: '/Integration/Register',\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n};\r\n\r\nconst integrationService = {\r\n  integrationRegistration\r\n};\r\n\r\nexport default integrationService;","///Types\r\nimport {integrationTypes as C} from '../../types';\r\n\r\n//Subcomponents\r\nimport { WARNING_MODAL } from '../../../../ui/components/subcomponents/modalMessages';\r\n\r\n//Services\r\nimport integrationService from '../../../../services/integration/integrationServices'; \r\nimport { initializeClient } from '../../../../services/requestWrapper';\r\n\r\nfunction saveLocalStorage(access_token, expires_on, user_name, roleId, email, userId){\r\n\r\n  //localStorage.setItem('access_token', access_token);\r\n  localStorage.setItem('expires_on', expires_on);\r\n  localStorage.setItem('user_name', user_name);\r\n  localStorage.setItem('role_id', roleId);\r\n  localStorage.setItem('email', email);  \r\n  localStorage.setItem('user_id', userId);\r\n\r\n  initializeClient();\r\n};\r\n\r\nexport const integrationRegister = (data) => {\r\n  return dispatch => {\r\n    return integrationService.integrationRegistration(data)\r\n      .then(response => {\r\n        localStorage.setItem('access_token', response.data.data.access_token);\r\n        let data = response.data.data;\r\n        let user_info = data.user_info;\r\n        saveLocalStorage(data.access_token, data.expires_on, user_info.name, user_info.Role_idRole, user_info.email, user_info.idUser);\r\n        dispatch({\r\n          type: C.INTEGRATION_REGISTER,\r\n          token: data.access_token,\r\n          payload: true,\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.INTEGRATION_REGISTER,\r\n          payload: false,\r\n        });\r\n        WARNING_MODAL('Advertencia',  'Por favor, regístrate en nuestro portal');\r\n      });\r\n  }\r\n};\r\n\r\n","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { Form, Spin} from 'antd';\r\n\r\n//Subcomponents\r\nimport routes from '../../../configuration/routing/Routes';\r\n\r\n//Actions\r\nimport { integrationRegister } from \"../../../store/redux/actions/integration/integrationActions\";\r\n\r\n//Styles\r\nimport '../../styles/customer/request-form.css';\r\n\r\n\r\nclass IFormRequest extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      sliderValue: 300000,\r\n      fee: null,\r\n      loan: null,\r\n      money_wallet: false,\r\n      wallet_type: null,\r\n      wallet_number: null,\r\n      bank_account: false,\r\n      bank_name: null,\r\n      bank_number: null,\r\n      bank_type: null,\r\n      signatureDone: false,\r\n      trimmedDataURL: null\r\n    };    \r\n\r\n    this.props.integrationRegister(this.props.match.params);\r\n\r\n  };\r\n\r\n  render(){\r\n\r\n    //console.log(\"IR\", this.props.location.pathname);    \r\n\r\n    if(this.props.integrationRegisterResponse){   \r\n      return (\r\n        <div>\r\n          <Redirect to={{pathname: routes.customer_form_request}}/>\r\n        </div>\r\n      );\r\n    }else{\r\n      if(this.props.integrationRegisterResponse === false){\r\n        return (\r\n          <div>\r\n            <Redirect to={{pathname: routes.customer_register}}/>\r\n          </div>\r\n        );\r\n      }else{\r\n        return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                Cargando ...\r\n                <br/>\r\n                <br/>\r\n                <Spin size=\"large\" />\r\n              </div>);\r\n      }\r\n      \r\n    }\r\n\r\n  };\r\n  \r\n}\r\n\r\nlet IRequestForm = Form.create()(IFormRequest);\r\n\r\nIRequestForm.propTypes = {\r\n  integrationRegisterResponse: PropTypes.bool,\r\n  integrationToken: PropTypes.string,\r\n  correct: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    integrationRegisterResponse: state.integration.integrationRegisterResponse,\r\n    integrationToken: state.integration.integrationToken,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    integrationRegister: (data) => dispatch(integrationRegister(data)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IRequestForm);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\n\r\n//Stylesh\r\nimport \"../../styles/subcomponents/loadings.css\"\r\n\r\nclass MiniLoading extends Component {\r\n  render() {\r\n    return (\r\n        <div className={\"mini-loading\"}>\r\n          <div className={\"spinner\"}>\r\n            <div className={\"bounce1\"}/>\r\n            <div className={\"bounce2\"}/>\r\n            <div className={\"bounce3\"}/>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MiniLoading;","//Libraries\r\nimport {Layout, Menu} from 'antd';\r\nimport React, {Component} from 'react';\r\n//import { Redirect } from \"react-router\";\r\nimport {withRouter, NavLink} from 'react-router-dom';\r\n\r\n//Subcomponents\r\nimport routes from \"../../../configuration/routing/Routes\";\r\n//import icon from \"../../assets/authentication/avanzoMenu.jpg\";\r\n\r\n//Styles\r\nimport '../../styles/integration/integrationmenu.css';\r\n\r\n//Constants\r\nconst { Header } = Layout;\r\n\r\nclass IMainMenu extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      log_out: 0,\r\n      visible: false,\r\n      redirectTo: \"\",\r\n      //loggedIn: this.isSignedIn()\r\n    };\r\n\r\n    /*this.logOut = this.logOut.bind(this);\r\n    this.handleCancelModal = this.handleCancelModal.bind(this);\r\n    this.isSignedIn=this.isSignedIn.bind(this);*/\r\n\r\n  };\r\n\r\n  /*logOut(){\r\n    //this.props.logout();\r\n    localStorage.clear();\r\n    this.setState({loggedIn: false})\r\n  };\r\n\r\n  handleCancelModal(){\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n  \r\n  isSignedIn(){\r\n    if (localStorage.access_token !== undefined && localStorage.access_token !== null &&\r\n        localStorage.access_token !== 'null' && localStorage.access_token){\r\n      return true;\r\n    } else {\r\n      localStorage.clear();\r\n      return false;\r\n    }\r\n  };*/\r\n  render(){\r\n    \r\n    return(\r\n      <Layout className=\"layout\" >\r\n        <Header className={\"header-menu1\"} >         \r\n          <Menu\r\n            mode=\"horizontal\"\r\n            className={\"menu-style\"}>\r\n              <Menu.Item>\r\n                <NavLink to={routes.integration_form}>\r\n                  Solicitar préstamo\r\n                </NavLink>\r\n              </Menu.Item>\r\n              <Menu.Item>\r\n                <NavLink to={routes.integration_transactions}>\r\n                  Transacciones\r\n                </NavLink>\r\n              </Menu.Item>\r\n              <Menu.Item>\r\n                <NavLink to={routes.integrations_requests}>\r\n                  Revisar solicitudes\r\n                </NavLink>\r\n              </Menu.Item>\r\n            </Menu>\r\n        </Header>\r\n      </Layout>\r\n    );\r\n  };\r\n  \r\n}\r\n\r\nexport default (withRouter(IMainMenu));","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Divider, Card, Input, Table} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport MiniLoading from '../subcomponents/MiniLoading';\r\nimport IMenu from \"./IMenu\";\r\n\r\n//Actions\r\nimport {getAllTransactions} from \"../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../styles/customer/transactions.css'\r\n\r\n//Constants\r\nconst table = [\r\n  {\r\n    title: <div>Tipo Transacción</div>,\r\n    dataIndex: 'name',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.transaction.localeCompare(b.transaction)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad</div>,\r\n    dataIndex: 'quantity',\r\n    width: \"100px\",\r\n    align: \"right\",\r\n    render: text => <div className={\"table-p\"}>{\"$\"+text}</div>,\r\n    sorter: (a, b) =>{ return a.quantity.toString().localeCompare(b.quantity.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Solicitud</div>,\r\n    dataIndex: 'date',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text.split(\"-\")[0]}</div>,\r\n    sorter: (a, b) =>{ return a.date.localeCompare(b.date)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Transacción</div>,\r\n    dataIndex: 'date2',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text.split(\"-\")[0]}</div>,\r\n    sorter: (a, b) =>{ return a.date.localeCompare(b.date)},\r\n  }\r\n];\r\n\r\n//Functions\r\nfunction itemRender(current, type, originalElement) {\r\n  if (type === 'prev' || type === 'Previous Page') {\r\n    return <span title={'Anterior'} className={\"item-renderer\"}>{\"<\"}</span>;\r\n  } if (type === 'next') {\r\n    return <span title={'Siguiente'} className={\"item-renderer\"}>{\">\"}</span>;\r\n  }\r\n  return originalElement;\r\n};\r\n\r\nclass ITransactions extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      text: null,\r\n      firstText: null,\r\n      firstTextLength: 0,\r\n      linkName: null,\r\n      linkUrl: null,\r\n    };\r\n\r\n    this.setData = this.setData.bind(this);\r\n    this.inputLinkName = this.inputLinkName.bind(this);\r\n\r\n    //this.props.getAllTransactions(8, 10);\r\n\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          name: item.name,\r\n          link: item.url,\r\n        };\r\n        rows.push(row);\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  inputLinkName(e){\r\n    this.setState({\r\n      linkName: e.target.value,\r\n    });    \r\n  };\r\n\r\n  render() {\r\n\r\n    let tableData = [\r\n      {\r\n        key: 1,\r\n        transaction: \"Retiro\",\r\n        quantity: 150000,\r\n        date: \"20-06-19\",\r\n        date2: \"21-06-19\"\r\n      },\r\n      {\r\n        key: 2,\r\n        transaction: \"Pago\",\r\n        quantity: 250000,\r\n        date: \"21-06-19\",\r\n        date2: \"22-06-19\"\r\n      },\r\n      {\r\n        key: 3,\r\n        transaction: \"Cuota de manejo\",\r\n        quantity: 8500,\r\n        date: \"23-06-19\",\r\n        date2: \"24-06-19\"\r\n      },\r\n      {\r\n        key: 4,\r\n        transaction: \"Pago\",\r\n        quantity: 120000,\r\n        date: \"25-06-19\",\r\n        date2: \"26-06-19\"\r\n      },\r\n      {\r\n        key: 5,\r\n        transaction: \"Retiro\",\r\n        quantity: 275000,\r\n        date: \"26-06-19\",\r\n        date2: \"27-06-19\"\r\n      },\r\n      {\r\n        key: 6,\r\n        transaction: \"Intereses\",\r\n        quantity: 4870,\r\n        date: \"27-06-19\",\r\n        date2: \"28-06-19\"\r\n      }     \r\n    ];\r\n  \r\n    if(JSON.stringify(tableData) === '{}'){\r\n      return (\r\n        <MiniLoading visible={true}/> \r\n      );\r\n    }else{\r\n      return (\r\n        <div>\r\n          <IMenu/>\r\n          <div className={\"transactions-div\"}>\r\n            <Row>\r\n              <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n                <h2 className={'header-terms-title'}>Histórico de transacciones</h2>\r\n              </Col>\r\n            </Row>\r\n            <Row className={\"social-row-content\"}>\r\n              <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n                <Card className={\"transactions-card\"}>\r\n                  <h3>Filtros</h3>\r\n                  <Row gutter={8}>\r\n                    <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                      <p className=\"field-title-visible\">Tipo Transacción: </p>\r\n                      <Input placeholder={\"Tipo Transacción\"}/>\r\n                    </Col>\r\n\r\n                    <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                      <p className=\"field-title-visible\">Cantidad</p>\r\n                      <Input placeholder={\"Cantidad\"}/>\r\n                    </Col>\r\n\r\n                    <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                      <p className=\"field-title-visible\">Fecha Solicitud</p>\r\n                      <Input placeholder={\"Fecha Solicitud\"}/>\r\n                    </Col>\r\n\r\n                    <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                      <p className=\"field-title-visible\">Fecha Transacción</p>\r\n                      <Input placeholder={\"Fecha Transacción\"}/>\r\n                    </Col>\r\n                  </Row>\r\n                  <Divider className={\"second-divider\"}/>\r\n                    <Table className={\"new-table\"} dataSource={tableData} columns={table} rowKey={'id'}\r\n                      locale={{ emptyText: 'No hay transacciones todavía' }} pagination={{ itemRender: itemRender, showSizeChanger: true,\r\n                      pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"] }} size={'small'} scroll={{x:'500px'|true}}/>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n}\r\n\r\nITransactions.propTypes = {\r\n  transactionList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    transactionList: state.customer.transactionList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllTransactions: (customerId) => dispatch(getAllTransactions(customerId)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ITransactions);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Redirect, Link} from 'react-router-dom';\r\nimport {Form, Input, Button, Icon, Layout} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Subcomponents\r\nimport routes from \"../../../../configuration/routing/Routes\";\r\nimport { ERROR_MODAL } from '../../subcomponents/modalMessages';\r\n\r\n//Actions\r\nimport {changePassword} from \"../../../../store/redux/actions/general/loginActions\";\r\n\r\n//Assets\r\nimport secondIcon from \"../../../assets/authentication/avanzo.jpg\";\r\nimport second_background from \"../../../assets/authentication/background2.png\";\r\n\r\n//Constants\r\nconst { Content, Sider } = Layout;\r\n\r\nclass ResetPassword extends Component{\r\n  \r\n  constructor(props) {\r\n    \r\n    super(props);\r\n    \r\n    this.state = {\r\n      requestSent: false,\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.compareToFirstPassword = this.compareToFirstPassword.bind(this);\r\n\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if(!err){\r\n        //console.log(\"Values\", values, \"Params\", this.props.match.params);\r\n        this.props.changePassword(values, this.props.match.params.token);\r\n        this.setState({\r\n          burstingKey: this.state.burstingKey+1 \r\n        });\r\n      }else{\r\n        ERROR_MODAL(\"Ingrese los datos correctos, por favor.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Las dos contraseñas no coinciden');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  render(){\r\n  \r\n    const {getFieldDecorator} = this.props.form;  \r\n    const {requestSent} = this.state;\r\n    //let { resetPasswordResponse } = this.props;\r\n\r\n    //console.log(\"RP\", resetPasswordResponse);\r\n  \r\n      return(\r\n        <Layout>\r\n            <Sider width={400} style={{backgroundColor: \"#fff\"}}>\r\n            <div>\r\n                {requestSent === true &&\r\n                  <Redirect to={routes.login}/>\r\n                }\r\n                <div className=\"div-logo\">\r\n                  <img src={secondIcon} alt=\"icon\" className={\"logo-reset\"} />\r\n                </div>\r\n                <div className={\"login-card\"}>\r\n                  <div className=\"login-form\">\r\n                  <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <Form.Item>\r\n                        {getFieldDecorator('password',{\r\n                          rules: [{ required: true, message: 'Por favor, ingrese su contraseña' }, {min: 6, message: \"Mínimo 6 caracteres.\"}, {pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)^(?=.*[!@#\\\\$%\\\\^&.,\\\\*])', message: \"La contraseña debe contener al menos una mayúscula, una minúscula, un número y un caracter especial\"}],\r\n                        })( <Input key={this.state.burstingKey} className={\"form-content\"} prefix={<Icon type=\"lock\" className={\"field-icon\"} />} type=\"password\" \r\n                              placeholder=\"Contraseña\"/> )}\r\n                      </Form.Item>\r\n                    <Form.Item>\r\n                      {getFieldDecorator('confirmPassword', {\r\n                        rules: [\r\n                          {required: true, message: 'Confirme la contraseña'},\r\n                          {validator: this.compareToFirstPassword}\r\n                        ]\r\n                      })( <Input key={this.state.burstingKey} prefix={<Icon type=\"lock\" className={\"field-icon\"} />} type=\"password\" \r\n                                placeholder=\"Confirmar contraseña\"/>  )\r\n                      }\r\n                    </Form.Item>\r\n                    <Form.Item className={\"submit\"}>\r\n                      <Button type=\"primary\" htmlType=\"submit\" className=\"my-button login-form-button\">\r\n                        Cambiar\r\n                      </Button>\r\n                    </Form.Item>\r\n                    <Form.Item className={\"submit\"}>\r\n                      <div>\r\n                          <Link to={routes.login}>\r\n                              <p className={\"url-form\"}>Iniciar Sesión</p>\r\n                          </Link>\r\n                          <Link to={routes.customer_register}>\r\n                              <p className={\"url-form\"}>¿Desea Registrarse?</p>\r\n                          </Link>\r\n                      </div>\r\n                    </Form.Item>\r\n                  </Form>\r\n                  </div>\r\n                </div>\r\n                <div className={\"bottom-title\"}>\r\n                  Avanzo © 2020\r\n                </div>           \r\n                {\r\n                  (this.props.correct === true) &&\r\n                  <Redirect to={routes.login}/>\r\n                }\r\n              </div>  \r\n            </Sider>\r\n          <Layout className={\"background-sider\"}>\r\n            <Content className={\"background-picture-login\"}>\r\n              <img src={second_background} alt=\"shopping_cart\" className=\"shop\"/>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nResetPassword.propTypes = {\r\n  resetPasswordResponse: PropTypes.string,\r\n  correct: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    resetPasswordResponse: state.login.resetPasswordResponse,\r\n    correct: state.login.correct,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changePassword: (data, token) => dispatch(changePassword(data, token))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Styles\r\nimport \"../../styles/subcomponents/special-fields.css\"\r\n\r\n\r\nclass FieldTitle extends Component {\r\n\r\n    render() {\r\n\r\n        let visibility = this.props.title===\"b\" ? \"field-title-hidden\" : \"field-title-visible\";\r\n\r\n        return (\r\n            <p className={visibility}>{this.props.title}:</p>\r\n        );\r\n    }\r\n}\r\n\r\nFieldTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FieldTitle;","//Libraries\r\nimport React, { Component } from 'react';\r\n//import {Redirect} from 'react-router-dom';\r\nimport { Form, Select, Button, Col, Row, Collapse, InputNumber, Input, Tooltip, Table} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\n//Subcomponents\r\nimport FieldTitle from '../../subcomponents/FieldTitle';\r\n//import routes from '../../../../configuration/routing/Routes';\r\n\r\n//Styles\r\nimport '../../../styles/admin/create-company.css';\r\nimport { SUCCESS_MODAL, ERROR_MODAL, WARNING_MODAL } from '../../subcomponents/modalMessages';\r\n\r\n//Actions\r\nimport {createCompany, resetValue}  from \"../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Constants\r\n//import {Roles} from \"../../../lib/generalUtils/constants\";\r\nconst FormItem = Form.Item;\r\nconst { Panel } = Collapse;\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Tipo de ciclo',\r\n    dataIndex: 'companyRate',\r\n  },\r\n  {\r\n    title: 'Fecha de reporte',\r\n    dataIndex: 'companyReportDates',\r\n  },\r\n  {\r\n    title: 'Fecha de pago 1',\r\n    dataIndex: 'companyFirstDate',\r\n  },\r\n  {\r\n    title: 'Fecha de pago 2',\r\n    dataIndex: 'companySecondDate',\r\n  },\r\n];\r\n\r\nclass CreateCompany extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      isLoading: false,\r\n      captchaSolved: true,\r\n      email: null,\r\n      meeting: null,\r\n      moyen: false,\r\n      report: null,\r\n      loan: null,\r\n      upload: null,\r\n      salary_rate: null,\r\n      salariesArray: [0],\r\n      companyRateName: null,\r\n      companyPaymentNumber: null,\r\n      companyRate: null,\r\n      companyReportDate: null,\r\n      companyFirstDate: null,\r\n      companySecondDate: null,\r\n      companySalaries: [],\r\n      burstingKey: 1,\r\n      clearSelect: false,\r\n      burstingFormKey: 0,\r\n      defaultPaymentRate: null,\r\n      defaultReportDate: null,\r\n      defaultSalaryDate: null,\r\n    };\r\n\r\n    this.props.resetValue();\r\n\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if(nextProps.companyResponse === true){\r\n      if(prevState.burstingFormKey === 0){\r\n        return {\r\n          burstingFormKey: 1,\r\n        };\r\n      }\r\n    }\r\n  };\r\n  \r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"La empresa ha sido creada correctamente.\");\r\n  };\r\n\r\n  handleSalaryRate = () => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if(values.companyRate === \"Mensual\"){\r\n        this.setState({\r\n          salary_rate: false,\r\n        });\r\n      }else{\r\n        this.setState({\r\n          salary_rate: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  createCompany = () => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (err){\r\n        ERROR_MODAL(\"Error al realizar la acción\", \" Ingresa datos válidos dentro del formulario.\");\r\n      }else{\r\n        if(values.password !== values.confirmPassword){\r\n          WARNING_MODAL(\"Las contraseñas no coinciden\");\r\n        }else if(values.phoneNumber.toString()[0] !== \"3\" || values.phoneNumber.toString().length !== 10 ){\r\n          ERROR_MODAL(\"Error al realizar la acción\", \" ingresa un número de teléfono válido.\");\r\n        }else{\r\n          let newSalary = [{\r\n            companyRate: values.companyRate,\r\n            companyReportDates: values.companyReportDate,\r\n            companyFirstDate: values.companyFirstDate,\r\n            companySecondDate: values.companySecondDate,\r\n          }];\r\n          let data = {\r\n            address: values.address,\r\n            approveHumanResources: values.approveHumanResources,\r\n            paymentSupport: values.paymentSupport,\r\n            workingSupport: values.workingSupport,\r\n            companySalaries: this.state.companySalaries.length === 0 ? newSalary : this.state.companySalaries,\r\n            defaultAmount: values.defaultAmount,\r\n            economyActivity: values.economyActivity,\r\n            email: values.email,\r\n            maximumSplit: values.maximumSplit,\r\n            nit: values.nit,\r\n            socialReason: values.socialReason,\r\n            password: values.password,\r\n            companyMembers: [\r\n              {\r\n                memberName: values.memberName + \"-\" + values.memberLastName,\r\n                memberId: values.memberId,\r\n                profession: values.profession,\r\n                phoneNumber: values.phoneNumber,\r\n                memberEmail: values.memberEmail,\r\n              },\r\n              {\r\n                memberName: values.representantName + \"-\" + values.representantLastName,\r\n                memberId: values.representantId,\r\n                profession: values.representantProfession,\r\n                phoneNumber: values.representantPhone,\r\n                memberEmail: values.representantEmail,\r\n              }\r\n            ],               \r\n          };\r\n          this.props.createCompany(data);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  addNewSalary = () => {\r\n    \r\n    let {companyRate, companyReportDate, companyFirstDate, companySecondDate, defaultPaymentRate,\r\n         defaultSalaryDate } = this.state;\r\n\r\n    let datesArray = this.state.companySalaries;\r\n\r\n    if(defaultPaymentRate === null){\r\n      WARNING_MODAL(\"Advertencia\", 'Ingresa un tipo de ciclo de pagos');\r\n    }else if(defaultSalaryDate === null){\r\n      WARNING_MODAL(\"Advertencia\", 'Ingresa las fechas de salario separadas por comas');\r\n    }else if(defaultSalaryDate === null){\r\n      WARNING_MODAL(\"Advertencia\", 'Ingresa las fechas de reporte separadas por comas');\r\n    }\r\n\r\n    let newSalary = {\r\n      companyRate: companyRate,\r\n      companyReportDates: companyReportDate,\r\n      companyFirstDate: companyFirstDate,\r\n      companySecondDate: companySecondDate,\r\n    };\r\n\r\n    if(companyRate === null && companyReportDate=== null && companyFirstDate === null){\r\n      WARNING_MODAL(\"Advertencia\", \"Los campos de ciclos de pagos no son válidos.\")\r\n    }else{\r\n      this.setState({\r\n        companySalaries: datesArray,\r\n        burstingKey: this.state.burstingKey+1,\r\n        clearSelect: !this.state.clearSelect,\r\n        companyRate: null,\r\n        companyReportDate: null,\r\n        companyFirstDate: null,\r\n        companySecondDate: null,\r\n        defaultPaymentRate: null,\r\n        defaultReportDate: null,\r\n        defaultSalaryDate: null,\r\n      });\r\n      datesArray.push(newSalary);\r\n    }\r\n    \r\n  };\r\n\r\n  changeRatesValues = (e, param) => {\r\n    this.setState({\r\n      [param]: e,\r\n      defaultPaymentRate: e,\r\n    });\r\n  };\r\n\r\n  changeSalariesValues = (e, param) => {\r\n    let setter = e.target.value;\r\n    e.target.value = setter.replace(/[^0-9,]/g, '');\r\n    let setterValue = e.target.value.split(',');\r\n    if(setterValue.length < 5){\r\n      this.setState({\r\n        [param]: e.target.value,\r\n        defaultReportDate: e.target.value\r\n      });\r\n    }else{\r\n      WARNING_MODAL(\"Advertencia\", \"Ingresa máximo cuatro días para los reportes.\");\r\n    }\r\n  };\r\n\r\n  changeDateValues = (e, param) => {\r\n    let setter = e.target.value;\r\n    e.target.value = setter.replace(/[^0-9,]/g, '');\r\n    let {companyRate} = this.state;\r\n    //setter = e.target.value.replace(/ /g, \"\");\r\n    let setterValue = setter.replace(/[^0-9,]/g, '').split(',');\r\n\r\n    if(companyRate === \"Mensual\"){\r\n      if(setterValue.length === 1){\r\n        this.setState({\r\n          companyFirstDate: setterValue[0],\r\n          defaultSalaryDate: setterValue[0],\r\n        });\r\n      }else{\r\n        WARNING_MODAL(\"Advertencia\", \"Ingresa solo un día para el tipo de recurrencia mensual\");\r\n      }    \r\n    }else if(companyRate === \"Quincenal\"){\r\n      if(setterValue.length < 3){\r\n        this.setState({\r\n          companyFirstDate: setterValue[0],\r\n          companySecondDate: setterValue[1],\r\n          defaultSalaryDate: setterValue[1] !== undefined ? setterValue[0]+\",\"+setterValue[1] : setterValue[0],\r\n        });\r\n      }else{\r\n        WARNING_MODAL(\"Advertencia\", \"Ingresa solo dos días para el tipo de recurrencia quincenal\");\r\n      }\r\n    }else{\r\n      WARNING_MODAL(\"Advertencia\", \"Primero, Ingresa un tipo de ciclo para esta empresa\");\r\n    }\r\n    \r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Las dos contraseñas no coinciden');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validationNumbersFee = (e) => {\r\n    const input = e.toString();\r\n    e = input.replace(/[^0-9]/g, '');\r\n  };\r\n\r\n  validationNumbers = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^0-9]/g, '');\r\n  };\r\n\r\n  validationNITNumbers = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^0-9 /-]/g, '');\r\n  };\r\n\r\n  validationNumbersNumber = (e) => {\r\n    if(e !== null){\r\n      const input = e.toString();\r\n      e = input.replace(/[^0-9]/g, '');\r\n    }\r\n    \r\n  };\r\n\r\n  cleanValues = () => {\r\n    this.setState({\r\n      defaultPaymentRate: null,\r\n      defaultReportDate: null,\r\n      defaultSalaryDate: null,\r\n    })\r\n  };\r\n\r\n\r\n  render(){\r\n    \r\n    let {getFieldDecorator} = this.props.form;\r\n    let {companySalaries, burstingFormKey, defaultPaymentRate, defaultReportDate, defaultSalaryDate} = this.state;\r\n  \r\n    //console.log(\"UP\", this.state.burstingKey);\r\n    \r\n    return (\r\n      <div className={\"company-div\"}>\r\n          <Row className={\"request-row-content\"}>\r\n            <div>  \r\n              <Form>\r\n                <Collapse defaultActiveKey={['1']} bordered={false}>\r\n                  <Panel header=\"Información general\" key=\"1\">\r\n                    <Row gutter={20} className={\"form-request-rows\"}>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Razón social\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('socialReason',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa una razón social'}\r\n                            ]})(\r\n                              <Input key={burstingFormKey} className={\"form-input-number\"} placeholder={\"Razón social\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      \r\n                      <Col xs={12} sm={12} md={8} lg={6}>\r\n                        <FieldTitle title={\"NIT\"}/>\r\n                        <FormItem >\r\n                          {getFieldDecorator('nit',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa un NIT válido' }\r\n                            ]})(\r\n                              <Input onChange={(e) => this.validationNITNumbers(e)} key={burstingFormKey} className={\"form-input-number\"} placeholder={\"NIT\"}/>\r\n                            )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Correo Electrónico\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('email',\r\n                            {rules: [\r\n                              {type: 'email', message: 'Ingresa un correo electrónico válido.'},\r\n                              {required: true, message: 'Ingresa un correo electrónico'}\r\n                            ]})(\r\n                              <Input key={burstingFormKey} className={\"form-input-number\"} placeholder={\"Correo electrónico\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={5} lg={6}>\r\n                        <FieldTitle title={\"Actividad económica\"}/>\r\n                        <FormItem >\r\n                          {getFieldDecorator('economyActivity',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa una actividad económica'}\r\n                            ]})(\r\n                              <Input key={burstingFormKey} className={\"form-input-number\"} placeholder={\"Actividad económica\"}/>\r\n                            )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={5} lg={6}>\r\n                        <FieldTitle title={\"Dirección empresa\"}/>\r\n                        <FormItem >\r\n                          {getFieldDecorator('address',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa una dirección'}\r\n                            ]})(\r\n                              <Input key={burstingFormKey} className={\"form-input-number\"} placeholder={\"Dirección\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Contraseña por defecto\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('password',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa una contraseña por defecto'}\r\n                            ]})(\r\n                              <Input key={burstingFormKey} type=\"password\"  className={\"form-input-number\"} placeholder={\"Contraseña por defecto\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Confirmar contraseña\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('confirmPassword',\r\n                            {rules: [\r\n                              {required: true, message: 'Confirma la contraseña ingresada'},\r\n                              {validator: this.compareToFirstPassword}\r\n                            ]})(\r\n                              <Input key={burstingFormKey} type=\"password\" className={\"form-input-number\"} placeholder={\"Confirmar contraseña\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                    </Row>\r\n                  </Panel>\r\n                  <Panel header=\"Información de créditos\" key=\"2\">\r\n                    <Row gutter={8} className={\"form-request-rows\"}>\r\n                      <Col xs={12} sm={12} md={5} lg={8}>\r\n                          <FieldTitle title={\"¿Aprueba Recursos Humanos?\"}/>\r\n                          <FormItem >\r\n                            {getFieldDecorator('approveHumanResources',\r\n                              {rules: [\r\n                                {required: true, message: 'Ingresa si se aprueba desde recursos humanos'}\r\n                              ]})(\r\n                                <Select placeholder={\"¿Aprueba Recursos Humanos?\"} showSearch={true} allowClear={true} autoClearSearchValue={true}>\r\n                                  <Select.Option value={true}>Sí</Select.Option>\r\n                                  <Select.Option value={false}>No</Select.Option>\r\n                                </Select>\r\n                              )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={5} lg={8}>\r\n                          <FieldTitle title={\"¿Comprobante de pago?\"}/>\r\n                          <FormItem >\r\n                            {getFieldDecorator('paymentSupport',\r\n                              {rules: [\r\n                                {required: true, message: 'Ingresa si es necesario adjuntar el comprobante de pago'}\r\n                              ]})(\r\n                                <Select placeholder={\"¿Comprobante de pago?\"} showSearch={true} allowClear={true} autoClearSearchValue={true}>\r\n                                  <Select.Option value={true}>Sí</Select.Option>\r\n                                  <Select.Option value={false}>No</Select.Option>\r\n                                </Select>\r\n                              )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={5} lg={8}>\r\n                          <FieldTitle title={\"¿Certificado laboral?\"}/>\r\n                          <FormItem >\r\n                            {getFieldDecorator('workingSupport',\r\n                              {rules: [\r\n                                {required: true, message: 'Ingresa si se es necesario adjuntar el certificado laboral'}\r\n                              ]})(\r\n                                <Select placeholder={\"¿Certificado laboral?\"} showSearch={true} allowClear={true} autoClearSearchValue={true}>\r\n                                  <Select.Option value={true}>Sí</Select.Option>\r\n                                  <Select.Option value={false}>No</Select.Option>\r\n                                </Select>\r\n                              )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                    \r\n                    \r\n                    </Row>\r\n                    <Row gutter={12} className={\"form-request-rows\"}>\r\n                      <Col xs={12} sm={12} md={5} lg={10}>\r\n                          <FieldTitle title={\"Máxima cantidad a prestar\"}/>\r\n                          <FormItem >\r\n                            {getFieldDecorator('defaultAmount',\r\n                              {rules: [\r\n                                {required: true, message: 'Ingresa una monto particular'}\r\n                              ]})(\r\n                                <InputNumber min={80000} onChange={(e) => this.validationNumbersNumber(e)}  formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} \r\n                                className={\"form-input-number\"} placeholder={\"Máxima cantidad a prestar\"}/>\r\n                              )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={5} lg={10}>\r\n                        <FieldTitle title={\"Cantidad de cuotas máxima\"}/>\r\n                        <FormItem >\r\n                          {getFieldDecorator('maximumSplit',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa un máximo de cuotas'}\r\n                            ]})(\r\n                              <Input onChange={(e) => this.validationNumbers(e)} className={\"form-input-number\"} \r\n                              placeholder={\"No. máximo de cuotas\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                    </Row>\r\n                    <Row className={\"form-request-rows\"}>\r\n                      {\r\n                        this.state.companySalaries.length>0 && \r\n                        <Table columns={columns} dataSource={companySalaries} size=\"small\" bordered={false} locale={{emptyText: 'No hay registros'}}/>\r\n                      }\r\n                      <Row gutter={8} key={this.state.burstingKey}>\r\n                        <Col xs={12} sm={12} md={6} lg={6} key={this.state.burstingKey}>\r\n                          <FieldTitle title={\"Ciclo de pagos\"}/>\r\n                            <Select value={defaultPaymentRate === null ? undefined : defaultPaymentRate} key={this.state.burstingKey} placeholder={\"Tipo de salario\"} showSearch={true} onSelect={(e) => this.changeRatesValues(e, 'companyRate')} onChange={this.handleSalaryRate} allowClear={true} >\r\n                              <Select.Option value={\"Quincenal\"}>Quincenal</Select.Option>\r\n                              <Select.Option value={\"Mensual\"}>Mensual</Select.Option>\r\n                            </Select>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={6} lg={6}>\r\n                          <FieldTitle title={\"Fechas de salario\"}/>\r\n                            <Input value={defaultSalaryDate} max={31} min={1} key={this.state.burstingKey} className={\"form-input-number\"} placeholder={\"Fechas de salario\"} onChange={(e) => this.changeDateValues(e, 'companyFirstDate')}/>\r\n                        </Col>\r\n                        \r\n                        <Col xs={12} sm={12} md={6} lg={6}>\r\n                          <FieldTitle title={\"Fecha de reportes\"}/>\r\n                            <Input value={defaultReportDate} max={31} min={1} key={this.state.burstingKey} className={\"form-input-number\"} placeholder={\"(3, 13, 14, ... ) \"} onChange={(e) => this.changeSalariesValues(e, 'companyReportDate')}/>\r\n                        </Col>\r\n                        <Col xs={12} sm={8} md={3} lg={3}>\r\n                          <FieldTitle title={\" \"}/>\r\n                          <Button onClick={() => this.cleanValues()}>Limpiar</Button>\r\n                        </Col>\r\n                        <Col>\r\n                          <FieldTitle title={\" \"}/>\r\n                          <Tooltip title=\"Agregar nuevo ciclo de pagos\">\r\n                            <Button className={\"request-form-add\"} onClick={() => this.addNewSalary()}>Agregar</Button> \r\n                          </Tooltip>\r\n                        </Col>\r\n                      </Row>\r\n                    </Row>\r\n                  </Panel>\r\n                  <Panel header=\"Información de la persona encargada\" key=\"4\">\r\n                    <Row gutter={20} className={\"form-request-rows\"}>\r\n                      <Col xs={12} sm={12} md={6} lg={6}>\r\n                        <FieldTitle title={\"Nombres\"}/>\r\n                        <FormItem >\r\n                          {getFieldDecorator('memberName',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa el nombre del encargado.'}\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Nombres\"}/>\r\n                            )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={6} lg={6}>\r\n                        <FieldTitle title={\"Apellidos\"}/>\r\n                        <FormItem >\r\n                          {getFieldDecorator('memberLastName',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa el apellido del encargado'}\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Apellidos\"}/>\r\n                            )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>     \r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"No. Identificación\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('memberId',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa un número de identificación'}\r\n                            ]})(\r\n                              <Input onChange={(e) => this.validationNumbers(e)} className={\"form-input-number\"} placeholder={\"No. de Identificación\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Teléfono celular\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('phoneNumber',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa un teléfono celular'}\r\n                            ]})(\r\n                              <InputNumber maxLength={10} minLength={10} className={\"form-input-number\"} placeholder={\"Teléfono celular\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Correo electrónico\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('memberEmail',\r\n                            {rules: [\r\n                              {type: 'email', message: 'Ingresa un correo electrónico válido.'},\r\n                              {required: true, message: 'Ingresa un correo electrónico'}\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Correo electrónico\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6}>\r\n                        <FieldTitle title={\"Cargo\"}/>\r\n                        <FormItem >\r\n                          {getFieldDecorator('profession',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa un cargo' }\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Cargo\"}/>\r\n                            )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                    </Row>\r\n                  \r\n                  </Panel>\r\n                  <Panel header=\"Información del representante legal\" key=\"3\">\r\n                    <Row gutter={20} className={\"form-request-rows\"} >\r\n\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Nombres\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('representantName',\r\n                            {rules: [\r\n                              {required: false, message: ' ingresa un nombre'}\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Nombres\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Apellidos\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('representantLastName',\r\n                            {rules: [\r\n                              {required: false, message: ' ingresa un apellido'}\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Apellidos\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"No. de identificación\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('representantId',\r\n                            {rules: [\r\n                              {required: false, message: ' ingresa un número de identificación'}\r\n                            ]})(\r\n                              <Input onChange={(e) => this.validationNumbers(e)} className={\"form-input-number\"} placeholder={\"No. de Identificación\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Teléfono celular\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('representantPhone',\r\n                            {rules: [\r\n                              {required: false, message: ' ingresa un teléfono celular'}\r\n                            ]})(\r\n                              <InputNumber maxLength={10} minLength={10} className={\"form-input-number\"} placeholder={\"Teléfono celular\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Cargo\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('representantProfession',\r\n                            {rules: [\r\n                              {required: false, message: ' ingresa un cargo para el representante'}\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Cargo\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Correo electrónico\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('representantEmail',\r\n                            {rules: [\r\n                              {type: 'email', message: 'Ingresa un correo electrónico válido.'},\r\n                              {required: false, message: 'Ingresa un correo electrónico'}\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Correo electrónico\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                    </Row>\r\n                  </Panel>  \r\n                  \r\n                </Collapse>\r\n                <Col xs={24} sm={12} md={18} lg={19}/>\r\n                <Col xs={24} sm={12} md={6} lg={5}>\r\n                  <Button className={\"request-confirm-button\"} icon=\"plus-circle\" \r\n                          onClick={() => this.createCompany()}>\r\n                        Crear empresa\r\n                  </Button> \r\n                </Col>\r\n              </Form>\r\n            </div>\r\n        </Row>\r\n      </div>\r\n    );\r\n  \r\n  };\r\n  \r\n}\r\n\r\nlet CreateCompanyForm = Form.create()(CreateCompany);\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createCompany: (data) => dispatch(createCompany(data)),\r\n    resetValue: () => dispatch(resetValue()),\r\n  }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    companyResponse: state.admin.companyResponse,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCompanyForm);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Icon, Tooltip, Modal, Input, InputNumber, Select, Table, Spin, Checkbox} from 'antd';\r\nimport PropTypes from \"prop-types\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\n//Subcomponents\r\nimport FieldTitle from '../../subcomponents/FieldTitle';\r\n\r\n//Styles\r\nimport '../../../styles/admin/company_management/edit-company-modal.css';\r\n\r\n//Actions\r\nimport {updateCompany, getCompanyWithSalary, updateCompanySalaries} from \"../../../../store/redux/actions/admin/adminActions\";\r\nimport { WARNING_MODAL } from '../../subcomponents/modalMessages';\r\n\r\n//Columns\r\nconst columns = [\r\n  {\r\n    title: 'Tipo de ciclo',\r\n    dataIndex: 'companyRateName',\r\n  },\r\n  {\r\n    title: 'Fechas de pago',\r\n    dataIndex: 'companyFirstDate',\r\n  },\r\n  {\r\n    title: 'Fechas de reporte',\r\n    dataIndex: 'companyReportDate',\r\n  },\r\n  {\r\n    title: 'Acciones',\r\n    dataIndex: 'actions'\r\n  }\r\n];\r\n\r\n//Styles\r\nclass EditCompanyModal extends Component {\r\n  \r\n  constructor(props){\r\n    \r\n    super(props);\r\n    \r\n    this.state = {\r\n      nit: null,\r\n      address: null, \r\n      socialReason: null, \r\n      economyActivity: null,\r\n      maximumSplit: null,\r\n      defaultAmount: null, \r\n      approveHumanResources: null,\r\n      email: null,\r\n      loading: false,\r\n      companySalaries: [], \r\n      visible: null,\r\n      visiblePays: false,\r\n      idDefaultSalary: null,\r\n      defaultPaymentRate: null,\r\n      defaultReportDate: null,\r\n      defaultSalaryDate: null,\r\n      changeSplit: false,\r\n      changeAmount: false,\r\n    };\r\n\r\n    this.props.getCompanyWithSalary(this.props.item.idCompany);\r\n    \r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if(nextProps.visible !== prevState.visible){\r\n      if(prevState.visible === null){\r\n        return {\r\n          visible: nextProps.visible,\r\n        };\r\n      }\r\n      return{\r\n        loading: true\r\n      }\r\n    }\r\n    if(nextProps.companySalaryResponse.length > 0){\r\n        return {\r\n          companySalaries: nextProps.companySalaryResponse,\r\n        };\r\n    }\r\n  };\r\n\r\n  changeSplit(e){\r\n    this.setState({\r\n      changeSplit: e.target.checked\r\n    });\r\n  };\r\n\r\n  changeAmount(e){\r\n    this.setState({\r\n      changeAmount: e.target.checked\r\n    });\r\n  };\r\n  \r\n  inputServiceNumber(e, service){\r\n    this.setState({\r\n      [service]: e,\r\n    });\r\n  };\r\n\r\n  inputServiceSplit(e, service){\r\n    this.setState({\r\n      [service]: e,\r\n    });\r\n  };\r\n\r\n  inputServiceName(e, service){\r\n    this.setState({\r\n      [service]: e.target.value,\r\n    });    \r\n  };\r\n\r\n  inputServiceTime(e){\r\n    this.setState({\r\n      time: e,\r\n    });    \r\n  };\r\n\r\n  handleEdit(item){\r\n    let data = {\r\n      nit: this.state.nit===null ? item.nit : this.state.nit,\r\n      address: this.state.address===null ? item.address : this.state.address,\r\n      socialReason: this.state.socialReason===null ? item.socialReason : this.state.socialReason,\r\n      economyActivity: this.state.economyActivity===null ? item.economyActivity : this.state.economyActivity,\r\n      maximumSplit: this.state.maximumSplit===null ? item.maximumSplit : this.state.maximumSplit,\r\n      defaultAmount: this.state.defaultAmount===null ? item.defaultAmount : this.state.defaultAmount, \r\n      approveHumanResources: this.state.approveHumanResources===null ? item.approveHumanResources : this.state.approveHumanResources,\r\n      email: this.state.email===null ? item.email : this.state.email,\r\n      companySalaries: this.state.companySalaries.length>0 ? this.state.companySalaries : this.props.companySalaryResponse,\r\n      idCompany: item.idCompany,\r\n      idUser: item.idUser,\r\n      changeSplit: this.state.changeSplit,\r\n      changeAmount: this.state.changeAmount,\r\n    };\r\n    this.props.updateCompany(data);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleEditCylce(item){\r\n\r\n    let {idDefaultSalary, defaultPaymentRate, defaultReportDate, defaultSalaryDate} = this.state;\r\n\r\n    let data = {\r\n      companyPaymentDates: defaultSalaryDate,\r\n      companyPaymentNumber: defaultPaymentRate === \"Quincenal\" ? 2 : 1,\r\n      companyRate: defaultPaymentRate === \"Quincenal\" ? 15 : 30,\r\n      companyRateName: defaultPaymentRate,\r\n      companyReportDates: defaultReportDate,\r\n      idCompanySalaries: idDefaultSalary,\r\n    };\r\n\r\n    this.props.updateCompanySalaries(data);\r\n\r\n    this.setState({\r\n      visiblePays: false\r\n    });\r\n    this.props.getCompanyWithSalary(this.props.item.idCompany);\r\n  };\r\n\r\n  removeRow(id){\r\n    let array = this.state.companySalaries;\r\n    for(let i in array){\r\n      if(array[i].idCompanySalaries === id){\r\n        array.pop(i);\r\n      }\r\n    };\r\n    this.setState({\r\n      companySalaries: array\r\n    });\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          companyFirstDate: item.companyPaymentDates,\r\n          companyPaymentNumber: item.companyPaymentNumber,\r\n          companyRate: item.companyRate,\r\n          companyRateName: item.companyRateName,\r\n          companyReportDate: item.companyReportDates,\r\n          idCompanySalaries: item.idCompanySalaries,  \r\n          actions:  <Row gutter={16}>\r\n                      <Col span={3}>\r\n                        <Tooltip title={\"Editar ciclo\"}>\r\n                          <Icon className={{style: {color:\"#ff0000\"}}} onClick={() => this.searchInfo(item.idCompanySalaries)}\r\n                            type={\"edit\"} style={{ fontSize: '16px'}}/>\r\n                        </Tooltip>\r\n                      </Col>\r\n                      <Col span={3}/>\r\n                      <Col span={3}>\r\n                        <Tooltip title={\"Eliminar ciclo\"}>\r\n                          <Icon className={{style: {color:\"#ff0000\"}}} onClick={() => this.removeRow(item.idCompanySalaries)}\r\n                            type={\"close-circle\"} style={{ fontSize: '16px'}}/>\r\n                        </Tooltip>\r\n                      </Col>\r\n                    </Row>\r\n        };\r\n        rows.push(row); \r\n      }\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  searchInfo = (id) => {\r\n\r\n    let array = this.state.companySalaries;\r\n\r\n    let rate;\r\n\r\n    let reportDate;\r\n\r\n    let salaryDate;\r\n\r\n    let idDefault;\r\n\r\n    for(let i = 0; i<array.length; i++){\r\n\r\n      //console.log(\"A\", array[i]);\r\n\r\n      if(array[i].idCompanySalaries === id){\r\n        idDefault = array[i].idCompanySalaries;\r\n        rate = array[i].companyRateName;\r\n        reportDate = array[i].companyReportDates;\r\n        salaryDate = array[i].companyPaymentDates;\r\n        break;\r\n      }\r\n\r\n    }\r\n\r\n    this.setState({\r\n      visiblePays: !this.state.visiblePays,\r\n      defaultPaymentRate: rate,\r\n      defaultReportDate: reportDate,\r\n      defaultSalaryDate: salaryDate,\r\n      idDefaultSalary: idDefault\r\n    });\r\n\r\n  };\r\n\r\n  changeRatesValues = (e, param) => {\r\n    this.setState({\r\n      defaultPaymentRate: e,\r\n    });\r\n  };\r\n\r\n  changeReportDate = (e, param) => {\r\n    let setter = e.target.value;\r\n    e.target.value = setter.replace(/[^0-9,]/g, '');\r\n    let setterValue = e.target.value.split(',');\r\n    if(setterValue.length < 5){\r\n      this.setState({\r\n        [param]: e.target.value,\r\n        defaultReportDate: e.target.value\r\n      });\r\n    }else{\r\n      WARNING_MODAL(\"Advertencia\", \"Ingresa máximo cuatro días para los reportes.\");\r\n    }\r\n  };\r\n\r\n  changeSalariesDate = (e, param) => {\r\n    let setter = e.target.value;\r\n    e.target.value = setter.replace(/[^0-9,]/g, '');\r\n    let {defaultPaymentRate} = this.state;\r\n    //setter = e.target.value.replace(/ /g, \"\");\r\n    let setterValue = setter.replace(/[^0-9,]/g, '').split(',');\r\n\r\n    if(defaultPaymentRate === \"Mensual\"){\r\n      if(setterValue.length === 1){\r\n        this.setState({\r\n          defaultSalaryDate: setterValue[0],\r\n        });\r\n      }else{\r\n        WARNING_MODAL(\"Advertencia\", \"Ingresa solo un día para el tipo de recurrencia mensual\");\r\n      }    \r\n    }else if(defaultPaymentRate === \"Quincenal\"){\r\n      if(setterValue.length < 3){\r\n        this.setState({\r\n          defaultSalaryDate: setterValue[1] !== undefined ? setterValue[0]+\",\"+setterValue[1] : setterValue[0],\r\n        });\r\n      }else{\r\n        WARNING_MODAL(\"Advertencia\", \"Ingresa solo dos días para el tipo de recurrencia quincenal\");\r\n      }\r\n    }else{\r\n      WARNING_MODAL(\"Advertencia\", \"Primero, Ingresa un tipo de ciclo para esta empresa\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    let tableData = this.setData(this.state.companySalaries);\r\n\r\n    let {defaultPaymentRate, defaultReportDate, defaultSalaryDate} = this.state;\r\n    //console.log(\"TableD\", tableData);\r\n\r\n    return (\r\n      <div>\r\n        <Modal\r\n            title={\"Editar empresa\"}\r\n            visible={this.state.visible === null || (!this.state.visible && !this.props.visible) ? this.props.visible : this.state.visible}\r\n            okText={\"Guardar\"}\r\n            cancelText={\"Cancelar\"}\r\n            width={700}\r\n            onOk={() => this.handleEdit(this.props.item)}\r\n            onCancel={() => this.setState({visible: false})}\r\n            keyboard={!this.state.loading}\r\n            closable={!this.state.loading}>\r\n            <Row gutter={12}>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Razón social:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.socialReason} placeholder={\"Razón social\"} onChange={(e) => this.inputServiceName(e, 'socialReason')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                NIT:\r\n                <br/>\r\n                <Input className={\"company-edit-nit\"} defaultValue={this.props.item.nit} onChange={(e) => this.inputServiceName(e, 'nit')} placeholder={\"NIT\"}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Correo electrónico:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.email} placeholder={\"Correo electrónico\"} onChange={(e) => this.inputServiceName(e, 'email')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Actividad económica:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.economyActivity} placeholder={\"Actividad económica\"} onChange={(e) => this.inputServiceName(e, 'economyActivity')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Dirección Empresa:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.address} placeholder={\"Dirección\"} onChange={(e) => this.inputServiceName(e, 'address')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                ¿Aprueba RR.HH.?\r\n                <br/>\r\n                <Select className={\"company-edit-nit\"} defaultValue={this.props.item.approveHumanResources ? \"Sí\" : \"No\"} placeholder={\"¿Aprueba Recursos Humanos?\"} showSearch={true} allowClear={true} autoClearSearchValue={true}>\r\n                  <Select.Option value={\"Sí\"}>Sí</Select.Option>\r\n                  <Select.Option value={\"No\"}>No</Select.Option>\r\n                </Select>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Máxima cantidad a prestar:\r\n                <br/>\r\n                <InputNumber className={\"company-edit-nit\"} defaultValue={this.props.item.defaultAmount} placeholder={\"Máximo préstamo\"} onChange={(e) => this.inputServiceNumber(e, 'defaultAmount')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Cantidad de cuotas máxima:\r\n                <br/>\r\n                <InputNumber className={\"company-edit-nit\"} defaultValue={this.props.item.maximumSplit} placeholder={\"Cantidad de cuotas\"} onChange={(e) => this.inputServiceSplit(e, 'maximumSplit')}/>\r\n              </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row gutter={6}>\r\n              <Col lg={12} md={12} sm={24} xs={24}>\r\n                <Checkbox onChange={(e) => this.changeSplit(e)}>{\" Cambiar cuotas a los clientes asociados\"}</Checkbox>\r\n              </Col>\r\n              <Col lg={12} md={12} sm={24} xs={24}>\r\n                <Checkbox onChange={(e) =>this.changeAmount(e)}>{\" Cambiar monto a los clientes asociados\"}</Checkbox>\r\n              </Col>\r\n            </Row>\r\n            <br/>\r\n            <Row>\r\n              { \r\n                tableData.length === 0 && \r\n                <div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                  Cargando ...\r\n                  <br/>\r\n                  <br/>\r\n                  <Spin size=\"large\" />\r\n                 </div>\r\n              }\r\n              {\r\n                (this.props.companySalaryResponse && tableData.length !== 0) && \r\n                <Table columns={columns} dataSource={tableData} key={'idCompanySalaries'} size=\"small\" bordered={false} locale={{emptyText: 'No hay registros'}}/>\r\n              }\r\n            </Row>\r\n        </Modal>\r\n        <Modal\r\n          title={\"Editar ciclo de pago\"}\r\n          visible={this.state.visiblePays}\r\n          width={800}\r\n          okText={\"Guardar\"}\r\n          onOk={() => this.handleEditCylce(this.props.item)}\r\n          onCancel={() => this.setState({visiblePays: false})}\r\n          cancelText={\"Cancelar\"}>\r\n          \r\n          <Row gutter={8} key={this.state.burstingKey}>\r\n            <Col xs={12} sm={12} md={6} lg={8} key={this.state.burstingKey}>\r\n              <FieldTitle title={\"Ciclo de pagos\"}/>\r\n                <Select className={\"salary-rate\"} value={defaultPaymentRate === null ? undefined : defaultPaymentRate} key={this.state.burstingKey} placeholder={\"Tipo de salario\"} showSearch={true} onSelect={(e) => this.changeRatesValues(e, 'companyRate')} onChange={this.handleSalaryRate} allowClear={true} >\r\n                  <Select.Option value={\"Quincenal\"}>Quincenal</Select.Option>\r\n                  <Select.Option value={\"Mensual\"}>Mensual</Select.Option>\r\n                </Select>\r\n            </Col>\r\n            <Col xs={12} sm={12} md={6} lg={8}>\r\n              <FieldTitle title={\"Fechas de salario\"}/>\r\n                <Input value={defaultSalaryDate} max={31} min={1} key={this.state.burstingKey} className={\"form-input-number\"} placeholder={\"Fechas de pago\"} onChange={(e) => this.changeSalariesDate(e, 'companyFirstDate')}/>\r\n            </Col>\r\n            \r\n            <Col xs={12} sm={12} md={6} lg={8}>\r\n              <FieldTitle title={\"Fecha de reportes\"}/>\r\n                <Input value={defaultReportDate} max={31} min={1} key={this.state.burstingKey} className={\"form-input-number\"} placeholder={\"(3, 13, 14, ... ) \"} onChange={(e) => this.changeReportDate(e, 'companyReportDate')}/>\r\n            </Col>\r\n          </Row>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nEditCompanyModal.propTypes = {\r\n  companySalaryResponse: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    companySalaryResponse: state.admin.companySalaryResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateCompany: (data) => dispatch(updateCompany(data)),\r\n    getCompanyWithSalary: (data) => dispatch(getCompanyWithSalary(data)),\r\n    updateCompanySalaries: (data) => dispatch(updateCompanySalaries(data)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditCompanyModal);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Icon, Tooltip} from 'antd';\r\nimport PropTypes from \"prop-types\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport EditModal from \"./EditModal\";\r\n\r\n//Actions\r\nimport {updateCompany, getCompanyWithSalary, activateCompany} from \"../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Columns\r\n/*const columns = [\r\n  {\r\n    title: 'Tipo de ciclo',\r\n    dataIndex: 'companyRate',\r\n  },\r\n  {\r\n    title: 'Fecha de reporte',\r\n    dataIndex: 'companyReportDate',\r\n  },\r\n  {\r\n    title: 'Fecha de pago 1',\r\n    dataIndex: 'companyFirstDate',\r\n  },\r\n  {\r\n    title: 'Fecha de pago 2',\r\n    dataIndex: 'companySecondDate',\r\n  }\r\n];*/\r\n\r\n//Styles\r\nclass TableButtons extends Component {\r\n  \r\n  constructor(props){\r\n    \r\n    super(props);\r\n    \r\n    this.state = {\r\n      nit: null,\r\n      address: null, \r\n      socialReason: null, \r\n      economyActivity: null,\r\n      maximumSplit: null,\r\n      defaultAmount: null, \r\n      approveHumanResources: null,\r\n      email: null,\r\n      loading: false,\r\n      companySalaries: [],\r\n      visible: false,\r\n    };\r\n\r\n    //this.inputServiceName = this.inputServiceName.bind(this);\r\n    //this.inputServiceTime = this.inputServiceTime.bind(this);\r\n    //this.inputServiceNumber = this.inputServiceNumber.bind(this);\r\n    //this.handleEdit = this.handleEdit.bind(this);\r\n\r\n    \r\n    \r\n  };\r\n\r\n  /*static getDerivedStateFromProps(nextProps, prevState) {\r\n    if(JSON.stringify(nextProps.companySalaryResponse) !== '{}'){\r\n      if(prevState.companySalaries.length === 0){\r\n        return {\r\n          companySalaries: nextProps.companySalaryResponse\r\n        };\r\n      }else{\r\n        return{\r\n          flagState: true\r\n        }\r\n      }\r\n    }\r\n   }*/\r\n\r\n   inputServiceTime = (e) => {\r\n    let item = e;\r\n    this.props.activateCompany(item.idCompany, parseInt(item.status) === 1 ? false : true);    \r\n  }; \r\n\r\n  render() {\r\n\r\n    //let tableData = this.setData(this.props.companySalaryResponse);\r\n\r\n    return (\r\n      <div>\r\n        <Row gutter={10}>\r\n          <Col span={3}  className={\"delete-col\"}>\r\n            <Tooltip title={\"Editar empresa\"}>\r\n              <Icon className={\"icon-button delete-icon\"} onClick={() => this.setState({visible: !this.state.visible})}\r\n                type={\"edit\"} style={{ fontSize: '16px'}}/>\r\n            </Tooltip>\r\n          </Col>\r\n          <Col span={3}/>\r\n          <Col span={3}  className={\"delete-col\"}>\r\n            <Tooltip title={\"Activar/Desactivar empresa\"}>\r\n              <Icon className={\"icon-button delete-icon\"} onClick={() => this.inputServiceTime(this.props.item)}\r\n                type={\"poweroff\"} style={{ fontSize: '16px'}}/>\r\n            </Tooltip>\r\n          </Col>   \r\n        </Row>\r\n        {\r\n          this.state.visible && \r\n          <EditModal item={this.props.item} visible={this.state.visible}/>  \r\n        }     \r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nTableButtons.propTypes = {\r\n  updateServices: PropTypes.func,\r\n  companySalaryResponse: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    companySalaryResponse: state.admin.companySalaryResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateCompany: (data) => dispatch(updateCompany(data)),\r\n    getCompanyWithSalary: (data) => dispatch(getCompanyWithSalary(data)),\r\n    activateCompany: (company, status) => dispatch(activateCompany(company, status)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableButtons);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Divider, Card, Input, Table, Spin} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Components\r\nimport TableButtons from './ServiceTableButtons';\r\n\r\n//Actions\r\nimport {getAllCompanies} from \"../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Styles\r\n//import '../../styles/customer/transactions.css'\r\n\r\n//Constants\r\nconst table = [\r\n  {\r\n    title: <div>Razón Social</div>,\r\n    dataIndex: 'socialReason',\r\n    width: \"120px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.socialReason.localeCompare(b.socialReason)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>NIT</div>,\r\n    dataIndex: 'nit',\r\n    width: \"90px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.nit.toString().localeCompare(b.nit.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad</div>,\r\n    dataIndex: 'quantity',\r\n    width: \"60px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{\"$\"+text}</div>,\r\n    sorter: (a, b) =>{ return a.quantity.toString().localeCompare(b.quantity.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cuotas</div>,\r\n    dataIndex: 'split',\r\n    width: \"50px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.split.toString().localeCompare(b.split.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Estado</div>,\r\n    dataIndex: 'status',\r\n    width: \"50px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.split.toString().localeCompare(b.split.toString())},\r\n  },  \r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Creación</div>,\r\n    dataIndex: 'registeredDate',\r\n    width: \"100px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text.split(\"T\")[0]}</div>,\r\n    sorter: (a, b) =>{ return a.registeredDate.localeCompare(b.registeredDate)},\r\n  },\r\n  {\r\n    title: \" \",\r\n    dataIndex: 'actions',\r\n    width: \"50px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-div\"}>{text}</div>,\r\n  }\r\n];\r\n\r\n//Functions\r\nfunction itemRender(current, type, originalElement) {\r\n  if (type === 'prev' || type === 'Previous Page') {\r\n    return <span title={'Anterior'} className={\"item-renderer\"}>{\"<\"}</span>;\r\n  } if (type === 'next') {\r\n    return <span title={'Siguiente'} className={\"item-renderer\"}>{\">\"}</span>;\r\n  }\r\n  return originalElement;\r\n};\r\n\r\nclass CompanyTable extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      socialReason: null,\r\n      nit: null,\r\n      quantity: null,\r\n      split: null,\r\n      date: null\r\n\r\n    };\r\n\r\n    this.setData = this.setData.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n    this.inputLinkName = this.inputLinkName.bind(this);\r\n\r\n    this.props.getAllCompanies();\r\n\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          socialReason: item.socialReason,\r\n          nit: item.nit,\r\n          registeredDate: item.registeredDate,\r\n          split: item.maximumSplit,\r\n          quantity: item.defaultAmount,\r\n          approveHumanResources: item.approveHumanResources,\r\n          email: item.email,\r\n          status: item.status === 1 ? \"Activo\" : \"Inactivo\",\r\n          actions: <TableButtons item={item}/>\r\n        };\r\n\r\n        if(this.filterData(row)) {\r\n          rows.push(row);\r\n        };\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  filterData(toCompare){\r\n    let {socialReason, nit, quantity, split} = this.state;\r\n\r\n    if(socialReason === null && nit === null && quantity === null && split === null){\r\n      return true;\r\n    }\r\n\r\n    if(socialReason !== null && !toCompare.socialReason.toString().toUpperCase().includes(socialReason.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(nit !== null && !toCompare.nit.toString().toUpperCase().includes(nit.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(quantity !== null && !toCompare.quantity.toString().toUpperCase().includes(quantity.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(split !== null && !toCompare.split.toString().toUpperCase().includes(split.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  inputLinkName(e){\r\n    this.setState({\r\n      linkName: e.target.value,\r\n    });    \r\n  };\r\n\r\n  render() {\r\n\r\n    let {socialReason, nit, quantity, split} = this.state;\r\n    let tableData = this.setData(this.props.companyList);\r\n  \r\n    if(this.props.companyList === null){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                  Cargando ...\r\n                  <br/>\r\n                  <br/>\r\n                  <Spin size=\"large\" />\r\n                </div>);\r\n    }else{\r\n      return (\r\n        <div >\r\n          <Row>\r\n            <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n              <Card className={\"transactions-card\"}>\r\n                <Row gutter={6}>\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={7}>\r\n                    <p className=\"field-title-visible\">Razón Social: </p>\r\n                    <Input placeholder={\"Razón Social\"} value={socialReason} onChange={(e) => this.setState({socialReason: e.target.value})}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\" >NIT</p>\r\n                    <Input placeholder={\"NIT\"} value={nit} onChange={(e) => this.setState({nit: e.target.value})}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\" >Cantidad Préstamo</p>\r\n                    <Input placeholder={\"Cantidad Préstamo\"} value={quantity} onChange={(e) => this.setState({quantity: e.target.value})}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                    <p className=\"field-title-visible\" >Cantidad Cuotas</p>\r\n                    <Input placeholder={\"Cantidad Cuotas\"} value={split} onChange={(e) => this.setState({split: e.target.value})}/>\r\n                  </Col>\r\n\r\n                </Row>\r\n                <Divider/>\r\n                  <Table className={\"new-table\"} dataSource={tableData} columns={table} rowKey={'key'}\r\n                    locale={{ emptyText: 'No hay coincidencias' }} pagination={{ itemRender: itemRender, showSizeChanger: true,\r\n                    pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"] }} size={'small'} scroll={{x:'500px'|true}}/>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n}\r\n\r\nCompanyTable.propTypes = {\r\n  companyList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    companyList: state.admin.companyList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllCompanies: ( ) => dispatch(getAllCompanies( )),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyTable);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Tabs, Icon} from 'antd';\r\n\r\n//Components\r\nimport CreateCompanyForm from './CreateCompany';\r\nimport CompanyTable from './CompanyTable';\r\n//import CustomerManagement from '../customer_management/CreateCustomer';\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\n\r\n//Assets\r\n\r\n//Constants\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass Administrator extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n    \r\n    this.next = this.next.bind(this);\r\n    this.previous = this.previous.bind(this);\r\n    this.carousel = React.createRef();\r\n\r\n  };\r\n\r\n  next() {\r\n    this.carousel.next();\r\n  };\r\n\r\n  previous() {\r\n    this.carousel.prev();\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"admin-div\"}>\r\n        <Row>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <h2 className={'header-terms-title'}>Gestionar empresas</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className={\"admin-row-content\"}>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane tab={<span> <Icon type=\"unordered-list\" /> Lista de empresas </span>} key=\"1\">\r\n              <CompanyTable/>\r\n            </TabPane>\r\n            <TabPane tab={<span> <Icon type=\"plus-circle\" /> Crear empresa </span>} key=\"2\">\r\n              <CreateCompanyForm/>\r\n            </TabPane>\r\n          </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Administrator;","/* ----------------- Company ------------------- */\r\nexport const bankTypeAccountInfo = [\r\n  {id: 1, name: \"Cuenta de ahorros\"},\r\n  {id: 2, name: \"Cuenta corriente\"},\r\n  {id: 3, name: \"Otro\"}\r\n];\r\n\r\n/* ------------------ Request State ---------------- */\r\nexport const requestState = {\r\n  APPROVED: 4,\r\n  RR_HH: 3,\r\n  OUTLAYED: 5,\r\n  REJECTED: 6\r\n};","//Libraries\r\nimport React, { Component } from 'react';\r\nimport { Form, Select, Button, Col, Row, Collapse, InputNumber,\r\n         Input, DatePicker, Modal, Upload, message, Icon, Switch, Spin} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\n//Subcomponents\r\nimport FieldTitle from '../../../subcomponents/FieldTitle';\r\nimport { SUCCESS_MODAL, ERROR_MODAL } from '../../../subcomponents/modalMessages';\r\nimport { allowEmergingWindows, WARNING_MODAL } from '../../../subcomponents/modalMessages';\r\nimport {bankTypeAccountInfo} from '../../../../../configuration/constants';\r\n\r\n//Actions\r\nimport {getCompanies} from \"../../../../../store/redux/actions/general/loginActions\";\r\nimport {createCustomer} from \"../../../../../store/redux/actions/admin/adminActions\";\r\nimport {getDateListToCustomer} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n\r\nimport { getOutlayData } from \"../../../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../../../styles/admin/create-company.css';\r\nimport BaseURL from '../../../../../services/BaseURL';\r\n\r\n//Constants\r\nconst FormItem = Form.Item;\r\nconst { Panel } = Collapse;\r\n\r\nclass CustomerManagement extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      isLoading: false,\r\n      captchaSolved: true,\r\n      email: null,\r\n      meeting: null,\r\n      moyen: false,\r\n      report: null,\r\n      loan: null,\r\n      upload: null,\r\n      particular_modal: null,\r\n      bank_account: true,\r\n      money_wallet: false      \r\n    };\r\n\r\n    this.props.getCompanies();\r\n    this.props.getOutlayData(parseInt(localStorage.user_id, 10), undefined);\r\n\r\n\r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (err){\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingrese datos válidos dentro del formulario.\");\r\n      }else{  \r\n        if(values.phoneNumber.toString()[0] !== \"3\" || values.phoneNumber.toString().length !== 10 ){\r\n          ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingresa un número de teléfono válido.\");\r\n        }else if (values.fixedNumber.toString().length !== 7) {\r\n          ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingresa un número de teléfono fijo válido.\");\r\n        }else{  \r\n          values.birthDate = values.birthDate !== undefined ? new Date(values.birthDate._d) : null;\r\n          values.customer_initDate = values.customer_initDate !== undefined ? new Date(values.customer_initDate._d) : null;\r\n          values.expeditionDate = values.expeditionDate !== undefined ? new Date(values.expeditionDate._d) : null;\r\n\r\n          this.props.createCustomer(values);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleWallet = (e) => {\r\n    this.setState({\r\n      money_wallet: e,\r\n      bank_account: !e,\r\n    });\r\n  };\r\n\r\n  onLoadFile = () => {\r\n    this.setState({\r\n      particular_modal: false,\r\n    });\r\n    //SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El cliente ha sido creado correctamente.\");\r\n  };\r\n\r\n  onChangeFile = () => {\r\n\r\n  }\r\n\r\n  validationNumbers = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^0-9]/g, '');\r\n  };\r\n\r\n  onChangeNames = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^a-zA-Z\\s]$/g, '');\r\n  };\r\n\r\n  seeDocument = () => {\r\n\r\n    let file = \"https://drive.google.com/open?id=1P8dg2A08Sb7iZIGLKRsE4xFa_pG1CeTP\";\r\n\r\n    if (file !== null ) {\r\n      let newWindow = window.open(file, \"_blank\");\r\n      if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined') {\r\n        allowEmergingWindows();\r\n      }\r\n    } else {\r\n      WARNING_MODAL('Advertencia', 'El reporte no está disponible');\r\n    }\r\n\r\n  };\r\n\r\n  changeCompany = (e) => {\r\n\r\n    //console.log(\"E\", e);\r\n\r\n    if(e !== null && e !== undefined){\r\n      this.props.getDateListToCustomer(e);\r\n    }\r\n    \r\n  };\r\n\r\n  render(){\r\n\r\n    let { companyList } = this.props;\r\n    let {getFieldDecorator} = this.props.form;\r\n    let { outlayDataResponse } = this.props;\r\n    let { bankInfo, walletInfo } = outlayDataResponse;\r\n    let {bank_account, money_wallet} = this.state;\r\n    let cycles = this.props.customerDateList !== null ? this.props.customerDateList : [];\r\n    const props = {\r\n      name: 'file',\r\n      action: BaseURL + '/Customer/MultipleCreate',\r\n      headers: {\r\n        authorization: 'Bearer '+ localStorage.access_token,\r\n        \r\n      },\r\n      onChange(info) {\r\n        /*if (info.file.status !== 'uploading') {\r\n          //console.log(info.file, info.fileList);\r\n        }]*/\r\n        if (info.file.status === 'done') {\r\n          /*this.setState({\r\n            particular_modal: false\r\n          });*/\r\n          SUCCESS_MODAL(\"Acción realizada exitosamente\", \"Los clientes han sido creados exitosamente.\");\r\n        } else if (info.file.status === 'error') {\r\n          message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n      },\r\n    \r\n    };\r\n\r\n    if(JSON.stringify(this.props.outlayDataResponse) === '{}'){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                  Cargando ...\r\n                  <br/>\r\n                  <br/>\r\n                  <Spin size=\"large\" />\r\n                </div>);\r\n    }else{\r\n      return (\r\n        <div className={\"company-div\"}>\r\n            <Row gutter={8}>\r\n              <Col xs={24} sm={24} md={8} lg={14}/>\r\n              <Col xs={24} sm={12} md={8} lg={5}>\r\n                <Button icon=\"download\" \r\n                        onClick={() => this.seeDocument()}>\r\n                        Descargar formato\r\n                </Button> \r\n              </Col>\r\n              <Col xs={24} sm={12} md={8} lg={5}>\r\n                <Button className={\"create-customer-button\"} icon=\"file-excel\" \r\n                        onClick={() => this.setState({particular_modal: true})}>\r\n                        Crear múltiples clientes\r\n                </Button> \r\n              </Col>\r\n              <Modal \r\n                title=\"Crear clientes\"\r\n                visible={this.state.particular_modal}\r\n                okText={\"Cerrar\"}\r\n                cancelText={\"Cancelar\"}\r\n                width={450}\r\n                onOk={() => this.onLoadFile()}\r\n                onCancel={() => this.setState({particular_modal: false})}>\r\n                  <div>\r\n                    <div>\r\n                      Suba el archivo de Excel con los campos correspondientes para crear clientes.\r\n                      <i> Recuerde que el archivo debe tener unas condiciones y especificaciones obligatorias.</i>\r\n                      <b> Cuando agregue el archivo, será cargado instatáneamente.</b>\r\n                    </div>\r\n                      \r\n                    <br/>           \r\n                    <Upload {...props}>\r\n                      <Button>\r\n                        <Icon type=\"upload\" /> Seleccionar y cargar archivo Excel\r\n                      </Button>\r\n                    </Upload>\r\n                    <br/>\r\n                  \r\n                  </div>\r\n\r\n              </Modal>\r\n            </Row>\r\n            <Row className={\"request-row-content\"}>\r\n              <div>  \r\n                <Form>\r\n                  <Collapse defaultActiveKey={['1']} bordered={false}>\r\n                    <Panel header=\"Información personal\" key=\"1\">\r\n                      <Row gutter={20} className={\"form-request-rows\"} >\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Nombres completos\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('name',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa un nombre'}\r\n                              ]})(\r\n                                <Input onChange={(e) => this.onChangeNames(e)} className={\"form-input-number\"} placeholder={\"Nombres completos\"} />\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Apellidos completos\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('lastName',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa un apellido'}\r\n                              ]})(\r\n                                <Input  onChange={(e) => this.onChangeNames(e)} className={\"form-input-number\"} placeholder={\"Apellidos completos\"} />\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Tipo de Identificación\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('documentType',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa un tipo de identificación'}\r\n                              ]})(\r\n                                <Select placeholder={\"Tipo de documento\"} showSearch={true} allowClear={true} autoClearSearchValue={true}>\r\n                                  <Select.Option value={1}>Cédula</Select.Option>\r\n                                  <Select.Option value={2}>Pasaporte</Select.Option>\r\n                                  <Select.Option value={3}>Cédula de extranjería</Select.Option>\r\n                                </Select>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"No. de Identificación\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('identificationId',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa un número de identificación'}\r\n                              ]})(\r\n                                <Input onChange={(e) => this.validationNumbers(e)} maxLength={12} prefix={<Icon type=\"idcard\" className={'icon-prefix'} />}\r\n                                              placeholder=\"Número de documento\" className={\"input-number\"}/>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col> \r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Teléfono fijo\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('fixedNumber',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa un teléfono fijo'}\r\n                              ]})(\r\n                                <Input onChange={(e) => this.validationNumbers(e)} className={\"form-input-number\"} placeholder={\"Teléfono fijo\"} />\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Teléfono celular\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('phoneNumber',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa un teléfono celular'}\r\n                              ]})(\r\n                                <Input onChange={(e) => this.validationNumbers(e)} className={\"form-input-number\"} placeholder={\"Teléfono celular\"} />\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Correo electrónico\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('email',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa un correo electrónico'}\r\n                              ]})(\r\n                                <Input className={\"form-input-number\"} placeholder={\"Correo electrónico\"} />\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Género\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('genus',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa un correo electrónico'}\r\n                              ]})(\r\n                                <Select placeholder={\"Género\"} showSearch={true}>\r\n                                  <Select.Option value={\"Masculino\"}>Masculino</Select.Option>\r\n                                  <Select.Option value={\"Femenino\"}>Femenino</Select.Option>\r\n                                  <Select.Option value={\"Otro\"}>Otro</Select.Option>\r\n                                </Select>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Fecha de nacimiento\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('birthDate',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa un correo electrónico'}\r\n                              ]})(\r\n                                <DatePicker placeholder={\"Fecha de nacimiento\"}/>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={7} >\r\n                          <FieldTitle title={\"Fecha de expedición del documento\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('expeditionDate',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa un correo electrónico'}\r\n                              ]})(\r\n                                <DatePicker placeholder={\"Fecha de expedición\"} className={\"date-picker-expedition\"}/>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Cantidad máxima de préstamo\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('maximumAmount',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa una cantidad de préstamo'}\r\n                              ]})(\r\n                                <Input onChange={(e) => this.validationNumbers(e)} placeholder={\"Cantidad de prestámo\"} style={{width: \"100% !important\"}}/>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={5}>\r\n                          <FieldTitle title={\"Empresa\"}/>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('idCompany', {\r\n                              rules: [ \r\n                                {required: true, message: 'Por favor, ingrese su empresa.' }],\r\n                            })(\r\n                              <Select placeholder=\"Selecciona tu empresa\" allowClear={true} showSearch={true} onChange={this.changeCompany}\r\n                                notFoundContent={\"No hay empresas disponibles\"}>\r\n                                {companyList.map((type, i) => (\r\n                                  <Select.Option key={i} value={type.idCompany}>\r\n                                    {type.socialReason}\r\n                                  </Select.Option>))\r\n                                }\r\n                              </Select>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Máximo número de cuotas\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('split',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa un número de cuotas'}\r\n                              ]})(\r\n                                <Input onChange={(e) => this.validationNumbers(e)} placeholder={\"Número de cuotas\"} style={{width: \"100% !important\"}}/>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        \r\n                        <Col lg={6} md={8} sm={12} xs={12}>\r\n                          <FieldTitle title={\"Ciclo de pagos\"}/>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('companyPayment', {\r\n                              rules: [ \r\n                                {required: true, message: 'Por favor, ingrese su ciclo de pagos.' }],\r\n                            })(\r\n                              <Select placeholder=\"Selecciona tu ciclo de pagos\" allowClear={true} showSearch={true}>\r\n                                {\r\n                                  cycles.map((type, i) => (\r\n                                    <Select.Option key={i} value={type.idCompanySalaries}>\r\n                                      {type.companyRateName + \" - \" + type.companyPaymentDates}\r\n                                    </Select.Option>))\r\n                                }\r\n                              </Select>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                      </Row>\r\n                    </Panel>  \r\n                    <Panel header=\"Información bancaria\" key=\"2\">\r\n                      <Row className={\"form-request-rows\"}>\r\n                        <Col xs={12} sm={12} md={8} lg={7}>\r\n                          <span className={\"type-account\"}>{\"Banco \"}<Switch onChange={this.handleWallet}/>{\" Billetera virtual\"}</span>  \r\n                        </Col>\r\n                      </Row>\r\n                      <br/>\r\n                    {\r\n                      bank_account && \r\n                        <Row gutter={12} className={\"form-request-rows\"}>\r\n                          <Col xs={12} sm={12} md={7} lg={7} >\r\n                            <FieldTitle title={\"Cuenta\"}/>\r\n                            <FormItem>\r\n                              {getFieldDecorator('accountBank',\r\n                                {\r\n                                  rules: [\r\n                                  {required: false, message: 'Por favor selecciona una cuenta'}\r\n                                ]})(\r\n                                  <Select onChange={this.changeBankName}  placeholder={\"Cuenta\"} showSearch={true} allowClear={true} autoClearSearchValue={true}>\r\n                                    {bankInfo.map((bank, i) =>(\r\n                                      <Select.Option value={bank.bankName} key={i}>\r\n                                        {bank.bankName}\r\n                                      </Select.Option>\r\n                                    ))\r\n                                    }\r\n                                  </Select>\r\n                                )\r\n                              }\r\n                            </FormItem>\r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={7} lg={7} >\r\n                            <FieldTitle title={\"Tipo de cuenta\"}/>\r\n                            <FormItem>\r\n                              {getFieldDecorator('accountType',\r\n                                { rules: [\r\n                                  {required: false, message: 'Por favor ingresa un tipo de cuenta'}\r\n                                ]})(\r\n                                  <Select placeholder={\"Tipo de cuenta\"}  showSearch={true} onChange={this.changeBankType}>\r\n                                    {bankTypeAccountInfo.map((accountType, i) =>(\r\n                                      <Select.Option value={accountType.id} key={i}>\r\n                                        {accountType.name}\r\n                                      </Select.Option>\r\n                                    ))\r\n                                    }\r\n                                  </Select>\r\n                                )\r\n                              }\r\n                            </FormItem>\r\n                          </Col>\r\n                          <Col xs={24} sm={24} md={10} lg={10}>\r\n                          <FieldTitle title={\"Número de cuenta\"}/>\r\n                            <FormItem >\r\n                              {getFieldDecorator('accountNumber',\r\n                                { rules: [\r\n                                  {required: false, message: 'Por favor ingresa un número de cuenta' }\r\n                                ]})(\r\n                                  <Input onChange={(e) => this.validationNumbers(e)} className={\"form-input-number\"} placeholder={\"Número de cuenta\"} \r\n                                  />\r\n                                )\r\n                              }\r\n                            </FormItem>  \r\n                          </Col>\r\n                        </Row>\r\n                      }\r\n                      {\r\n                        money_wallet &&\r\n                        <Row  gutter={12} className={\"form-request-rows\"}>\r\n                          <Col xs={12} sm={12} md={7} lg={7} >\r\n                            <FieldTitle title={\"Billetera virtual\"}/>\r\n                            <FormItem>\r\n                              {getFieldDecorator('accountBank',\r\n                                { rules: [\r\n                                  {required: false, message: 'Por favor ingresa un tipo de billetera'}\r\n                                ]})(\r\n                                  <Select placeholder={\"Tipo de billetera\"} showSearch={true} onChange={this.changeWalletType}>\r\n                                    {walletInfo.map((wallet, i) =>(\r\n                                      <Select.Option value={wallet.bankName} key={i}>\r\n                                        {wallet.bankName}\r\n                                      </Select.Option>\r\n                                    ))\r\n                                    }\r\n                                  </Select>\r\n                                )\r\n                              }\r\n                            </FormItem>\r\n                          </Col>\r\n                          <Col xs={24} sm={24} md={10} lg={10}>\r\n                          <FieldTitle title={\"Número de celular\"}/>\r\n                            <FormItem >\r\n                              {getFieldDecorator('accountNumber',\r\n                                { rules: [\r\n                                  {required: false, message: 'Por favor ingresa un número de celular' }\r\n                                ]})(\r\n                                  <InputNumber className={\"form-input-number\"} placeholder={\"Número de celular\"} \r\n                                  onChange={this.changeWalletNumber} />\r\n                                )\r\n                              }\r\n                            </FormItem>  \r\n                          </Col>\r\n                        </Row>\r\n                      }\r\n                      <Row gutter={20} className={\"form-request-rows\"}>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Tipo Contrato\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('contractType',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa un tipo de contrato'}\r\n                              ]})(\r\n                                <Select placeholder={\"Tipo de contrato\"} showSearch={true}>\r\n                                  <Select.Option value={\"Término definido\"}>Término definido</Select.Option>\r\n                                  <Select.Option value={\"Término indefinido\"}>Término indefinido</Select.Option>\r\n                                  <Select.Option value={\"Otro\"}>Otro</Select.Option>\r\n                                </Select>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Salario\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('salary',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa un salario'}\r\n                              ]})(\r\n                                <Input onChange={(e) => this.validationNumbers(e)} className={\"form-input-number\"} placeholder={\"Salario\"} formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} />\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Fecha ingreso\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('entryDate',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa una fecha'}\r\n                              ]})(\r\n                                <DatePicker className={\"form-input-number\"} placeholder={\"Fecha ingreso\"} />\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6}>\r\n                          <FieldTitle title={\"Cargo\"}/>\r\n                          <FormItem >\r\n                            {getFieldDecorator('profession',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa un cargo' }\r\n                              ]})(\r\n                                <Input className={\"form-input-number\"} placeholder={\"Cargo\"}/>\r\n                              )\r\n                            }\r\n                          </FormItem>  \r\n                        </Col>\r\n                      </Row>    \r\n                    </Panel>\r\n                  </Collapse>\r\n                  <Col xs={24} sm={12} md={18} lg={20}/>\r\n                  <Col xs={24} sm={12} md={6} lg={4}>\r\n                    <Button className={\"request-confirm-button\"} icon=\"plus-circle\" \r\n                            onClick={() => this.onConfirmRequest()}>\r\n                          Crear cliente\r\n                    </Button> \r\n                  </Col>\r\n                </Form>\r\n              </div>\r\n          </Row>\r\n        </div>\r\n      );\r\n    } \r\n    \r\n  };\r\n  \r\n};\r\n\r\nCustomerManagement.propTypes = {\r\n  companyList: PropTypes.array,\r\n  outlayDataResponse: PropTypes.object,\r\n  createCustomerResponse: PropTypes.bool,\r\n  customerDateList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    companyList: state.login.companyList,\r\n    outlayDataResponse: state.customer.outlayDataResponse,\r\n    createCustomerResponse: state.admin.createCustomerResponse,\r\n    customerDateList: state.admin.customerDateList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getCompanies: ( ) => dispatch(getCompanies( )),\r\n    createCustomer: (data) => dispatch(createCustomer(data)),\r\n    getOutlayData: (customerId, token) => dispatch(getOutlayData(customerId, token)),\r\n    getDateListToCustomer: (companyId) => dispatch(getDateListToCustomer(companyId)),\r\n  }\r\n};\r\n\r\nlet CustomerManagementForm = Form.create()(CustomerManagement);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerManagementForm);\r\n\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Tooltip, Icon, Button, Modal, Select, InputNumber} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport { allowEmergingWindows, WARNING_MODAL } from '../../../subcomponents/modalMessages';\r\nimport BaseURL from '../../../../../services/BaseURL';\r\n\r\n//Actions\r\nimport {approveCustomers, getDateListToCustomer} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\n\r\n//Constants\r\n//const Step = Steps.Step;\r\n\r\nclass RequestModalCard extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: null,\r\n      approve_modal: null,\r\n      card_style_requested: \"requested\",\r\n      card_style_analysis: \"analysis\",\r\n      card_style_approved: \"approved\",\r\n      card_style_rejected: \"rejected\",\r\n      reject_modal: null,\r\n      cycle: null,\r\n    };\r\n   \r\n    this.props.getDateListToCustomer(this.props.item.idCompany);\r\n\r\n  };\r\n\r\n  defineBadgeName = (id) => {\r\n    if(id === 1){\r\n      return \"Solicitada\";\r\n    }else if(id === 2){\r\n      return \"Evaluada\";\r\n    }else if(id === 4){\r\n      return \"Aprobada RR.HH.\";\r\n    }else if(id === 3){\r\n      return \"Aprobada Admon.\";\r\n    }else if(id === 5){\r\n      return \"Desembolsada\";\r\n    }else if(id=== 6){\r\n      return \"Rechazada\"\r\n    }else if(id=== 7){\r\n      return \"Finalizada\"\r\n    }else if(id=== 8){\r\n      return \"Devolución bancaria\"\r\n    }\r\n  };\r\n\r\n  defineButtonClass = (id) => {\r\n    if(id === 1){\r\n      return \"#c1c1c1\";\r\n    }else if(id === 2){\r\n      return \"yellow\";\r\n    }else if(id === 3){\r\n      return \"#ffa962\";\r\n    }else if(id === 4){\r\n      return \"#62ffb5\";\r\n    }else if(id === 5){\r\n      return \"#6cff55\";\r\n    }else{\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  seeDocument = (file1, file2, file3) => {\r\n\r\n    //console.log(\"File1\", file1, \"File2\", file2, \"File3\", file3);\r\n\r\n    if (file1 !== null && file2 !== null && file3 !== null) {\r\n      let newWindow = window.open(BaseURL +\"/\"+ file1, \"_blank\");\r\n      let newWindow1 = window.open(BaseURL +\"/\"+ file2, \"_blank\");\r\n      let newWindow2 = window.open(BaseURL +\"/\"+ file3, \"_blank\");\r\n      if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined' || \r\n          !newWindow1 || newWindow1.closed || typeof newWindow1.closed === 'undefined' ||\r\n          !newWindow2 || newWindow2.closed || typeof newWindow2.closed === 'undefined') {\r\n        allowEmergingWindows();\r\n      }\r\n    } else {\r\n      WARNING_MODAL('Advertencia', 'El reporte no está disponible');\r\n    }\r\n\r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    //console.log(\"SC\", this.state.cycle);\r\n    if(this.state.cycle === null || this.state.cycle === undefined){\r\n      WARNING_MODAL(\"Advertencia\", \"Por favor escoja un ciclo de pagos para el usuario\");\r\n      this.setState({approve_modal: false});\r\n    }else{\r\n      this.props.approveCustomers(this.props.item.idNewClient, true, this.state.cycle);\r\n      this.setState({approve_modal: false});\r\n    }\r\n  };\r\n\r\n  onRejectRequest = () => {\r\n    this.props.approveCustomers(this.props.item.idNewClient, false, -1);\r\n    this.setState({reject_modal: false});\r\n  };\r\n\r\n  validationInputNumbers = (e) => {\r\n    const input = e.toString();\r\n    e = input.replace(/[^0-9]/g, '');\r\n  };\r\n\r\n  changeCycle = (e) => {\r\n    //console.log(\"E\", e);\r\n    this.setState({\r\n      cycle: e\r\n    });\r\n  };\r\n\r\n  render(){\r\n\r\n    let item = this.props.item;\r\n    let cycles = this.props.customerDateList !== null ? this.props.customerDateList : [];\r\n    //console.log(\"item\", this.props.item);\r\n\r\n    return (\r\n          <div key={item.key} className={\"request-state-item-requested\"}>\r\n            <Row>\r\n              <Col xs={24} sm={12} md={2} lg={2}>\r\n                  <Tooltip title=\"Detallar solicitud\">\r\n                    <Icon type={\"plus-circle\"} className={\"request-item-icon\"} onClick={() => this.setState({visible: !this.state.visible})}/> \r\n                  </Tooltip>\r\n                </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\">\r\n                <b>Nombres</b> <br/> {item.name} \r\n              </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\" >\r\n                <b>Apellidos</b> <br/>  {item.lastName}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                <b>Empresa</b><br/> {item.socialReason}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                  <b>Número Documento</b> <br/> {item.identificationId}\r\n              </Col>\r\n              <Col xs={24} sm={12} md={2} lg={1}>\r\n                <Tooltip title=\"Aprobar usuario\">\r\n                  <Icon type={\"check-circle\"} className={\"request-item-icon-approve\"} onClick={() => this.setState({approve_modal: true})}/> \r\n                </Tooltip>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={2} lg={1}>\r\n                <Tooltip title=\"Rechazar usuario\">\r\n                  <Icon type={\"close-circle\"} className={\"request-item-icon-reject\"} onClick={() => this.setState({reject_modal: true})}/> \r\n                </Tooltip>\r\n              </Col> \r\n            </Row>\r\n          \r\n          {\r\n            this.state.visible && \r\n            <div>\r\n              \r\n              <Row style={{marginTop: \"15px\", marginBottom: \"15px\"}}>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Información adicional</b>\r\n                </Col>  \r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Nombres</b><br/>\r\n                  {item.name} \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Apellidos</b><br/>\r\n                  {item.lastName}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                  <b>Empresa</b><br/>\r\n                  {item.socialReason}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                  <b>No. Celular</b><br/>\r\n                  {item.phoneNumber}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                  <b>Dirección</b><br/>\r\n                  {item.address}\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={8} lg={5} >\r\n                  <b>Monto</b><br/>\r\n                  <InputNumber onChange={(e) => this.validationInputNumbers(e)} min={80000} formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} className={\"amount-inputs\"} defaultValue={item.defaultAmount} placeholder=\"Monto máximo\"/>\r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={8}>\r\n                  <b>Ciclo de pagos</b><br/>\r\n                      <Select className={\"payments-select\"} placeholder=\"Selecciona el ciclo de pagos\" onChange={this.changeCycle} allowClear={true} showSearch={true}>    \r\n                        {\r\n                        cycles.map((type, i) => (\r\n                          <Select.Option key={i} value={type.idCompanySalaries}>\r\n                            {type.companyRateName + \" - \" + type.companyPaymentDates}\r\n                          </Select.Option>))\r\n                        }\r\n                      </Select>\r\n                </Col>\r\n                \r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                    <b>Cuotas</b><br/>\r\n                    {item.montlyFee}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={7}>\r\n                    <b>Correo Electrónico</b><br/>\r\n                    {item.email}\r\n                </Col>\r\n              </Row>\r\n              <Row style={{marginTop: \"5px\", marginBottom: \"15px\"}} gutter={4}>\r\n                <Col xs={24} sm={12} md={18} lg={16} className={\"document-col\"}>\r\n                  <Button className={\"request-document-button\"} icon=\"file\" onClick={() => this.seeDocument(item.file1, item.file2, item.file3)} >\r\n                        Ver documento\r\n                  </Button> \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={4}>\r\n                  <Button className={\"request-confirm-button\"} icon=\"check-circle\" \r\n                          onClick={() => this.setState({approve_modal: true})}>\r\n                        Aprobar\r\n                  </Button> \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={4}>\r\n                  <Button className={\"request-reject-button\"} icon=\"close-circle\" \r\n                          onClick={() => this.setState({reject_modal: true})}>\r\n                        Rechazar\r\n                  </Button> \r\n                </Col>\r\n                \r\n              </Row>\r\n            </div>\r\n          }\r\n          <Modal \r\n            title=\"Aprobar usuario\"\r\n            visible={this.state.approve_modal}\r\n            okText={\"Aprobar\"}\r\n            cancelText={\"Cancelar\"}\r\n            width={450}\r\n            onOk={() => this.onConfirmRequest()}\r\n            onCancel={() => this.setState({approve_modal: false})}>\r\n              <div>\r\n                ¿Está seguro de realizar la aprobación del cliente? Esta acción será irreversible.                  \r\n              </div>\r\n          </Modal>\r\n          <Modal \r\n            title=\"Rechazar usuario\"\r\n            visible={this.state.reject_modal}\r\n            okText={\"Rechazar\"}\r\n            cancelText={\"Cancelar\"}\r\n            width={450}\r\n            onOk={() => this.onRejectRequest()}\r\n            onCancel={() => this.setState({reject_modal: false})}>\r\n              <div>\r\n                ¿Está seguro de realizar el rechazo del cliente? El usuario será envíado a un estado de rechazado o pendiente de evaluación particular.               \r\n              </div>\r\n          </Modal>\r\n        </div>\r\n    );\r\n  };\r\n\r\n}\r\n\r\nRequestModalCard.propTypes = {\r\n  customerList: PropTypes.array,\r\n  customerDateList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customerList: state.admin.customerList,\r\n    customerDateList: state.admin.customerDateList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    approveCustomers: (client, approve, cycleId) => dispatch(approveCustomers(client, approve, cycleId)), \r\n    getDateListToCustomer: (companyId) => dispatch(getDateListToCustomer(companyId)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestModalCard);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, List, Spin, Col, Input} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Components\r\nimport RequestModalCard from \"./RequestModalCard\";\r\n\r\n//Actions\r\nimport {getAllCustomersToApprove} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\nclass ApproveCustomer extends Component{\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      name: null,\r\n      lastName: null,\r\n      socialReason: null,\r\n      identificationId: null,\r\n      email: null,\r\n      loadInfo: false\r\n    };\r\n\r\n    this.props.getAllCustomersToApprove();\r\n    this.setData = this.setData.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n  \r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          createdDate: item.createdDate,\r\n          email: item.email,\r\n          idNewClient: item.idNewClient,\r\n          identificationId: item.identificationId,\r\n          lastName: item.lastName,\r\n          defaultAmount: item.defaultAmount,\r\n          montlyFee: item.maximumSplit,\r\n          phoneNumber: item.phoneNumber,\r\n          name: item.name,\r\n          platformState: item.platformState,\r\n          profession: item.profession,\r\n          socialReason: item.socialReason,\r\n          totalRemainder: item.totalRemainder,\r\n          idCompany: item.idCompany,\r\n          address: item.address,\r\n          file1: item.file1,\r\n          file2: item.file2,\r\n          file3: item.file3\r\n        };\r\n\r\n        if(this.filterData(row)) {\r\n          rows.push(row);\r\n        };\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  filterData(toCompare){\r\n    let {name, identificationId, lastName, socialReason, email} = this.state;\r\n\r\n    if(name === null && identificationId === null && lastName === null && socialReason === null && email === null){\r\n      return true;\r\n    }\r\n\r\n    if(name !== null && !toCompare.name.toString().toUpperCase().includes(name.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(identificationId !== null && !toCompare.identificationId.toString().toUpperCase().includes(identificationId.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(lastName !== null && !toCompare.lastName.toString().toUpperCase().includes(lastName.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(socialReason !== null && !toCompare.socialReason.toString().toUpperCase().includes(socialReason.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(email !== null && !toCompare.email.toString().toUpperCase().includes(email.toUpperCase())) {\r\n      return false;\r\n    }   \r\n\r\n    return true;\r\n  };\r\n\r\n  render(){\r\n    \r\n    let {name, identificationId, lastName, socialReason, email} = this.state;\r\n    //console.log(\"CLA\", this.props.customerListToApprove);\r\n    let tableData = this.setData(this.props.customerListToApprove);\r\n    //console.log(\"TD\", tableData, JSON.stringify(tableData) === '[]', JSON.stringify(tableData));\r\n\r\n    if(this.props.customerListToApprove === null){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                Cargando ...\r\n                <br/>\r\n                <br/>\r\n                <Spin size=\"large\" />\r\n              </div>);\r\n    }else{\r\n      return(\r\n        <div>\r\n          <Row gutter={8} className={\"approve-request-filter\"}>\r\n            <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n              <p className=\"field-title-visible\">Nombres </p>\r\n              <Input placeholder={\"Nombres\"} value={name} onChange={(e) => this.setState({name: e.target.value})}/>\r\n            </Col>\r\n            <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n              <p className=\"field-title-visible\">Apellidos</p>\r\n              <Input placeholder={\"Apellidos\"} value={lastName} onChange={(e) => this.setState({lastName: e.target.value})}/>\r\n            </Col>\r\n\r\n            <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n              <p className=\"field-title-visible\">No. Identificación</p>\r\n              <Input placeholder={\"No. Identificación\"} value={identificationId} onChange={(e) => this.setState({identificationId: e.target.value})}/>\r\n            </Col>\r\n\r\n            <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n              <p className=\"field-title-visible\">Empresa</p>\r\n              <Input placeholder={\"Empresa\"} value={socialReason} onChange={(e) => this.setState({socialReason: e.target.value})}/>\r\n            </Col>\r\n\r\n            <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n              <p className=\"field-title-visible\">Email</p>\r\n              <Input placeholder={\"Email\"} value={email} onChange={(e) => this.setState({email: e.target.value})}/>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <List\r\n              dataSource={tableData}\r\n              renderItem={(item, k) => (\r\n                <List.Item className={\"request-state-list-item\"}>\r\n                    <RequestModalCard item={item} key={k}/>\r\n                </List.Item>\r\n              )}\r\n              locale={{emptyText: \"No hay clientes para aprobar.\"}}\r\n              />\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\nApproveCustomer.propTypes = {\r\n  customerListToApprove: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customerListToApprove: state.admin.customerListToApprove,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllCustomersToApprove: ( ) => dispatch(getAllCustomersToApprove( )),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ApproveCustomer);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Icon, Tooltip, Modal, Input, InputNumber} from 'antd';\r\nimport PropTypes from \"prop-types\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\n//Actions\r\nimport {activateCustomer, updateCustomer, deleteClient} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Styles\r\n\r\nclass TableButtons extends Component {\r\n  \r\n  constructor(props){\r\n    \r\n    super(props);\r\n    \r\n    this.state = {\r\n      name: null,\r\n      lastName: null,\r\n      identificationId: null, \r\n      profession: null,\r\n      socialReason: null, \r\n      montlyFee: null,\r\n      maximumAmount: null, \r\n      email: null,\r\n      phoneNumber: null,\r\n      loading: false,\r\n      delete: null,\r\n    };\r\n\r\n    this.inputServiceName = this.inputServiceName.bind(this);\r\n    this.inputServiceTime = this.inputServiceTime.bind(this);\r\n    this.inputService = this.inputService.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    \r\n  };\r\n\r\n  inputServiceName(e, service){\r\n    this.setState({\r\n      [service]: e.target.value,\r\n    });    \r\n  };\r\n\r\n  inputService(e, service){\r\n    this.setState({\r\n      [service]: e,\r\n    });\r\n  };\r\n\r\n  inputServiceTime(e){\r\n    let item = e;\r\n    this.props.activateCustomer(item.idClient, parseInt(item.platformState, 10) === 1 ? false : true);    \r\n  };\r\n\r\n  deleteUser(e){\r\n    let item = e;\r\n    this.props.deleteClient(item.idClient);   \r\n    this.setState({\r\n      delete: false\r\n    });\r\n  };\r\n\r\n  handleEdit(item){\r\n    let data = {\r\n      name: this.state.name===null ? item.name : this.state.name,\r\n      lastName: this.state.lastName===null ? item.lastName : this.state.lastName,\r\n      identificationId: this.state.identificationId===null ? item.identificationId : this.state.identificationId,\r\n      profession: this.state.profession===null ? item.profession : this.state.profession,\r\n      montlyFee: this.state.montlyFee===null ? item.montlyFee : this.state.montlyFee,\r\n      maximumAmount: this.state.maximumAmount===null ? item.maximumAmount : this.state.maximumAmount, \r\n      email: this.state.email===null ? item.email : this.state.email,\r\n      phoneNumber: this.state.phoneNumber===null ? item.phoneNumber : this.state.phoneNumber,\r\n      idClient: item.idClient,\r\n      idUser: item.idUser,\r\n      idAccount: item.idAccount,\r\n    };\r\n    this.props.updateCustomer(data);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Row gutter={12}>\r\n          <Col span={6}  className={\"delete-col\"}>\r\n            <Tooltip title={\"Editar cliente\"}>\r\n              <Icon className={\"icon-button delete-icon\"} onClick={() => this.setState({visible: true})}\r\n                type={\"edit\"} style={{ fontSize: '16px'}}/>\r\n            </Tooltip>\r\n          </Col>\r\n          \r\n          <Col span={6}  className={\"delete-col\"}>\r\n            <Tooltip title={\"Activar/Desactivar cliente\"}>\r\n              <Icon className={\"icon-button delete-icon\"} onClick={() => this.inputServiceTime(this.props.item)}\r\n                type={\"poweroff\"} style={{ fontSize: '16px'}}/>\r\n            </Tooltip>\r\n          </Col>\r\n          <Col span={6}  className={\"delete-col\"}>\r\n            <Tooltip title={\"Eliminar cliente\"}>\r\n              <Icon className={\"icon-button delete-icon\"} onClick={() => this.setState({delete: true})}\r\n                type={\"close-circle\"} style={{ fontSize: '16px'}}/>\r\n            </Tooltip>\r\n          </Col>           \r\n        </Row>\r\n        <Modal\r\n            title={\"Editar cliente\"}\r\n            visible={this.state.visible}\r\n            okText={\"Guardar\"}\r\n            cancelText={\"Cancelar\"}\r\n            width={700}\r\n            onOk={() => this.handleEdit(this.props.item)}\r\n            onCancel={() => this.setState({visible: false})}\r\n            keyboard={!this.state.loading}\r\n            closable={!this.state.loading}>\r\n            <Row gutter={12}>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Nombres:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.name} placeholder={\"Nombres\"} onChange={(e) => this.inputServiceName(e, 'name')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Apellidos:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.lastName} placeholder={\"Apellidos\"} onChange={(e) => this.inputServiceName(e, 'lastName')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                No. Identificación:\r\n                <br/>\r\n                <InputNumber disabled={parseInt(localStorage.role_id, 10) === 2} className={\"company-edit-nit\"} defaultValue={this.props.item.identificationId} onChange={(e) => this.inputService(e, 'identificationId')} placeholder={\"No. Identificación\"}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Correo electrónico:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.email} placeholder={\"Correo electrónico\"} onChange={(e) => this.inputServiceName(e, 'email')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Profesión:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.profession} placeholder={\"Profesión\"} onChange={(e) => this.inputServiceName(e, 'profession')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Teléfono celular:\r\n                <br/>\r\n                <InputNumber className={\"company-edit-nit\"} defaultValue={this.props.item.phoneNumber} placeholder={\"Número celular\"} onChange={(e) => this.inputService(e, 'phoneNumber')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Máxima cantidad a prestar:\r\n                <br/>\r\n                <InputNumber className={\"company-edit-nit\"} defaultValue={this.props.item.maximumAmount} placeholder={\"Máximo préstamo\"} onChange={(e) => this.inputService(e, 'maximumAmount')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Cantidad de cuotas máxima:\r\n                <br/>\r\n                <InputNumber className={\"company-edit-nit\"} defaultValue={this.props.item.montlyFee} placeholder={\"Cantidad de cuotas\"} onChange={(e) => this.inputService(e, 'montlyFee')}/>\r\n              </Col>\r\n              \r\n            </Row>\r\n        </Modal>\r\n        <Modal\r\n          title={\"Eliminar cliente\"}\r\n          visible={this.state.delete}\r\n          okText={\"Aceptar\"}\r\n          cancelText={\"Cancelar\"}\r\n          width={500}\r\n          onOk={() => this.deleteUser(this.props.item)}\r\n          onCancel={() => this.setState({delete: false})}>\r\n          <p>\r\n            ¿Está seguro de eliminar el cliente? Este proceso será irreversible.\r\n          </p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nTableButtons.propTypes = {\r\n  updateServices: PropTypes.func,\r\n  deleteServices: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    activateCustomer: (clientId, status) => dispatch(activateCustomer(clientId, status)),\r\n    updateCustomer: (data) => dispatch(updateCustomer(data)),\r\n    deleteClient: (clientid) => dispatch(deleteClient(clientid))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableButtons);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Divider, Card, Input, Table, Spin} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Components\r\nimport TableButtons from './ServiceTableButtons';\r\n\r\n//Actions\r\nimport {getAllCustomers} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Constants\r\nconst table = [\r\n  {\r\n    title: <div>Nombres</div>,\r\n    dataIndex: 'name',\r\n    width: \"110px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.name.localeCompare(b.name)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>No. Identificación</div>,\r\n    dataIndex: 'identificationId',\r\n    width: \"80px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.identificationId.toString().localeCompare(b.identificationId.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Correo Electrónico</div>,\r\n    dataIndex: 'email',\r\n    width: \"120px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.email.localeCompare(b.email)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Creación</div>,\r\n    dataIndex: 'createdDate',\r\n    width: \"60px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text.split(\"T\")[0]}</div>,\r\n    sorter: (a, b) =>{ return a.createdDate.localeCompare(b.createdDate)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Empresa</div>,\r\n    dataIndex: 'socialReason',\r\n    width: \"80px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.socialReason.localeCompare(b.socialReason)},\r\n  },\r\n  {\r\n    title: \" \",\r\n    dataIndex: 'actions',\r\n    width: \"50px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-div\"}>{text}</div>,\r\n  } \r\n];\r\n\r\n//Table State\r\n/*,\r\n  {\r\n    title: <div className={\"table-p\"}>Estado</div>,\r\n    dataIndex: 'platformState',\r\n    width: \"50px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.platformState.localeCompare(b.platformState)},\r\n  },\r\n*/\r\n\r\n//Functions\r\nfunction itemRender(current, type, originalElement) {\r\n  if (type === 'prev' || type === 'Previous Page') {\r\n    return <span title={'Anterior'} className={\"item-renderer\"}>{\"<\"}</span>;\r\n  } if (type === 'next') {\r\n    return <span title={'Siguiente'} className={\"item-renderer\"}>{\">\"}</span>;\r\n  }\r\n  return originalElement;\r\n};\r\n\r\nclass CustomerTable extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      name: null, \r\n      identificationId: null,\r\n      email: null, \r\n      createdDate: null,\r\n      totalRemainder: null,\r\n      socialReason: null\r\n    };\r\n\r\n    this.setData = this.setData.bind(this);\r\n    this.inputLinkName = this.inputLinkName.bind(this);\r\n\r\n    this.props.getAllCustomers();\r\n\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          name: item.name + \" \" + item.lastName,\r\n          identificationId: item.identificationId,\r\n          email: item.email,\r\n          createdDate: item.createdDate,\r\n          totalRemainder: item.totalRemainder,\r\n          socialReason: item.socialReason,\r\n          platformState: parseInt(item.platformState, 10) === 1 ? \"Activo\" : \"Inactivo\",\r\n          actions: <TableButtons item={item}/>\r\n        };\r\n\r\n        if(this.filterData(row)) {\r\n          rows.push(row);\r\n        };\r\n\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  filterData(toCompare){\r\n    let {name, identificationId, email, totalRemainder, socialReason} = this.state;\r\n\r\n    if(name === null && identificationId === null && email === null && totalRemainder === null && socialReason === null){\r\n      return true;\r\n    }\r\n\r\n    if(socialReason !== null && !toCompare.socialReason.toString().toUpperCase().includes(socialReason.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(name !== null && !toCompare.name.toString().toUpperCase().includes(name.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(identificationId !== null && !toCompare.identificationId.toString().toUpperCase().includes(identificationId.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(email !== null && !toCompare.email.toString().toUpperCase().includes(email.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(totalRemainder !== null && !toCompare.totalRemainder.toString().toUpperCase().includes(totalRemainder.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  inputLinkName(e){\r\n    this.setState({\r\n      linkName: e.target.value,\r\n    });    \r\n  };\r\n\r\n  render() {\r\n\r\n    let {name, identificationId, email, socialReason} = this.state;\r\n    let tableData = this.setData(this.props.customerList);\r\n  \r\n    if(this.props.customerList === null){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                  Cargando ...\r\n                  <br/>\r\n                  <br/>\r\n                  <Spin size=\"large\" />\r\n                </div>);\r\n    }else{\r\n      return (\r\n        <div >\r\n          <Row className={\"social-row-content\"}>\r\n            <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n              <Card className={\"transactions-card\"}>\r\n                <Row gutter={6}>\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={7}>\r\n                    <p className=\"field-title-visible\">Nombres: </p>\r\n                    <Input placeholder={\"Nombres\"} value={name} onChange={(e) => this.setState({name: e.target.value})}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                    <p className=\"field-title-visible\">No. Identificación</p>\r\n                    <Input placeholder={\"No. Identificación\"} value={identificationId} onChange={(e) => this.setState({identificationId: e.target.value})}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\">Correo electrónico</p>\r\n                    <Input placeholder={\"Correo electrónico\"} value={email} onChange={(e) => this.setState({email: e.target.value})}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\">Empresa</p>\r\n                    <Input placeholder={\"Empresa\"} value={socialReason} onChange={(e) => this.setState({socialReason: e.target.value})}/>\r\n                  </Col>\r\n\r\n                </Row>\r\n                <Divider className={\"second-divider\"}/>\r\n                  <Table className={\"new-table\"} dataSource={tableData} columns={table} rowKey={'key'}\r\n                    locale={{ emptyText: 'No hay clientes todavía' }} pagination={{ itemRender: itemRender, showSizeChanger: true,\r\n                    pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"] }} size={'small'} scroll={{x:'500px'|true}}/>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n}\r\n\r\nCustomerTable.propTypes = {\r\n  customerList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customerList: state.admin.customerList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllCustomers: ( ) => dispatch(getAllCustomers( )),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerTable);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Tabs, Icon} from 'antd';\r\n\r\n//Components\r\nimport CustomerManagement from './create/CreateCustomer';\r\nimport ApproveCustomer from './approve/ApproveCustomer';\r\nimport CustomerTable from './list/CustomerTable';\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\n\r\n//Assets\r\n\r\n//Constants\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass Customer_Management extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"admin-div\"}>\r\n        <Row>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <h2 className={'header-terms-title'}>Gestionar clientes</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className={\"admin-row-content\"}>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane tab={<span> <Icon type=\"unordered-list\" />Ver clientes</span>} key=\"1\">\r\n              <CustomerTable/>\r\n            </TabPane>            \r\n            <TabPane tab={<span> <Icon type=\"usergroup-add\" /> Crear cliente </span>} key=\"2\">\r\n              <CustomerManagement/>\r\n            </TabPane>\r\n            <TabPane tab={<span> <Icon type=\"check-circle\" /> Aprobar cliente </span>} key=\"3\">\r\n              <ApproveCustomer/>\r\n            </TabPane>\r\n          </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Customer_Management;","//Subcomponents\r\nimport request from '../requestWrapper';\r\n\r\nfunction approveorRejectRequest(data){\r\n  return request({\r\n    url: '/Request/ApproveorReject',\r\n    method: 'PUT',\r\n    headers:{\r\n      requestid: data.requestId,\r\n      approve: data.approve,\r\n      transactionCode: data.transactionCode,\r\n      text: data.text,\r\n    }\r\n  });\r\n};\r\n\r\nfunction getAllCustomer(companyId){\r\n  return request({\r\n    url: '/Customer/GetAll',\r\n    method: 'GET',\r\n    headers:{\r\n      companyId: companyId\r\n    }\r\n  });\r\n};\r\n\r\nfunction getReportByCustomer(customerId){\r\n  return request({\r\n    url: '/Report/GetReportByCustomer',\r\n    method: 'GET',\r\n    headers:{\r\n      customerId: customerId\r\n    }\r\n  });\r\n};\r\n\r\nfunction getReportByCompany(companyId){\r\n  return request({\r\n    url: '/Report/GetReportByCompany',\r\n    method: 'GET',\r\n    headers:{\r\n      companyId: companyId\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst generalService = {\r\n  approveorRejectRequest, getAllCustomer, getReportByCustomer, \r\n  getReportByCompany\r\n};\r\n\r\nexport default generalService;","///Types\r\nimport {generalTypes as C} from '../../types';\r\n\r\n//Services\r\nimport generalServices from '../../../../services/general/generalServices';\r\n\r\n//Subcomponents\r\nimport { ERROR_MODAL, SUCCESS_MODAL } from '../../../../ui/components/subcomponents/modalMessages';\r\n\r\n//Actions\r\nimport {getAllRequestToOutLay, getAllRequestToApprove} from '../admin/adminActions';\r\n\r\nexport const approveorRejectRequest = (data, userId) => {\r\n  return dispatch => {\r\n    return generalServices.approveorRejectRequest(data)\r\n      .then(response => {\r\n        dispatch(getAllRequestToOutLay(userId));\r\n        dispatch(getAllRequestToApprove());\r\n        dispatch({\r\n          type: C.APPROVE_REJECT_REQUEST,\r\n          payload: response.data\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada exitosamente\", response.data.message)\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.APPROVE_REJECT_REQUEST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al aprobar o rechazar la solicitud', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const approveorRejectRequestByCompany = (data, userId) => {\r\n  return dispatch => {\r\n    return generalServices.approveorRejectRequest(data)\r\n      .then(response => {\r\n        dispatch(getAllRequestToApprove());\r\n        dispatch({\r\n          type: C.APPROVE_REJECT_REQUEST,\r\n          payload: response.data\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada exitosamente\", \"La solicitud ha sido aprobada exitosamente.\")\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.APPROVE_REJECT_REQUEST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al aprobar o rechazar la solicitud', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllCustomer = (companyId) => {\r\n  return dispatch => {\r\n    return generalServices.getAllCustomer(companyId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_CUSTOMER_LIST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_CUSTOMER_LIST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de clientes', err);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getReportByCustomer = (customerId) => {\r\n  return dispatch => {\r\n    return generalServices.getReportByCustomer(customerId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_CUSTOMER_REPORT,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_CUSTOMER_REPORT,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer el reporte del cliente', err);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getReportByCompany = (companyId) => {\r\n  return dispatch => {\r\n    return generalServices.getReportByCompany(companyId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_COMPANY_REPORT,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_COMPANY_REPORT,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer el reporte de la empresa', err);\r\n      });\r\n  }\r\n};\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Tooltip, Icon, Divider, Steps, Badge, Button, Modal, Form, Select} from 'antd';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\nimport { allowEmergingWindows, WARNING_MODAL} from '../../../subcomponents/modalMessages';\r\n\r\n//Subcomponents\r\nimport BaseURL from '../../../../../services/BaseURL';\r\n\r\n//Actions\r\nimport {approveorRejectRequest} from \"../../../../../store/redux/actions/general/generalActions\";\r\n\r\n//Constants\r\nconst Step = Steps.Step;\r\n//const TextArea = Input.TextArea;\r\n\r\nclass RequestStateModal extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: null,\r\n      approve_modal: null,\r\n      card_style_requested: \"requested\",\r\n      card_style_analysis: \"analysis\",\r\n      card_style_approved: \"approved\",\r\n      card_style_rejected: \"rejected\",\r\n      reject_modal: null,\r\n      text: \"\",\r\n    };\r\n    \r\n  };\r\n\r\n  defineBadgeName = (id) => {\r\n    if(id === 1){\r\n      return \"Solicitada\";\r\n    }else if(id === 2){\r\n      return \"Evaluada\";\r\n    }else if(id === 3){\r\n      return \"Aprobada RR.HH.\";\r\n    }else if(id === 4){\r\n      return \"Aprobada Admon.\";\r\n    }else if(id === 5){\r\n      return \"Desembolsada\";\r\n    }else if(id=== 6){\r\n      return \"Rechazada\"\r\n    }\r\n  };\r\n\r\n  defineButtonClass = (id) => {\r\n    if(id === 1){\r\n      return \"#c1c1c1\";\r\n    }else if(id === 2){\r\n      return \"yellow\";\r\n    }else if(id === 3){\r\n      return \"#ffa962\";\r\n    }else if(id === 4){\r\n      return \"#62ffb5\";\r\n    }else if(id === 5){\r\n      return \"#6cff55 \";\r\n    }else if(id === 6){\r\n      return \"#ff4747\";\r\n    }else{\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  seeDocument = (filePath, paymentSupport, workingSupport) => {\r\n\r\n    console.log(\"FP\", filePath, \"PS\", paymentSupport, \"WS\", workingSupport);\r\n\r\n    let url = filePath;\r\n\r\n    if (url !== null) {\r\n      let newWindow = window.open(BaseURL + \"/\" + filePath, \"_blank\");\r\n      if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined' ) {\r\n        allowEmergingWindows();\r\n      }\r\n    } else {\r\n      WARNING_MODAL('Advertencia', 'El documento no está disponibles no está disponible');\r\n    }\r\n\r\n    if (  paymentSupport !== \"\" && workingSupport !== \"\" ) {  \r\n      if (paymentSupport !== null && workingSupport !== null ) {\r\n        let newWindow1 = window.open(BaseURL + \"/\" + paymentSupport, \"_blank\");\r\n        let newWindow2 = window.open(BaseURL + \"/\" + workingSupport, \"_blank\");\r\n        if (!newWindow1 || newWindow1.closed || typeof newWindow1.closed === 'undefined' ||\r\n            !newWindow2 || newWindow2.closed || typeof newWindow2.closed === 'undefined' ) {\r\n          allowEmergingWindows();\r\n        }\r\n      } else {\r\n        WARNING_MODAL('Advertencia', 'Los documentos no están disponibles no está disponible');\r\n      }\r\n    }  \r\n    \r\n  };\r\n\r\n  onConfirmRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: true,\r\n    };\r\n    this.props.approveorRejectRequest(data, localStorage.user_id);\r\n    this.setState({approve_modal: false});\r\n  };\r\n\r\n  onRejectRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: false,\r\n      text: this.state.text\r\n    };\r\n    //console.log(\"D\", data);\r\n    this.props.approveorRejectRequest(data, localStorage.user_id);\r\n    this.setState({reject_modal: false});\r\n  };\r\n\r\n  inputChange = (e) => {\r\n\r\n    let value = e;\r\n    this.setState({\r\n      text: value,\r\n    });\r\n};\r\n\r\n  render(){\r\n\r\n    let item = this.props.item;\r\n    //let {text} = this.state;\r\n    \r\n    return (\r\n        <Badge count={this.defineBadgeName(item.requestStateId)} style={{backgroundColor: this.defineButtonClass(item.idRequestState), color: \"black\"} }>\r\n          <div key={item.key} className={\"request-state-item-requested\"}>\r\n            <Row>\r\n              <Col xs={24} sm={12} md={2} lg={2}>\r\n                  <Tooltip title=\"Detallar solicitud\">\r\n                    <Icon type={\"plus-circle\"} className={\"request-item-icon\"} onClick={() => this.setState({visible: !this.state.visible})}/> \r\n                  </Tooltip>\r\n                </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\">\r\n                <b>Número de Solicitud</b> <br/><br/>\r\n                {\"Solicitud No. \" + item.idRequest} \r\n              </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\" >\r\n                  <b>Estado</b> <br/><br/>  {this.defineBadgeName(item.idRequestState)}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                  <b>Fecha de Solicitud</b> <br/><br/> {(item.createdDate).split(\"T\")[0]}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                  <b>Monto</b> <br/><br/>\r\n                  <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                      value={item.quantity} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={2} lg={1}>\r\n                <Tooltip title=\"Aprobar solicitud\">\r\n                  <Icon type={\"check-circle\"} className={\"request-item-icon-approve\"} onClick={() => this.setState({approve_modal: true})}/> \r\n                </Tooltip>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={2} lg={1}>\r\n                <Tooltip title=\"Rechazar solicitud\">\r\n                  <Icon type={\"close-circle\"} className={\"request-item-icon-reject\"} onClick={() => this.setState({reject_modal: true})}/> \r\n                </Tooltip>\r\n              </Col> \r\n            </Row>\r\n          \r\n          {\r\n            this.state.visible && \r\n            <div>\r\n              <Row>\r\n                <Divider/>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Flujo de aprobación</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Steps current={item.idRequestState-1} size=\"small\" className={\"request-state-steps\"}>\r\n                  <Step title=\"Solicitada\"/>\r\n                  <Step title=\"Evaluada\"/>\r\n                  <Step title=\"Aprobar RR.H H.\"/>\r\n                  <Step title=\"Aprobar Admon.\"/>                 \r\n                  <Step title=\"Desembolsada\"/>\r\n                  \r\n                </Steps>\r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Información adicional</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={8} lg={6} >\r\n                  <b>Nombres</b><br/><br/>\r\n                  {item.name + \" \" + item.lastName} \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Cédula</b><br/><br/>\r\n                  {item.identificationId}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                  <b>Empresa</b><br/><br/>\r\n                  {item.socialReason}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                  <b>Saldo Usuario</b><br/><br/>\r\n                    <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                    value={item.totalRemainder} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/> \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Valor total</b><br/><br/>\r\n                  <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                      value={item.quantity+item.interestValue+item.administrationValue} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/> \r\n                </Col>\r\n                \r\n              </Row>\r\n              <br/>\r\n              <br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={7} lg={5}>\r\n                    <b>Teléfono</b><br/><br/>\r\n                    {item.phoneNumber}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={3} >\r\n                    <b>Cuotas</b><br/><br/>\r\n                    {item.split}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={5}>\r\n                    <b>Cuenta</b><br/><br/>\r\n                    {item.account}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                    <b>Tipo de Cuenta</b><br/><br/>\r\n                    {item.accountType === \"null\" ? \"-\" : item.accountType}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                    <b>Número de cuenta</b><br/><br/>\r\n                    {item.accountNumber}\r\n                </Col>\r\n              </Row>\r\n              <br/><br/>\r\n              <Row gutter={4}>\r\n                <Col xs={24} sm={12} md={18} lg={14} className={\"document-col\"}>\r\n                  <Button className={\"request-document-button\"} icon=\"file\" onClick={() => this.seeDocument(item.filePath, item.paymentSupport, item.workingSupport)} >\r\n                        Ver documento\r\n                  </Button> \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={5}>\r\n                  <Button className={\"request-reject-button\"} icon=\"close-circle\" \r\n                          onClick={() => this.setState({reject_modal: true})}>\r\n                        Rechazar crédito\r\n                  </Button> \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={5}>\r\n                  <Button className={\"request-confirm-button\"} icon=\"check-circle\" \r\n                          onClick={() => this.setState({approve_modal: true})}>\r\n                        Aprobar crédito\r\n                  </Button> \r\n                </Col>\r\n                \r\n              </Row>\r\n            </div>\r\n          }\r\n\r\n          <Modal \r\n            title=\"Aprobar crédito\"\r\n            visible={this.state.approve_modal}\r\n            okText={\"Aprobar\"}\r\n            cancelText={\"Cancelar\"}\r\n            width={450}\r\n            onOk={() => this.onConfirmRequest(item.idRequest)}\r\n            onCancel={() => this.setState({approve_modal: false})}>\r\n              <div>\r\n                ¿Está seguro de realizar la aprobación del crédito? Esta acción será irreversible.                  \r\n              </div>\r\n\r\n          </Modal>\r\n          \r\n          <Modal \r\n            title=\"Rechazar crédito\"\r\n            visible={this.state.reject_modal}\r\n            okText={\"Rechazar\"}\r\n            cancelText={\"Atrás\"}\r\n            width={450}\r\n            onOk={() => this.onRejectRequest(item.idRequest)}\r\n            onCancel={() => this.setState({reject_modal: false})}\r\n            okButtonProps={{ disabled: !(this.state.text.length >= 20) }}>\r\n              <Form>\r\n                <p>¿Está seguro de realizar el rechazo del crédito? Esta acción será irreversible.\r\n                Si es así, especifique a continuación la razón por la cual desea rechazar la solicitud.</p>\r\n                <br/>\r\n                <Select placeholder={\"Elija una opción de rechazo\"} onChange={e => this.inputChange(e)} onshowSearch={true} allowClear={true} autoClearSearchValue={true}>\r\n                  <Select.Option value={\"Documentos Alterados\"}>Documentos Alterados</Select.Option>\r\n                  <Select.Option value={\"No se encuentra en base de datos de la empresa\"}>No se encuentra en base de datos de la empresa</Select.Option>\r\n                  <Select.Option value={\"No cuenta con capacidad de endeudamiento\"}>No cuenta con capacidad de endeudamiento</Select.Option>\r\n                </Select>\r\n              </Form>\r\n\r\n\r\n          </Modal>\r\n        </div>\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n}\r\n\r\nRequestStateModal.propTypes = {\r\n  customerList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customerList: state.admin.customerList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //getAllRequestToApprove: () => dispatch(getAllRequestToApprove( )),\r\n    approveorRejectRequest: (data, userId) => dispatch(approveorRejectRequest(data, userId)),    \r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestStateModal);","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Row, List, Spin, Col, Input} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport RequestModal from \"./RequestStateModal\";\r\n\r\n//Actions\r\nimport {getAllRequestToApprove} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\nimport { SUCCESS_MODAL } from '../../../subcomponents/modalMessages';\r\n\r\nclass ApproveRequest extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      visible: null,\r\n      idRequest: null,\r\n      idRequestState: null,\r\n      createdDate: null,\r\n      quantity: null,\r\n      identificationId: null,\r\n      requestStateName: null\r\n    };\r\n\r\n    this.props.getAllRequestToApprove();\r\n    this.setData = this.setData.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n\r\n  };\r\n\r\n  onChangeMoyen = (e) => {\r\n    this.setState({\r\n      moyen: true\r\n    }); \r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El préstamo ha sido solicitado correctamente.\");\r\n    this.setState({\r\n      loan: true\r\n    });\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          idRequest: item.idRequest,\r\n          idRequestState: item.idRequestState,\r\n          createdDate: item.createdDate,\r\n          quantity: item.quantity,\r\n          interestValue: item.interestValue,\r\n          administrationValue: item.administrationValue,\r\n          totalRemainder: item.totalRemainder,\r\n          identificationId: item.identificationId,\r\n          requestStateName: item.requestStateName,\r\n          lastName: item.lastName,\r\n          name: item.name,\r\n          Company_idCompany: item.Company_idCompany,\r\n          socialReason: item.socialReason,\r\n          profession: item.profession,\r\n          split: item.split,\r\n          account: item.account,\r\n          accountType: item.accountType,\r\n          accountNumber: item.accountNumber,\r\n          phoneNumber: item.phoneNumber,\r\n          filePath: item.filePath,\r\n          workingSupport: item.workingSupport,\r\n          paymentSupport: item.paymentSupport\r\n        };\r\n\r\n        if(this.filterData(row)) {\r\n          rows.push(row);\r\n        };\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  filterData(toCompare){\r\n    let {idRequest, identificationId, requestStateName, quantity, createdDate} = this.state;\r\n\r\n    if(idRequest === null && identificationId === null && quantity === null && requestStateName === null && createdDate === null){\r\n      return true;\r\n    }\r\n\r\n    if(idRequest !== null && !toCompare.idRequest.toString().toUpperCase().includes(idRequest.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(identificationId !== null && !toCompare.identificationId.toString().toUpperCase().includes(identificationId.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(requestStateName !== null && !toCompare.requestStateName.toString().toUpperCase().includes(requestStateName.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(quantity !== null && !toCompare.quantity.toString().toUpperCase().includes(quantity.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(createdDate !== null && !toCompare.createdDate.toString().toUpperCase().includes(createdDate.toUpperCase())) {\r\n      return false;\r\n    }   \r\n\r\n    return true;\r\n  };\r\n\r\n  render(){\r\n\r\n    let {idRequest, identificationId, requestStateName, quantity, createdDate} = this.state;\r\n    let tableData = this.setData(this.props.requestResponse);\r\n    //console.log(\"JSON\", tableData, JSON.stringify(tableData));\r\n    \r\n    if(this.props.requestResponse === null){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                Cargando ...\r\n                <br/>\r\n                <br/>\r\n                <Spin size=\"large\" />\r\n              </div>);\r\n    }else{\r\n      return (\r\n        <div className={\"approve-request-state-div\"}>\r\n          \r\n          <Row gutter={8} className={\"approve-request-filter\"}>\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n                  <p className=\"field-title-visible\">Número solicitud </p>\r\n                  <Input placeholder={\"Número solicitud\"} value={idRequest} onChange={(e) => this.setState({idRequest: e.target.value})}/>\r\n                </Col>\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                  <p className=\"field-title-visible\">No. Cédula</p>\r\n                  <Input placeholder={\"No. de cédula\"} value={identificationId} onChange={(e) => this.setState({identificationId: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                  <p className=\"field-title-visible\">Estado</p>\r\n                  <Input placeholder={\"Estado\"} value={requestStateName} onChange={(e) => this.setState({requestStateName: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n                  <p className=\"field-title-visible\">Cantidad</p>\r\n                  <Input placeholder={\"Cantidad\"} value={quantity} onChange={(e) => this.setState({quantity: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                  <p className=\"field-title-visible\">Fecha Solicitud</p>\r\n                  <Input placeholder={\"Fecha Solicitud\"} value={createdDate} onChange={(e) => this.setState({createdDate: e.target.value})}/>\r\n                </Col>\r\n              </Row>\r\n                <br/>\r\n            <Row>\r\n            <List dataSource={tableData}\r\n                  renderItem={(item, k) => (\r\n                    <List.Item className={\"request-state-list-item\"}>\r\n                        <RequestModal item={item} key={k}/>\r\n                    </List.Item>\r\n                  )}\r\n                  locale={{emptyText: \"No hay solicitudes para aprobar\"}}/>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  }; \r\n}\r\n\r\nApproveRequest.propTypes = {\r\n  requestResponse: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    requestResponse: state.admin.requestResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllRequestToApprove: () => dispatch(getAllRequestToApprove()),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ApproveRequest);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Tooltip, Icon, Divider, Steps, Badge, Button, Modal, Input} from 'antd';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport FieldTitle from '../../../subcomponents/FieldTitle';\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\n//import { SUCCESS_MODAL } from '../../../subcomponents/modalMessages';\r\n\r\nimport {approveorRejectRequest} from \"../../../../../store/redux/actions/general/generalActions\";\r\n\r\n//Constants\r\nconst Step = Steps.Step;\r\n\r\nclass RequestOutLayState extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: null,\r\n      approve_modal: null,\r\n      transactionCode: null,\r\n      card_style_requested: \"requested\",\r\n      card_style_analysis: \"analysis\",\r\n      card_style_approved: \"approved\",\r\n      card_style_rejected: \"rejected\",\r\n    };\r\n    \r\n  };\r\n\r\n  defineBadgeName = (id) => {\r\n    if(id === 1){\r\n      return \"Solicitada\";\r\n    }else if(id === 2){\r\n      return \"Evaluada\";\r\n    }else if(id === 3){\r\n      return \"Aprobada RR.HH.\";\r\n    }else if(id === 4){\r\n      return \"Aprobada Admon.\";\r\n    }else if(id === 5){\r\n      return \"Desembolsada\";\r\n    }else if(id=== 6){\r\n      return \"Rechazada\"\r\n    }\r\n  };\r\n\r\n  defineButtonClass = (id) => {\r\n    if(id === 1){\r\n      return \"#c1c1c1\";\r\n    }else if(id === 2){\r\n      return \"yellow\";\r\n    }else if(id === 3){\r\n      return \"#ffa962\";\r\n    }else if(id === 4){\r\n      return \"#62ffb5\";\r\n    }else if(id === 5){\r\n      return \"#6cff55 \";\r\n    }else if(id === 6){\r\n      return \"#83ff62 \";\r\n    }else{\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  onConfirmRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: true,\r\n      transactionCode: this.state.transactionCode\r\n    };\r\n    this.props.approveorRejectRequest(data, localStorage.user_id);\r\n    this.setState({approve_modal: false});\r\n  };\r\n\r\n  onChangeTransactionCode = (e) => {\r\n    this.setState({\r\n      transactionCode: e.target.value\r\n    });\r\n  };\r\n\r\n  onRejectRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: false,\r\n      transactionCode: this.state.transactionCode\r\n    };\r\n    //console.log(\"D\", data);\r\n    this.props.approveorRejectRequest(data, localStorage.user_id);\r\n    this.setState({approve_modal: false});\r\n  };\r\n\r\n  render(){\r\n\r\n    let item = this.props.item;\r\n    let {transactionCode} = this.state;\r\n    //console.log(transactionCode);\r\n\r\n    return (\r\n      <Badge count={this.defineBadgeName(item.requestStateId)} style={{backgroundColor: this.defineButtonClass(item.requestStateId), color: \"black\"} }>\r\n            <div key={item.key} className={\"request-state-item-requested\"}>\r\n              <Row>\r\n                <Col xs={24} sm={12} md={2} lg={2}>\r\n                    <Tooltip title=\"Detallar solicitud\">\r\n                      <Icon type={\"plus-circle\"} className={\"request-item-icon\"} onClick={() => this.setState({visible: !this.state.visible})}/> \r\n                    </Tooltip>\r\n                  </Col>\r\n                <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\">\r\n                  <b>Número de Solicitud</b> <br/><br/>\r\n                  {\"Solicitud No. \" + item.idRequest} \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\" >\r\n                    <b>Estado</b> <br/><br/>  {this.defineBadgeName(item.idRequestState)}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                    <b>Fecha de Solicitud</b> <br/><br/> {(item.createdDate).split(\"T\")[0]}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                    <b>Valor Total</b> <br/><br/>\r\n                    <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                        value={item.quantity} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={2} lg={1}>\r\n                  <Tooltip title=\"Desembolsar solicitud\">\r\n                    <Icon type={\"check-circle\"} className={\"request-item-icon-approve\"} onClick={() => this.setState({approve_modal: true})}/> \r\n                  </Tooltip>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={2} lg={1}>\r\n                  <Tooltip title=\"Rechazar solicitud\">\r\n                    <Icon type={\"close-circle\"} className={\"request-item-icon-reject\"} onClick={() => this.setState({reject_modal: true})}/> \r\n                  </Tooltip>\r\n                </Col> \r\n              </Row>\r\n            \r\n            {\r\n              this.state.visible && \r\n              <div>\r\n                <Row>\r\n                  <Divider/>\r\n                  <Col xs={24} sm={12} md={8} lg={6} >\r\n                    <b>Flujo de aprobación</b>\r\n                  </Col>  \r\n                </Row>\r\n                <br/><br/>\r\n                <Row>\r\n                  <Steps current={item.idRequestState-1} size=\"small\" className={\"request-state-steps\"}>\r\n                    <Step title=\"Solicitada\"/>\r\n                    <Step title=\"Evaluada\"/>\r\n                    <Step title=\"Aprobar RR.H H.\"/>\r\n                    <Step title=\"Aprobar Admon.\"/>                 \r\n                    <Step title=\"Desembolsada\"/>                    \r\n                  </Steps>\r\n                </Row>\r\n                <br/><br/>\r\n                <Row>\r\n                  <Col xs={24} sm={12} md={8} lg={6} >\r\n                    <b>Información adicional</b>\r\n                  </Col>  \r\n                </Row>\r\n                <br/><br/>\r\n                <Row>\r\n                  <Col xs={12} sm={12} md={8} lg={4} >\r\n                    <b>Nombres</b><br/><br/>\r\n                    {item.lastName} \r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={8} lg={4} >\r\n                    <b>Apellidos</b><br/><br/>\r\n                    {item.lastName}\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={7} lg={4}>\r\n                      <b>Empresa</b><br/><br/>\r\n                      {\"Emtelco\"}\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={7} lg={6}>\r\n                      <b>Cargo</b><br/><br/>\r\n                      {item.profession}\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={7} lg={6}>\r\n                      <b>Dirección</b><br/><br/>\r\n                      {\"Calle 54 No. 18 - 12\"}\r\n                  </Col>\r\n                </Row>\r\n                <br/>\r\n                <br/>\r\n                <Row>\r\n                  <Col xs={12} sm={12} md={8} lg={4} >\r\n                    <b>Monto</b><br/><br/>\r\n                    {item.quantity} \r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={8} lg={4} >\r\n                      <b>Cuotas</b><br/><br/>\r\n                      {item.split}\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={7} lg={4}>\r\n                      <b>Cuenta</b><br/><br/>\r\n                      {item.account}\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={7} lg={6}>\r\n                      <b>Tipo de Cuenta</b><br/><br/>\r\n                      {item.accountType}\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={7} lg={6}>\r\n                      <b>Número de cuenta</b><br/><br/>\r\n                      {item.accountNumber}\r\n                  </Col>\r\n                </Row>\r\n                <br/><br/>\r\n                <Row gutter={4}>\r\n                  <Col xs={24} sm={12} md={18} lg={14} className={\"document-col\"}>\r\n                    <Button className={\"request-document-button\"} icon=\"file\" >\r\n                          Ver documento\r\n                    </Button> \r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={6} lg={5}>\r\n                    <Button className={\"request-reject-button\"} icon=\"close-circle\" \r\n                            onClick={() => this.setState({reject_modal: true})}>\r\n                          Rechazar crédito\r\n                    </Button> \r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={6} lg={5}>\r\n                    <Button className={\"request-confirm-button\"} icon=\"check-circle\" \r\n                            onClick={() => this.setState({approve_modal: true})}>\r\n                          Desembolsar crédito\r\n                    </Button> \r\n                  </Col>\r\n                  \r\n                </Row>\r\n              </div>\r\n            }\r\n\r\n            <Modal \r\n              title=\"Aprobar crédito\"\r\n              visible={this.state.approve_modal}\r\n              okText={\"Aprobar\"}\r\n              cancelText={\"Cancelar\"}\r\n              width={450}\r\n              okButtonProps={{disabled: transactionCode === null || transactionCode === \"\" ? true : false}}\r\n              onOk={() => this.onConfirmRequest(item.idRequest)}\r\n              onCancel={() => this.setState({approve_modal: false})}>\r\n                <div>\r\n                  ¿Está seguro de realizar el desembolso del crédito? Esta acción será irreversible. Si la respuesta es correcta, ingrese el código de la transacción, sino de clic en el botón \"Cancelar\".                 \r\n                  <br/>\r\n                  <br/>\r\n                  <FieldTitle title={\"Código de la transacción bancaria\"}/>\r\n                  <Row>\r\n                    <Col lg={16} md={12} sm={12} xs={12}>\r\n                      <Input placeholder={\"Ejemplo: 0005873288712761\"} onChange={(e) => this.onChangeTransactionCode(e)} value={transactionCode}/>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n            </Modal>\r\n            <Modal \r\n              title=\"Rechazar crédito\"\r\n              visible={this.state.reject_modal}\r\n              okText={\"Rechazar\"}\r\n              cancelText={\"Atrás\"}\r\n              width={450}\r\n              onOk={() => this.onRejectRequest(item.idRequest)}\r\n              onCancel={() => this.setState({reject_modal: false})}>\r\n                <div>\r\n                  ¿Está seguro de realizar el rechazo del crédito? Esta acción será irreversible.                  \r\n                </div>\r\n            </Modal>\r\n        </div>\r\n      </Badge>\r\n    );\r\n  };\r\n}\r\n\r\nRequestOutLayState.propTypes = {\r\n  customerList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customerList: state.admin.customerList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //getAllRequestToApprove: () => dispatch(getAllRequestToApprove( )),\r\n    approveorRejectRequest: (data, userId) => dispatch(approveorRejectRequest(data, userId)),    \r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestOutLayState);\r\n\r\n","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Row, List, Spin} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport RequestModal from \"./RequestStateModal\";\r\n\r\n//Actions\r\nimport {getAllRequestToOutLay} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\nimport { SUCCESS_MODAL } from '../../../subcomponents/modalMessages';\r\n\r\nclass MakeOutlayProcess extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      visible: null,\r\n    };\r\n\r\n    this.props.getAllRequestToOutLay(localStorage.user_id);\r\n\r\n  };\r\n\r\n  onChangeMoyen = (e) => {\r\n    this.setState({\r\n      moyen: true\r\n    }); \r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El préstamo ha sido solicitado correctamente.\");\r\n    this.setState({\r\n      loan: true\r\n    });\r\n  };\r\n\r\n  render(){\r\n\r\n    let tableData = this.props.requestOutLayResponse;\r\n\r\n    if(tableData === null){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                Cargando ...\r\n                <br/>\r\n                <br/>\r\n                <Spin size=\"large\" />\r\n              </div>);\r\n    }else{\r\n      return (\r\n        <div className={\"approve-request-state-div\"}>\r\n          <Row>\r\n            <List\r\n                dataSource={tableData}\r\n                renderItem={(item, k) => (\r\n                  <List.Item className={\"request-state-list-item\"}>\r\n                      <RequestModal item={item} key={k}/>\r\n                  </List.Item>\r\n                )}\r\n                locale={{emptyText: \"No hay solicitudes para desembolsar\"}}\r\n              />\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n}\r\n\r\nMakeOutlayProcess.propTypes = {\r\n  requestOutLayResponse: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    requestOutLayResponse: state.admin.requestOutLayResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllRequestToOutLay: (user_id) => dispatch(getAllRequestToOutLay(user_id)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MakeOutlayProcess);\r\n\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Tooltip, Icon, Divider, Badge, Button} from 'antd';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\nimport { allowEmergingWindows, WARNING_MODAL} from '../../../subcomponents/modalMessages';\r\n\r\n//Subcomponents\r\nimport BaseURL from '../../../../../services/BaseURL';\r\n\r\n//Actions\r\nimport {approveorRejectRequest} from \"../../../../../store/redux/actions/general/generalActions\";\r\n\r\n//Constants\r\n//const Step = Steps.Step;\r\n//const TextArea = Input.TextArea;\r\n\r\nclass RequestStateModal extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: null,\r\n      approve_modal: null,\r\n      card_style_requested: \"requested\",\r\n      card_style_analysis: \"analysis\",\r\n      card_style_approved: \"approved\",\r\n      card_style_rejected: \"rejected\",\r\n      reject_modal: null,\r\n      text: \"\",\r\n    };\r\n    \r\n  };\r\n\r\n  defineBadgeName = (id) => {\r\n    if(id === 1){\r\n      return \"Solicitada\";\r\n    }else if(id === 2){\r\n      return \"Evaluada\";\r\n    }else if(id === 3){\r\n      return \"Aprobada RR.HH.\";\r\n    }else if(id === 4){\r\n      return \"Aprobada Admon.\";\r\n    }else if(id === 5){\r\n      return \"Desembolsada\";\r\n    }else if(id=== 6){\r\n      return \"Rechazada\"\r\n    }\r\n  };\r\n\r\n  defineButtonClass = (id) => {\r\n    if(id === 1){\r\n      return \"#c1c1c1\";\r\n    }else if(id === 2){\r\n      return \"yellow\";\r\n    }else if(id === 3){\r\n      return \"#ffa962\";\r\n    }else if(id === 4){\r\n      return \"#62ffb5\";\r\n    }else if(id === 5){\r\n      return \"#6cff55 \";\r\n    }else if(id === 6){\r\n      return \"#ff4747\";\r\n    }else{\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  seeDocument = (filePath) => {\r\n\r\n    let url = filePath;\r\n\r\n    if (url !== null) {\r\n      let newWindow = window.open(BaseURL +\"/\"+ filePath, \"blank\");\r\n      if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined') {\r\n        allowEmergingWindows();\r\n      }\r\n    } else {\r\n      WARNING_MODAL('Advertencia', 'El reporte no está disponible');\r\n    }\r\n\r\n  };\r\n\r\n  onConfirmRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: true,\r\n    };\r\n    this.props.approveorRejectRequest(data, localStorage.user_id);\r\n    this.setState({approve_modal: false});\r\n  };\r\n\r\n  onRejectRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: false,\r\n      text: this.state.text\r\n    };\r\n    //console.log(\"D\", data);\r\n    this.props.approveorRejectRequest(data, localStorage.user_id);\r\n    this.setState({reject_modal: false});\r\n  };\r\n\r\n  inputChange = (e) => {\r\n\r\n    let value = e;\r\n    this.setState({\r\n      text: value,\r\n    });\r\n};\r\n\r\n  render(){\r\n\r\n    let item = this.props.item;\r\n    \r\n    //let {text} = this.state;\r\n    \r\n    return (\r\n        <Badge count={this.defineBadgeName(item.requestStateId)} style={{backgroundColor: this.defineButtonClass(item.idRequestState), color: \"black\"} }>\r\n          <div key={item.key} className={\"request-state-item-requested\"}>\r\n            <Row>\r\n              <Col xs={24} sm={12} md={2} lg={2}>\r\n                  <Tooltip title=\"Detallar solicitud\">\r\n                    <Icon type={\"plus-circle\"} className={\"request-item-icon\"} onClick={() => this.setState({visible: !this.state.visible})}/> \r\n                  </Tooltip>\r\n                </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\">\r\n                <b>Número de Solicitud</b> <br/><br/>\r\n                {\"Solicitud No. \" + item.idRequest} \r\n              </Col>\r\n              <Col xs={12} sm={12} md={8} lg={6} className=\"request-item-initial-col\" >\r\n                  <b>Estado</b> <br/><br/>  {this.defineBadgeName(item.idRequestState)}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                  <b>Fecha de Solicitud</b> <br/><br/> {(item.createdDate).split(\"T\")[0]}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={6}  className=\"request-item-initial-col\">\r\n                  <b>Monto</b> <br/><br/>\r\n                  <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                      value={item.quantity} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/>\r\n              </Col>\r\n            </Row>\r\n          \r\n          {\r\n            this.state.visible && \r\n            <div>\r\n\r\n              <Row>\r\n                <Divider/>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Información adicional</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={8} lg={6} >\r\n                  <b>Nombres</b><br/><br/>\r\n                  {item.name + \" \" + item.lastName} \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Cédula</b><br/><br/>\r\n                  {item.identificationId}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                  <b>Empresa</b><br/><br/>\r\n                  {item.socialReason}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                  <b>Saldo Usuario</b><br/><br/>\r\n                    <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                    value={item.accumulatedQuantity} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/> \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Valor total</b><br/><br/>\r\n                  <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                      value={item.quantity} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/> \r\n                </Col>\r\n                \r\n              </Row>\r\n              <br/>\r\n              <br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={7} lg={5}>\r\n                    <b>Teléfono</b><br/><br/>\r\n                    {item.phoneNumber}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={3} >\r\n                    <b>Cuotas</b><br/><br/>\r\n                    {item.split}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={5}>\r\n                    <b>Cuenta</b><br/><br/>\r\n                    {item.account}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                    <b>Tipo de Cuenta</b><br/><br/>\r\n                    {item.accountType === \"null\" ? \"-\" : item.accountType}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                    <b>Número de cuenta</b><br/><br/>\r\n                    {item.accountNumber}\r\n                </Col>\r\n              </Row>\r\n              <br/><br/>\r\n              <Row gutter={4}>\r\n                <Col xs={24} sm={12} md={18} lg={8}>\r\n                  <Button style={{marginLeft: \"20px\"}} icon=\"file\" onClick={() => this.seeDocument(item.filePath)} >\r\n                        Ver documento\r\n                  </Button> \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={14} style={{marginTop: \"10px\"}}>\r\n                  <b>Observación </b> {item.observation}\r\n                </Col>               \r\n              </Row>\r\n            </div>\r\n          }\r\n        </div>\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n}\r\n\r\nRequestStateModal.propTypes = {\r\n  customerList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customerList: state.admin.customerList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //getAllRequestToApprove: () => dispatch(getAllRequestToApprove( )),\r\n    approveorRejectRequest: (data, userId) => dispatch(approveorRejectRequest(data, userId)),    \r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestStateModal);","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Row, List, Spin, Col, Input} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport RequestModal from \"./RequestDetailModal\";\r\n\r\n//Actions\r\nimport {getAllRejectedRequest} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\nimport { SUCCESS_MODAL } from '../../../subcomponents/modalMessages';\r\n\r\nclass ApproveRequest extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      visible: null,\r\n      idRequest: null,\r\n      idRequestState: null,\r\n      createdDate: null,\r\n      quantity: null,\r\n      identificationId: null,\r\n      requestStateName: null\r\n    };\r\n\r\n    this.props.getAllRejectedRequest();\r\n    this.setData = this.setData.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n\r\n  };\r\n\r\n  onChangeMoyen = (e) => {\r\n    this.setState({\r\n      moyen: true\r\n    }); \r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El préstamo ha sido solicitado correctamente.\");\r\n    this.setState({\r\n      loan: true\r\n    });\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          idRequest: item.idRequest,\r\n          idRequestState: item.idRequestState,\r\n          createdDate: item.createdDate,\r\n          quantity: item.quantity,\r\n          accumulatedQuantity: item.accumulatedQuantity, \r\n          interestValue: item.interestValue,\r\n          administrationValue: item.administrationValue,\r\n          totalRemainder: item.totalRemainder,\r\n          identificationId: item.identificationId,\r\n          requestStateName: item.requestStateName,\r\n          lastName: item.lastName,\r\n          name: item.name,\r\n          Company_idCompany: item.Company_idCompany,\r\n          socialReason: item.socialReason,\r\n          profession: item.profession,\r\n          split: item.split,\r\n          account: item.account,\r\n          accountType: item.accountType,\r\n          accountNumber: item.accountNumber,\r\n          phoneNumber: item.phoneNumber,\r\n          filePath: item.filePath,\r\n          observation: item.observation\r\n        };\r\n\r\n        if(this.filterData(row)) {\r\n          rows.push(row);\r\n        };\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  filterData(toCompare){\r\n    let {idRequest, identificationId, requestStateName, quantity, createdDate} = this.state;\r\n\r\n    if(idRequest === null && identificationId === null && quantity === null && requestStateName === null && createdDate === null){\r\n      return true;\r\n    }\r\n\r\n    if(idRequest !== null && !toCompare.idRequest.toString().toUpperCase().includes(idRequest.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(identificationId !== null && !toCompare.identificationId.toString().toUpperCase().includes(identificationId.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(requestStateName !== null && !toCompare.requestStateName.toString().toUpperCase().includes(requestStateName.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(quantity !== null && !toCompare.quantity.toString().toUpperCase().includes(quantity.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(createdDate !== null && !toCompare.createdDate.toString().toUpperCase().includes(createdDate.toUpperCase())) {\r\n      return false;\r\n    }   \r\n\r\n    return true;\r\n  };\r\n\r\n  render(){\r\n\r\n    let {idRequest, identificationId, requestStateName, quantity, createdDate} = this.state;\r\n    let tableData = this.setData(this.props.rejectedRequest);\r\n    //console.log(\"JSON\", this.props.rejectedRequest);\r\n    \r\n    if(this.props.rejectedRequest === null){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                Cargando ...\r\n                <br/>\r\n                <br/>\r\n                <Spin size=\"large\" />\r\n              </div>);\r\n    }else{\r\n      return (\r\n        <div className={\"approve-request-state-div\"}>\r\n          \r\n          <Row gutter={8} className={\"approve-request-filter\"}>\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n                  <p className=\"field-title-visible\">Número solicitud </p>\r\n                  <Input placeholder={\"Número solicitud\"} value={idRequest} onChange={(e) => this.setState({idRequest: e.target.value})}/>\r\n                </Col>\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                  <p className=\"field-title-visible\">No. Cédula</p>\r\n                  <Input placeholder={\"No. de cédula\"} value={identificationId} onChange={(e) => this.setState({identificationId: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                  <p className=\"field-title-visible\">Estado</p>\r\n                  <Input placeholder={\"Estado\"} value={requestStateName} onChange={(e) => this.setState({requestStateName: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n                  <p className=\"field-title-visible\">Cantidad</p>\r\n                  <Input placeholder={\"Cantidad\"} value={quantity} onChange={(e) => this.setState({quantity: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                  <p className=\"field-title-visible\">Fecha Solicitud</p>\r\n                  <Input placeholder={\"Fecha Solicitud\"} value={createdDate} onChange={(e) => this.setState({createdDate: e.target.value})}/>\r\n                </Col>\r\n              </Row>\r\n                <br/>\r\n            <Row>\r\n            <List dataSource={tableData}\r\n                  renderItem={(item, k) => (\r\n                    <List.Item className={\"request-state-list-item\"}>\r\n                        <RequestModal item={item} key={k}/>\r\n                    </List.Item>\r\n                  )}\r\n                  locale={{emptyText: \"No hay solicitudes rechazadas\"}}/>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  }; \r\n}\r\n\r\nApproveRequest.propTypes = {\r\n  rejectedRequest: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    rejectedRequest: state.admin.rejectedRequest,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllRejectedRequest: () => dispatch(getAllRejectedRequest()),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ApproveRequest);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Tooltip, Icon, Divider, Steps, Badge, Button} from 'antd';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\nimport { allowEmergingWindows, WARNING_MODAL} from '../../../subcomponents/modalMessages';\r\n\r\n//Subcomponents\r\nimport BaseURL from '../../../../../services/BaseURL';\r\n\r\n//Actions\r\nimport {approveorRejectRequest} from \"../../../../../store/redux/actions/general/generalActions\";\r\n\r\n//Constants\r\nconst Step = Steps.Step;\r\n//const TextArea = Input.TextArea;\r\n\r\nclass RequestStateModal extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: null,\r\n      approve_modal: null,\r\n      card_style_requested: \"requested\",\r\n      card_style_analysis: \"analysis\",\r\n      card_style_approved: \"approved\",\r\n      card_style_rejected: \"rejected\",\r\n      reject_modal: null,\r\n      text: \"\",\r\n    };\r\n    \r\n  };\r\n\r\n  defineBadgeName = (id) => {\r\n    if(id === 1){\r\n      return \"Solicitada\";\r\n    }else if(id === 2){\r\n      return \"Evaluada\";\r\n    }else if(id === 3){\r\n      return \"Aprobada RR.HH.\";\r\n    }else if(id === 4){\r\n      return \"Aprobada Admon.\";\r\n    }else if(id === 5){\r\n      return \"Desembolsada\";\r\n    }else if(id=== 6){\r\n      return \"Rechazada\"\r\n    }\r\n  };\r\n\r\n  defineButtonClass = (id) => {\r\n    if(id === 1){\r\n      return \"#c1c1c1\";\r\n    }else if(id === 2){\r\n      return \"yellow\";\r\n    }else if(id === 3){\r\n      return \"#ffa962\";\r\n    }else if(id === 4){\r\n      return \"#62ffb5\";\r\n    }else if(id === 5){\r\n      return \"#6cff55 \";\r\n    }else if(id === 6){\r\n      return \"#ff4747\";\r\n    }else{\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  seeDocument = (filePath) => {\r\n\r\n    let url = filePath;\r\n\r\n    if (url !== null) {\r\n      let newWindow = window.open(BaseURL +\"/\"+ filePath, \"blank\");\r\n      if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined') {\r\n        allowEmergingWindows();\r\n      }\r\n    } else {\r\n      WARNING_MODAL('Advertencia', 'El reporte no está disponible');\r\n    }\r\n\r\n  };\r\n\r\n  onConfirmRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: true,\r\n    };\r\n    this.props.approveorRejectRequest(data, localStorage.user_id);\r\n    this.setState({approve_modal: false});\r\n  };\r\n\r\n  onRejectRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: false,\r\n      text: this.state.text\r\n    };\r\n    //console.log(\"D\", data);\r\n    this.props.approveorRejectRequest(data, localStorage.user_id);\r\n    this.setState({reject_modal: false});\r\n  };\r\n\r\n  inputChange = (e) => {\r\n\r\n    let value = e;\r\n    this.setState({\r\n      text: value,\r\n    });\r\n};\r\n\r\n  render(){\r\n\r\n    let item = this.props.item;\r\n    \r\n    //let {text} = this.state;\r\n    \r\n    return (\r\n        <Badge count={this.defineBadgeName(item.requestStateId)} style={{backgroundColor: this.defineButtonClass(item.idRequestState), color: \"black\"} }>\r\n          <div key={item.key} className={\"request-state-item-requested\"}>\r\n            <Row>\r\n              <Col xs={24} sm={12} md={2} lg={2}>\r\n                  <Tooltip title=\"Detallar solicitud\">\r\n                    <Icon type={\"plus-circle\"} className={\"request-item-icon\"} onClick={() => this.setState({visible: !this.state.visible})}/> \r\n                  </Tooltip>\r\n                </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\">\r\n                <b>Número de Solicitud</b> <br/><br/>\r\n                {\"Solicitud No. \" + item.idRequest} \r\n              </Col>\r\n              <Col xs={12} sm={12} md={8} lg={6} className=\"request-item-initial-col\" >\r\n                  <b>Estado</b> <br/><br/>  {this.defineBadgeName(item.idRequestState)}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                  <b>Fecha de Solicitud</b> <br/><br/> {(item.createdDate).split(\"T\")[0]}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={6}  className=\"request-item-initial-col\">\r\n                  <b>Monto</b> <br/><br/>\r\n                  <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                      value={item.quantity} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/>\r\n              </Col>\r\n            </Row>\r\n          \r\n          {\r\n            this.state.visible && \r\n            <div>\r\n              <Row>\r\n                <Divider/>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Flujo de aprobación</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Steps current={item.idRequestState-1} size=\"small\" className={\"request-state-steps\"}>\r\n                  <Step title=\"Solicitada\"/>\r\n                  <Step title=\"Evaluada\"/>\r\n                  <Step title=\"Aprobar RR.H H.\"/>\r\n                  <Step title=\"Aprobar Admon.\"/>                 \r\n                  <Step title=\"Desembolsada\"/>\r\n                  \r\n                </Steps>\r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Información adicional</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={8} lg={6} >\r\n                  <b>Nombres</b><br/><br/>\r\n                  {item.name + \" \" + item.lastName} \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Cédula</b><br/><br/>\r\n                  {item.identificationId}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                  <b>Empresa</b><br/><br/>\r\n                  {item.socialReason}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                  <b>Saldo Usuario</b><br/><br/>\r\n                    <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                    value={item.accumulatedQuantity} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/> \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Valor total</b><br/><br/>\r\n                  <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                      value={item.quantity} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/> \r\n                </Col>\r\n                \r\n              </Row>\r\n              <br/>\r\n              <br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={7} lg={5}>\r\n                    <b>Teléfono</b><br/><br/>\r\n                    {item.phoneNumber}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={3} >\r\n                    <b>Cuotas</b><br/><br/>\r\n                    {item.split}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={5}>\r\n                    <b>Cuenta</b><br/><br/>\r\n                    {item.account}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                    <b>Tipo de Cuenta</b><br/><br/>\r\n                    {item.accountType === \"null\" ? \"-\" : item.accountType}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                    <b>Número de cuenta</b><br/><br/>\r\n                    {item.accountNumber}\r\n                </Col>\r\n              </Row>\r\n              <br/><br/>\r\n              <Row gutter={4}>\r\n                <Col xs={24} sm={12} md={18} lg={14} className={\"document-col\"}>\r\n                  <Button className={\"request-document-button\"} icon=\"file\" onClick={() => this.seeDocument(item.filePath)} >\r\n                        Ver documento\r\n                  </Button> \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={5}>\r\n                  \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={5}>\r\n             \r\n                </Col>\r\n                \r\n              </Row>\r\n            </div>\r\n          }\r\n        </div>\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n}\r\n\r\nRequestStateModal.propTypes = {\r\n  customerList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customerList: state.admin.customerList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //getAllRequestToApprove: () => dispatch(getAllRequestToApprove( )),\r\n    approveorRejectRequest: (data, userId) => dispatch(approveorRejectRequest(data, userId)),    \r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestStateModal);","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Row, List, Spin, Col, Input} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport RequestModal from \"./RequestDetailModal\";\r\n\r\n//Actions\r\nimport {getAllPendingRHRequest} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\nimport { SUCCESS_MODAL } from '../../../subcomponents/modalMessages';\r\n\r\nclass ApproveRequest extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      visible: null,\r\n      idRequest: null,\r\n      idRequestState: null,\r\n      createdDate: null,\r\n      quantity: null,\r\n      identificationId: null,\r\n      requestStateName: null\r\n    };\r\n\r\n    this.props.getAllPendingRHRequest();\r\n    this.setData = this.setData.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n\r\n  };\r\n\r\n  onChangeMoyen = (e) => {\r\n    this.setState({\r\n      moyen: true\r\n    }); \r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El préstamo ha sido solicitado correctamente.\");\r\n    this.setState({\r\n      loan: true\r\n    });\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          idRequest: item.idRequest,\r\n          idRequestState: item.idRequestState,\r\n          createdDate: item.createdDate,\r\n          quantity: item.quantity,\r\n          accumulatedQuantity: item.accumulatedQuantity, \r\n          interestValue: item.interestValue,\r\n          administrationValue: item.administrationValue,\r\n          totalRemainder: item.totalRemainder,\r\n          identificationId: item.identificationId,\r\n          requestStateName: item.requestStateName,\r\n          lastName: item.lastName,\r\n          name: item.name,\r\n          Company_idCompany: item.Company_idCompany,\r\n          socialReason: item.socialReason,\r\n          profession: item.profession,\r\n          split: item.split,\r\n          account: item.account,\r\n          accountType: item.accountType,\r\n          accountNumber: item.accountNumber,\r\n          phoneNumber: item.phoneNumber,\r\n          filePath: item.filePath,\r\n        };\r\n\r\n        if(this.filterData(row)) {\r\n          rows.push(row);\r\n        };\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  filterData(toCompare){\r\n    let {idRequest, identificationId, requestStateName, quantity, createdDate} = this.state;\r\n\r\n    if(idRequest === null && identificationId === null && quantity === null && requestStateName === null && createdDate === null){\r\n      return true;\r\n    }\r\n\r\n    if(idRequest !== null && !toCompare.idRequest.toString().toUpperCase().includes(idRequest.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(identificationId !== null && !toCompare.identificationId.toString().toUpperCase().includes(identificationId.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(requestStateName !== null && !toCompare.requestStateName.toString().toUpperCase().includes(requestStateName.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(quantity !== null && !toCompare.quantity.toString().toUpperCase().includes(quantity.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(createdDate !== null && !toCompare.createdDate.toString().toUpperCase().includes(createdDate.toUpperCase())) {\r\n      return false;\r\n    }   \r\n\r\n    return true;\r\n  };\r\n\r\n  render(){\r\n\r\n    let {idRequest, identificationId, requestStateName, quantity, createdDate} = this.state;\r\n    let tableData = this.setData(this.props.pendingRHRequest);\r\n    //console.log(\"JSON\", tableData, JSON.stringify(tableData));\r\n    \r\n    if(this.props.pendingRHRequest === null || tableData === undefined){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                Cargando ...\r\n                <br/>\r\n                <br/>\r\n                <Spin size=\"large\" />\r\n              </div>);\r\n    }else{\r\n      return (\r\n        <div className={\"approve-request-state-div\"}>\r\n          \r\n          <Row gutter={8} className={\"approve-request-filter\"}>\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n                  <p className=\"field-title-visible\">Número solicitud </p>\r\n                  <Input placeholder={\"Número solicitud\"} value={idRequest} onChange={(e) => this.setState({idRequest: e.target.value})}/>\r\n                </Col>\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                  <p className=\"field-title-visible\">No. Cédula</p>\r\n                  <Input placeholder={\"No. de cédula\"} value={identificationId} onChange={(e) => this.setState({identificationId: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                  <p className=\"field-title-visible\">Estado</p>\r\n                  <Input placeholder={\"Estado\"} value={requestStateName} onChange={(e) => this.setState({requestStateName: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n                  <p className=\"field-title-visible\">Cantidad</p>\r\n                  <Input placeholder={\"Cantidad\"} value={quantity} onChange={(e) => this.setState({quantity: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                  <p className=\"field-title-visible\">Fecha Solicitud</p>\r\n                  <Input placeholder={\"Fecha Solicitud\"} value={createdDate} onChange={(e) => this.setState({createdDate: e.target.value})}/>\r\n                </Col>\r\n              </Row>\r\n                <br/>\r\n            <Row>\r\n            <List dataSource={tableData}\r\n                  renderItem={(item, k) => (\r\n                    <List.Item className={\"request-state-list-item\"}>\r\n                        <RequestModal item={item} key={k}/>\r\n                    </List.Item>\r\n                  )}\r\n                  locale={{emptyText: \"No hay solicitudes para aprobar por el área de recursos humanos\"}}/>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  }; \r\n}\r\n\r\nApproveRequest.propTypes = {\r\n  pendingRHRequest: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    pendingRHRequest: state.admin.pendingRHRequest,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllPendingRHRequest: () => dispatch(getAllPendingRHRequest()),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ApproveRequest);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Tabs, Icon} from 'antd';\r\n\r\n//Components\r\nimport ApproveRequest from './approve_requests/ApproveRequest';\r\nimport MakeOutlay from './make_outlay/MakeOutlay';\r\nimport RejectedRequest from './rejected_requests/RejectedRequest';\r\nimport PendingRequest from './pending_rrhh/PendingRequest';\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\n\r\n//Assets\r\n\r\n//Constants\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass Customer_Management extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n    \r\n    this.next = this.next.bind(this);\r\n    this.previous = this.previous.bind(this);\r\n    this.carousel = React.createRef();\r\n\r\n  };\r\n\r\n  next() {\r\n    this.carousel.next();\r\n  };\r\n\r\n  previous() {\r\n    this.carousel.prev();\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"admin-div\"}>\r\n        <Row>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <h2 className={'header-terms-title'}>Gestionar solicitudes</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{width: \"80% !important\", margin: \"auto\"}}>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n          <Tabs defaultActiveKey={parseInt(localStorage.role_id, 10) === 2 ? \"1\" : \"2\"}>\r\n            {\r\n              parseInt(localStorage.role_id, 10) === 2 &&\r\n              <TabPane tab={<span> <Icon type=\"check-circle\" />Aprobar solicitudes </span>} key=\"1\">\r\n                <ApproveRequest/>\r\n              </TabPane>\r\n            }\r\n            {\r\n              parseInt(localStorage.role_id, 10) === 1 &&\r\n              <TabPane tab={<span> <Icon type=\"dollar\" />Desembolsar solicitudes </span>} key=\"2\">\r\n                <MakeOutlay/>\r\n              </TabPane>\r\n            }\r\n            <TabPane tab={<span> <Icon type=\"close-circle\" />Solicitudes rechazadas </span>} key=\"3\">\r\n              <RejectedRequest/>\r\n            </TabPane>\r\n            <TabPane tab={<span> <Icon type=\"team\" />Pendientes RR.HH.</span>} key=\"4\">\r\n              <PendingRequest/>\r\n            </TabPane>\r\n          </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Customer_Management;","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Button, Divider, Table, Modal, Select} from 'antd';\r\n\r\n//Components\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\nimport { SUCCESS_MODAL } from '../../subcomponents/modalMessages';\r\n\r\n//Assets\r\n\r\n//Functions\r\nfunction itemRender(current, type, originalElement) {\r\n  if (type === 'prev' || type === 'Previous Page') {\r\n    return <span title={'Anterior'} className={\"item-renderer\"}>{\"<\"}</span>;\r\n  } if (type === 'next') {\r\n    return <span title={'Siguiente'} className={\"item-renderer\"}>{\">\"}</span>;\r\n  }\r\n  return originalElement;\r\n};\r\n\r\n//Constants\r\nconst table = [\r\n  {\r\n    title: <div>Empresa</div>,\r\n    dataIndex: 'company',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.company.localeCompare(b.company)},\r\n  },\r\n  {\r\n    title: <div>Cliente</div>,\r\n    dataIndex: 'customer',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.customer.localeCompare(b.customer)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad</div>,\r\n    dataIndex: 'quantity',\r\n    width: \"100px\",\r\n    align: \"right\",\r\n    render: text => <div className={\"table-p\"}>{\"$\"+text}</div>,\r\n    sorter: (a, b) =>{ return a.quantity.toString().localeCompare(b.quantity.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Transacción</div>,\r\n    dataIndex: 'date2',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.date.toString().localeCompare(b.date.toString())},\r\n  }\r\n];\r\n\r\nclass ReceiptManagement extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n    \r\n    this.state = {\r\n      approve_modal: null\r\n    };\r\n\r\n    this.setData = this.setData.bind(this);\r\n\r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El informe ha sido descargado correctamente.\");\r\n    this.setState({\r\n      approve_modal: false,\r\n    });\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          company: item.company,\r\n          customer: item.customer,\r\n          quantity: item.quantity,\r\n          date: item.date2,\r\n        };\r\n        rows.push(row);\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  render() {\r\n\r\n    let tableData = [\r\n      {\r\n        key: 1,\r\n        company: \"Emtelco\",\r\n        customer: \"Juan Rodríguez\",\r\n        quantity: 150000,\r\n        date2: \"21-06-19\"\r\n      },\r\n      {\r\n        key: 2,\r\n        company: \"Movistar\",\r\n        customer: \"David Estrada\",\r\n        quantity: 250000,\r\n        date2: \"22-06-19\"\r\n      },\r\n      {\r\n        key: 3,\r\n        company: \"Seguros L.\",\r\n        customer: \"Camilo Pinto\",\r\n        quantity: 8500,\r\n        date2: \"24-06-19\"\r\n      },\r\n      {\r\n        key: 4,\r\n        company: \"Emtelco\",\r\n        customer: \"Duvan Vergara\",\r\n        quantity: 120000,\r\n        date2: \"26-06-19\"\r\n      },\r\n      {\r\n        key: 5,\r\n        company: \"Claro\",\r\n        customer: \"Alvaro Martinez\",\r\n        quantity: 275000,\r\n        date2: \"27-06-19\"\r\n      },\r\n      {\r\n        key: 6,\r\n        company: \"Alianza Normativa\",\r\n        customer: \"Carlos Vargas\",\r\n        quantity: 4870,\r\n        date2: \"28-06-19\"\r\n      },\r\n      {\r\n        key: 7,\r\n        company: \"Claro\",\r\n        customer: \"Felipe Urrego\",\r\n        quantity: 125870,\r\n        date2: \"28-06-19\"\r\n      },\r\n      {\r\n        key: 8,\r\n        company: \"Seguros L.\",\r\n        customer: \"Julian Osorio\",\r\n        quantity: 92870,\r\n        date2: \"28-06-19\"\r\n      }    \r\n    ];\r\n    //let {approve_modal} = this.state;\r\n\r\n    return (\r\n      <div className={\"company-div\"}>\r\n        <Row gutter={30}>\r\n          <Col xs={24} sm={24} md={12} lg={16}/>\r\n          <Col xs={24} sm={24} md={12} lg={4}> \r\n            <Button icon=\"file\" style={{backgroundColor: \"#005fc5\", color: \"white\", marginLeft: \"20px !important\"}} \r\n                    onClick={() => this.setState({approve_modal: true})}>\r\n                  Informe individual\r\n            </Button> \r\n          </Col>\r\n          <Col xs={24} sm={24} md={12} lg={4}> \r\n            <Button icon=\"file\" style={{backgroundColor: \"#005fc5\", color: \"white\", marginLeft: \"20px !important\"}} \r\n                    onClick={() => this.onConfirmRequest()}>\r\n                  Informe masivo\r\n            </Button> \r\n          </Col>\r\n        </Row>\r\n        <Divider/>\r\n        <Row>\r\n          <Table className={\"new-table\"} dataSource={tableData} columns={table} rowKey={'key'}\r\n            pagination={{ itemRender: itemRender, showSizeChanger: true,\r\n            pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"] }} size={'small'} scroll={{x:'500px'|true}}/>\r\n        </Row>\r\n        <Modal \r\n          title=\"Generar informe\"\r\n          visible={this.state.approve_modal}\r\n          okText={\"Generar\"}\r\n          cancelText={\"Cancelar\"}\r\n          width={450}\r\n          onOk={() => this.onConfirmRequest()}\r\n          onCancel={() => this.setState({approve_modal: false})}>\r\n            <div>\r\n              Seleccionar el cliente para descargar el informe particular.   \r\n              <br/>\r\n              <br/>\r\n              <Select style={{width: \"70%\"}} placeholder={'Cliente'} onChange={this.inputAdviserName}>\r\n                {tableData.map((customer, i) =>(\r\n                  <Select.Option value={customer.key} key={i}>\r\n                    {customer.customer}\r\n                  </Select.Option>\r\n                ))\r\n                }\r\n              </Select>             \r\n            </div>\r\n\r\n        </Modal>\r\n        </div>\r\n      );\r\n  };\r\n}\r\n\r\n\r\nexport default ReceiptManagement;","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Tabs, Icon} from 'antd';\r\n\r\n//Components\r\nimport ReceiptManagement from \"./ReceiptManagement\";\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\n\r\n//Assets\r\n\r\n//Constants\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass GenerateReports extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"admin-div\"}>\r\n        <Row>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <h2 className={'header-terms-title'}>Informes</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className={\"admin-row-content\"}>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <Tabs defaultActiveKey=\"1\">\r\n              <TabPane tab={<span> <Icon type=\"dollar\" />Administrar cobros</span>} key=\"1\">\r\n                <ReceiptManagement/>\r\n              </TabPane>\r\n            </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerateReports;","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Tooltip, Icon, Divider, Steps, Badge, Button, Modal} from 'antd';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\nimport { SUCCESS_MODAL, allowEmergingWindows, WARNING_MODAL} from '../../../subcomponents/modalMessages';\r\n\r\n//Subcomponents\r\nimport BaseURL from '../../../../../services/BaseURL';\r\n\r\n//Actions\r\nimport {approveorRejectRequestByCompany} from \"../../../../../store/redux/actions/general/generalActions\";\r\n\r\n//Constants\r\nconst Step = Steps.Step;\r\n\r\nclass RequestStateModal extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: null,\r\n      approve_modal: null,\r\n      card_style_requested: \"requested\",\r\n      card_style_analysis: \"analysis\",\r\n      card_style_approved: \"approved\",\r\n      card_style_rejected: \"rejected\",\r\n      reject_modal: null,\r\n    };\r\n    \r\n  };\r\n\r\n  defineBadgeName = (id) => {\r\n    if(id === 1){\r\n      return \"Solicitada\";\r\n    }else if(id === 2){\r\n      return \"Evaluada\";\r\n    }else if(id === 3){\r\n      return \"Aprobada RR.HH.\";\r\n    }else if(id === 4){\r\n      return \"Aprobada Admon.\";\r\n    }else if(id === 5){\r\n      return \"Desembolsada\";\r\n    }else if(id=== 6){\r\n      return \"Rechazada\"\r\n    }else if(id=== 7){\r\n      return \"Finalizada\"\r\n    }else if(id=== 8){\r\n      return \"Devolución bancaria\"\r\n    }\r\n  };\r\n\r\n  defineButtonClass = (id) => {\r\n    if(id === 1){\r\n      return \"#c1c1c1\";\r\n    }else if(id === 2){\r\n      return \"yellow\";\r\n    }else if(id === 3){\r\n      return \"#ffa962\";\r\n    }else if(id === 4){\r\n      return \"#62ffb5\";\r\n    }else if(id === 5){\r\n      return \"#6cff55 \";\r\n    }else if(id === 6){\r\n      return \"#ff4747\";\r\n    }else{\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  seeDocument = (filePath) => {\r\n\r\n    let url = filePath;\r\n    //console.log(url);\r\n    let newUrl = url.split('.');\r\n    //console.log(\"URL\", newUrl, newUrl[1]);\r\n\r\n    if (url !== null) {\r\n      let newWindow = window.open( BaseURL +\"/\"+  newUrl[1], \"blank\");\r\n      if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined') {\r\n        allowEmergingWindows();\r\n      }\r\n    } else {\r\n      WARNING_MODAL('Advertencia', 'El reporte no está disponible');\r\n    }\r\n\r\n\r\n  };\r\n\r\n  onConfirmRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: true,\r\n    };\r\n    //console.log(\"D\", data);\r\n    this.props.approveorRejectRequestByCompany(data, localStorage.user_id);\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"La solicitud ha sido aprobada correctamente.\");\r\n    this.setState({approve_modal: false});\r\n  \r\n  };\r\n\r\n  onConfirmRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: true,\r\n    };\r\n    //console.log(\"D\", data);\r\n    this.props.approveorRejectRequestByCompany(data, localStorage.user_id);\r\n    this.setState({approve_modal: false});\r\n  };\r\n\r\n  onRejectRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: false,\r\n    };\r\n    //console.log(\"D\", data);\r\n    this.props.approveorRejectRequest(data, localStorage.user_id);\r\n    this.setState({approve_modal: false});\r\n  };\r\n\r\n  render(){\r\n\r\n    let item = this.props.item;\r\n\r\n    return (\r\n        <Badge count={this.defineBadgeName(item.requestStateId)} style={{backgroundColor: this.defineButtonClass(item.idRequestState), color: \"black\"} }>\r\n          <div key={item.key} className={\"request-state-item-requested\"}>\r\n            <Row>\r\n              <Col xs={24} sm={12} md={2} lg={2}>\r\n                  <Tooltip title=\"Detallar solicitud\">\r\n                    <Icon type={\"plus-circle\"} className={\"request-item-icon\"} onClick={() => this.setState({visible: !this.state.visible})}/> \r\n                  </Tooltip>\r\n                </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\">\r\n                <b>Número de Solicitud</b> <br/><br/>\r\n                {\"Solicitud No. \" + item.idRequest} \r\n              </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\" >\r\n                  <b>Estado</b> <br/><br/>  {this.defineBadgeName(item.idRequestState)}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                  <b>Fecha de Solicitud</b> <br/><br/> {(item.createdDate).split(\"T\")[0]}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                  <b>Valor Total</b> <br/><br/>\r\n                  <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                      value={item.quantity} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={2} lg={1}>\r\n                <Tooltip title=\"Aprobar solicitud\">\r\n                  <Icon type={\"check-circle\"} className={\"request-item-icon-approve\"} onClick={() => this.setState({approve_modal: true})}/> \r\n                </Tooltip>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={2} lg={1}>\r\n                <Tooltip title=\"Rechazar solicitud\">\r\n                  <Icon type={\"close-circle\"} className={\"request-item-icon-reject\"} onClick={() => this.setState({reject_modal: true})}/> \r\n                </Tooltip>\r\n              </Col> \r\n            </Row>\r\n          \r\n          {\r\n            this.state.visible && \r\n            <div>\r\n              <Row>\r\n                <Divider/>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Flujo de aprobación</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Steps current={item.idRequestState-1} size=\"small\" className={\"request-state-steps\"}>\r\n                  <Step title=\"Solicitada\"/>\r\n                  <Step title=\"Evaluada\"/>\r\n                  <Step title=\"Aprobar RR.H H.\"/>\r\n                  <Step title=\"Aprobar Admon.\"/>                 \r\n                  <Step title=\"Desembolsada\"/>\r\n                  <Step title=\"Finalizada\"/>\r\n                  \r\n                </Steps>\r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Información adicional</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={8} lg={6} >\r\n                  <b>Nombres</b><br/><br/>\r\n                  {item.name + \" \" + item.lastName} \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Cédula</b><br/><br/>\r\n                  {item.identificationId}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                    <b>Empresa</b><br/><br/>\r\n                    {item.Company_idCompany}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                    <b>Cargo</b><br/><br/>\r\n                    {item.profession}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                    <b>Teléfono</b><br/><br/>\r\n                    {item.phoneNumber}\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Monto</b><br/><br/>\r\n                  {item.quantity} \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                    <b>Cuotas</b><br/><br/>\r\n                    {item.split}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                    <b>Cuenta</b><br/><br/>\r\n                    {item.account}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                    <b>Tipo de Cuenta</b><br/><br/>\r\n                    {item.accountType}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                    <b>Número de cuenta</b><br/><br/>\r\n                    {item.accountNumber}\r\n                </Col>\r\n              </Row>\r\n              <br/><br/>\r\n              <Row gutter={4}>\r\n                <Col xs={24} sm={12} md={18} lg={14} className={\"document-col\"}>\r\n                  <Button className={\"request-document-button\"} icon=\"file\" onClick={() => this.seeDocument(item.filePath)} >\r\n                        Ver documento\r\n                  </Button> \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={5}>\r\n                  <Button className={\"request-reject-button\"} icon=\"close-circle\" \r\n                          onClick={() => this.setState({approve_modal: true})}>\r\n                        Rechazar crédito\r\n                  </Button> \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={5}>\r\n                  <Button className={\"request-confirm-button\"} icon=\"check-circle\" \r\n                          onClick={() => this.setState({approve_modal: true})}>\r\n                        Aprobar crédito\r\n                  </Button> \r\n                </Col>\r\n                \r\n              </Row>\r\n            </div>\r\n          }\r\n\r\n          <Modal \r\n            title=\"Aprobar crédito\"\r\n            visible={this.state.approve_modal}\r\n            okText={\"Aprobar\"}\r\n            cancelText={\"Cancelar\"}\r\n            width={450}\r\n            onOk={() => this.onConfirmRequest(item.idRequest)}\r\n            onCancel={() => this.setState({approve_modal: false})}>\r\n              <div>\r\n                ¿Está seguro de realizar la aprobación del crédito? Esta acción será irreversible.                  \r\n              </div>\r\n\r\n          </Modal>\r\n          \r\n          <Modal \r\n            title=\"Rechazar crédito\"\r\n            visible={this.state.reject_modal}\r\n            okText={\"Rechazar\"}\r\n            cancelText={\"Atrás\"}\r\n            width={450}\r\n            onOk={() => this.onRejectRequest(item.idRequest)}\r\n            onCancel={() => this.setState({reject_modal: false})}>\r\n              <div>\r\n                ¿Está seguro de realizar el rechazo del crédito? Esta acción será irreversible.                  \r\n              </div>\r\n\r\n          </Modal>\r\n        </div>\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n}\r\n\r\nRequestStateModal.propTypes = {\r\n  customerList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customerList: state.admin.customerList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //getAllRequestToApprove: () => dispatch(getAllRequestToApprove( )),\r\n    approveorRejectRequestByCompany: (data, userId) => dispatch(approveorRejectRequestByCompany(data, userId)),    \r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestStateModal);","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Row, List, Spin, Col, Input} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport RequestModal from \"./RequestStateModal\";\r\n\r\n//Actions\r\nimport {getAllRequestToApprove} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\nimport { SUCCESS_MODAL } from '../../../subcomponents/modalMessages';\r\n\r\nclass ApproveRequest extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      visible: null,\r\n      idRequest: null,\r\n      idRequestState: null,\r\n      createdDate: null,\r\n      quantity: null,\r\n      identificationId: null,\r\n      requestStateName: null\r\n    };\r\n\r\n    this.props.getAllRequestToApprove();\r\n    this.setData = this.setData.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n\r\n  };\r\n\r\n  onChangeMoyen = (e) => {\r\n    this.setState({\r\n      moyen: true\r\n    }); \r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El préstamo ha sido solicitado correctamente.\");\r\n    this.setState({\r\n      loan: true\r\n    });\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          idRequest: item.idRequest,\r\n          idRequestState: item.idRequestState,\r\n          createdDate: item.createdDate,\r\n          quantity: item.quantity,\r\n          identificationId: item.identificationId,\r\n          requestStateName: item.requestStateName,\r\n          lastName: item.lastName,\r\n          name: item.name,\r\n          Company_idCompany: item.Company_idCompany,\r\n          profession: item.profession,\r\n          split: item.split,\r\n          account: item.account,\r\n          accountType: item.accountType,\r\n          accountNumber: item.accountNumber,\r\n          phoneNumber: item.phoneNumber,\r\n          filePath: item.filePath,\r\n        };\r\n\r\n        if(this.filterData(row)) {\r\n          rows.push(row);\r\n        };\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  filterData(toCompare){\r\n    let {idRequest, identificationId, requestStateName, quantity, createdDate} = this.state;\r\n\r\n    if(idRequest === null && identificationId === null && quantity === null && requestStateName === null && createdDate === null){\r\n      return true;\r\n    }\r\n\r\n    if(idRequest !== null && !toCompare.idRequest.toString().toUpperCase().includes(idRequest.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(identificationId !== null && !toCompare.identificationId.toString().toUpperCase().includes(identificationId.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(requestStateName !== null && !toCompare.requestStateName.toString().toUpperCase().includes(requestStateName.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(quantity !== null && !toCompare.quantity.toString().toUpperCase().includes(quantity.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(createdDate !== null && !toCompare.createdDate.toString().toUpperCase().includes(createdDate.toUpperCase())) {\r\n      return false;\r\n    }   \r\n\r\n    return true;\r\n  };\r\n\r\n  render(){\r\n\r\n    let {idRequest, identificationId, requestStateName, quantity, createdDate} = this.state;\r\n    let tableData = this.setData(this.props.requestResponse);\r\n    \r\n    if(this.props.requestResponse === null){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                Cargando ...\r\n                <br/>\r\n                <br/>\r\n                <Spin size=\"large\" />\r\n              </div>);\r\n    }else{\r\n      return (\r\n        <div className={\"approve-request-state-div\"}>\r\n          \r\n          <Row gutter={8} className={\"approve-request-filter\"}>\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n                  <p className=\"field-title-visible\">Número solicitud </p>\r\n                  <Input placeholder={\"Número solicitud\"} value={idRequest} onChange={(e) => this.setState({idRequest: e.target.value})}/>\r\n                </Col>\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                  <p className=\"field-title-visible\">No. Cédula</p>\r\n                  <Input placeholder={\"No. de cédula\"} value={identificationId} onChange={(e) => this.setState({identificationId: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                  <p className=\"field-title-visible\">Estado</p>\r\n                  <Input placeholder={\"Estado\"} value={requestStateName} onChange={(e) => this.setState({requestStateName: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n                  <p className=\"field-title-visible\">Cantidad</p>\r\n                  <Input placeholder={\"Cantidad\"} value={quantity} onChange={(e) => this.setState({quantity: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                  <p className=\"field-title-visible\">Fecha Solicitud</p>\r\n                  <Input placeholder={\"Fecha Solicitud\"} value={createdDate} onChange={(e) => this.setState({createdDate: e.target.value})}/>\r\n                </Col>\r\n              </Row>\r\n                <br/>\r\n            <Row>\r\n            <List dataSource={tableData}\r\n                  renderItem={(item, k) => (\r\n                    <List.Item className={\"request-state-list-item\"}>\r\n                        <RequestModal item={item} key={k}/>\r\n                    </List.Item>\r\n                  )}\r\n                  locale={{emptyText: \"No hay solicitudes para aprobar\"}}/>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  }; \r\n}\r\n\r\nApproveRequest.propTypes = {\r\n  requestResponse: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    requestResponse: state.admin.requestResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllRequestToApprove: () => dispatch(getAllRequestToApprove()),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ApproveRequest);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Tabs, Icon} from 'antd';\r\n\r\n//Components\r\nimport ApproveRequest from './approve_requests/ApproveRequest';\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\n\r\n//Assets\r\n\r\n//Constants\r\nconst { TabPane } = Tabs;\r\n\r\nclass Company extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"admin-div\"}>\r\n        <Row>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <h2 className={'header-terms-title'}>Gestionar solicitudes</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className={\"admin-row-content\"}>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane tab={<span> <Icon type=\"plus-circle\" /> Aprobar solicitudes </span>} key=\"1\">\r\n              <ApproveRequest/>\r\n            </TabPane>\r\n          </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Company;","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Button, Divider, Table, Modal, Select} from 'antd';\r\n\r\n//Components\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\nimport { SUCCESS_MODAL } from '../../subcomponents/modalMessages';\r\n\r\n//Assets\r\n\r\n//Functions\r\nfunction itemRender(current, type, originalElement) {\r\n  if (type === 'prev' || type === 'Previous Page') {\r\n    return <span title={'Anterior'} className={\"item-renderer\"}>{\"<\"}</span>;\r\n  } if (type === 'next') {\r\n    return <span title={'Siguiente'} className={\"item-renderer\"}>{\">\"}</span>;\r\n  }\r\n  return originalElement;\r\n};\r\n\r\n//Constants\r\nconst table = [\r\n  {\r\n    title: <div>Cliente</div>,\r\n    dataIndex: 'customer',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.customer.localeCompare(b.customer)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad total</div>,\r\n    dataIndex: 'quantity',\r\n    width: \"100px\",\r\n    align: \"right\",\r\n    render: text => <div className={\"table-p\"}>{\"$\"+text}</div>,\r\n    sorter: (a, b) =>{ return a.quantity.toString().localeCompare(b.quantity.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Transacción</div>,\r\n    dataIndex: 'date2',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.date.toString().localeCompare(b.date.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Estado</div>,\r\n    dataIndex: 'state',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.state.localeCompare(b.state)},\r\n  }\r\n];\r\n\r\nclass ReceiptManagement extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      approve_modal: null,\r\n    };\r\n\r\n    this.setData = this.setData.bind(this);\r\n\r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El informe ha sido descargado correctamente.\");\r\n    this.setState({\r\n      approve_modal: false,\r\n    });\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          company: item.company,\r\n          customer: item.customer,\r\n          quantity: item.quantity,\r\n          date: item.date2,\r\n        };\r\n        rows.push(row);\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  render() {\r\n\r\n    let tableData = [\r\n      {\r\n        key: 1,\r\n        company: \"Emtelco\",\r\n        customer: \"Juan Rodríguez\",\r\n        quantity: 150000,\r\n        date2: \"21-06-19\",\r\n        state: \"Desembolsado\",\r\n      },\r\n      {\r\n        key: 2,\r\n        company: \"Movistar\",\r\n        customer: \"David Estrada\",\r\n        quantity: 250000,\r\n        date2: \"22-06-19\",\r\n        state: \"Desembolsado\",\r\n      },\r\n      {\r\n        key: 3,\r\n        company: \"Seguros L.\",\r\n        customer: \"Camilo Pinto\",\r\n        quantity: 8500,\r\n        date2: \"24-06-19\",\r\n        state: \"Desembolsado\",\r\n      },\r\n      {\r\n        key: 4,\r\n        company: \"Emtelco\",\r\n        customer: \"Duvan Vergara\",\r\n        quantity: 120000,\r\n        date2: \"26-06-19\",\r\n        state: \"Desembolsado\",\r\n      },\r\n      {\r\n        key: 5,\r\n        company: \"Claro\",\r\n        customer: \"Alvaro Martinez\",\r\n        quantity: 275000,\r\n        date2: \"27-06-19\",\r\n        state: \"Desembolsado\",\r\n      },\r\n      {\r\n        key: 6,\r\n        company: \"Alianza Normativa\",\r\n        customer: \"Carlos Vargas\",\r\n        quantity: 4870,\r\n        date2: \"28-06-19\",\r\n        state: \"Desembolsado\",\r\n      },\r\n      {\r\n        key: 7,\r\n        company: \"Claro\",\r\n        customer: \"Felipe Urrego\",\r\n        quantity: 125870,\r\n        date2: \"28-06-19\",\r\n        state: \"Desembolsado\",\r\n      },\r\n      {\r\n        key: 8,\r\n        company: \"Seguros L.\",\r\n        customer: \"Julian Osorio\",\r\n        quantity: 92870,\r\n        date2: \"28-06-19\",\r\n        state: \"Desembolsado\",\r\n      }    \r\n    ];\r\n    //let {approve_modal} = this.state;\r\n\r\n    return (\r\n      <div className={\"company-div\"}>\r\n        <Row gutter={30}>\r\n          <Col xs={24} sm={24} md={12} lg={16}/>\r\n          <Col xs={24} sm={24} md={12} lg={4}> \r\n            <Button icon=\"file\" style={{backgroundColor: \"#005fc5\", color: \"white\", marginLeft: \"20px !important\"}} \r\n                    onClick={() => this.setState({approve_modal: true})}>\r\n                  Informe individual\r\n            </Button> \r\n          </Col>\r\n          <Col xs={24} sm={24} md={12} lg={4}> \r\n            <Button icon=\"file\" style={{backgroundColor: \"#005fc5\", color: \"white\", marginLeft: \"20px !important\"}} \r\n                    onClick={() => this.onConfirmRequest()}>\r\n                  Informe masivo\r\n            </Button> \r\n          </Col>\r\n        </Row>\r\n        <Divider/>\r\n        <Row>\r\n          <Table className={\"new-table\"} dataSource={tableData} columns={table} rowKey={'key'}\r\n            pagination={{ itemRender: itemRender, showSizeChanger: true,\r\n            pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"] }} size={'small'} scroll={{x:'500px'|true}}/>\r\n        </Row>  \r\n        <Modal \r\n          title=\"Generar informe\"\r\n          visible={this.state.approve_modal}\r\n          okText={\"Generar\"}\r\n          cancelText={\"Cancelar\"}\r\n          width={450}\r\n          onOk={() => this.onConfirmRequest()}\r\n          onCancel={() => this.setState({approve_modal: false})}>\r\n            <div>\r\n              Seleccionar el cliente para descargar el informe particular.   \r\n              <br/>\r\n              <br/>\r\n              <Select style={{width: \"70%\"}} placeholder={'Cliente'} onChange={this.inputAdviserName}>\r\n                {tableData.map((customer, i) =>(\r\n                  <Select.Option value={customer.key} key={i}>\r\n                    {customer.customer}\r\n                  </Select.Option>\r\n                ))\r\n                }\r\n              </Select>             \r\n            </div>\r\n\r\n        </Modal>\r\n        </div>\r\n      );\r\n  };\r\n}\r\n\r\n\r\nexport default ReceiptManagement;","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Tabs, Icon} from 'antd';\r\n\r\n//Components\r\nimport ReceiptManagement from \"./ReceiptManagement\";\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\n\r\n//Assets\r\n\r\n//Constants\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass GenerateReports extends Component {\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"admin-div\"}>\r\n        <Row>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <h2 className={'header-terms-title'}>Informes</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className={\"admin-row-content\"}>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <Tabs defaultActiveKey=\"1\">\r\n              <TabPane tab={<span> <Icon type=\"dollar\" />Gestionar cobros</span>} key=\"1\">\r\n                <ReceiptManagement/>\r\n              </TabPane>\r\n            </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerateReports;","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Card, Row, Col, Table, Divider, Statistic, Typography, Icon, Button, Skeleton} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\n//Subcomponents\r\nimport routes from '../../../configuration/routing/Routes';\r\n//import MiniLoading from '../subcomponents/MiniLoading';\r\n\r\n//Actions\r\nimport {getHomeData} from \"../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../styles/customer/index.css'\r\n\r\n\r\nconst table = [\r\n  {\r\n    title: <div>Tipo Transacción</div>,\r\n    dataIndex: 'transactionType',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.name.localeCompare(b.name)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad</div>,\r\n    dataIndex: 'quantity',\r\n    width: \"100px\",\r\n    align: \"right\",\r\n    render: text => <div className={\"table-p\"}>{\"$\"+text}</div>,\r\n    sorter: (a, b) =>{ return a.quantity.toString().localeCompare(b.quantity.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha de Transacción</div>,\r\n    dataIndex: 'createdDate',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text.split(\"T\")[0]}</div>,\r\n    sorter: (a, b) =>{ return a.createdDate.localeCompare(b.createdDate)},\r\n  }\r\n];\r\n\r\n//Functions\r\n/*function itemRender(current, type, originalElement) {\r\n  if (type === 'prev' || type === 'Previous Page') {\r\n    return <span title={'Anterior'} className={\"item-renderer\"}>{\"<\"}</span>;\r\n  } if (type === 'next') {\r\n    return <span title={'Siguiente'} className={\"item-renderer\"}>{\">\"}</span>;\r\n  }\r\n  return originalElement;\r\n};*/\r\n\r\nclass Customer extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      loan: false,\r\n      request: false,\r\n    };\r\n    \r\n    this.next = this.next.bind(this);\r\n    this.previous = this.previous.bind(this);\r\n    this.carousel = React.createRef();\r\n\r\n    this.props.getHomeData(parseInt(localStorage.user_id, 10));\r\n\r\n  };\r\n\r\n  next() {\r\n    this.carousel.next();\r\n  };\r\n\r\n  previous() {\r\n    this.carousel.prev();\r\n  };\r\n\r\n  render() {\r\n\r\n    let {homeDataResponse} = this.props;\r\n    //console.log(\"HDR\", homeDataResponse);\r\n    let {loan, request} = this.state;\r\n    let maximumAmount = homeDataResponse.maximumAmount;\r\n    let partialQuantity = homeDataResponse.partialCapacity;\r\n    let tableData = homeDataResponse.transactions;\r\n    let pendingRequests = homeDataResponse.request;\r\n\r\n    if(JSON.stringify(homeDataResponse) === '{}' || tableData === undefined){\r\n      return (\r\n        <Skeleton active paragraph={{ rows: 15 }} className={\"main-skeleton\"}/>        \r\n      );\r\n    }else{\r\n      return (\r\n        <div className={\"customer-div\"}>\r\n          <Row>\r\n            <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n              <Card className={\"customer-card\"}>\r\n                <Row className={\"customer-row-card\"}>\r\n                  <Col xxl={12} lg={12} md={13} sm={24} xs={24}>\r\n                    <Typography>\r\n                      <Typography.Title level={3} className={\"customer-title\"}>\r\n                        ¡Bienvenido, {localStorage.getItem('user_name') +\"!\"}\r\n                      </Typography.Title>       \r\n                    </Typography>\r\n                  </Col>      \r\n                  <Col xxl={12} lg={12} md={11} sm={24} xs={24} className={\"data-align\"}>\r\n                    <Card className={\"customer-credit-card-index\"}>\r\n                      <Row gutter={4}>\r\n                        <Col span={8} lg={8} md={12} sm={24} xs={24}>\r\n                          <Statistic title={<h3 className=\"tag-weigth\">Cupo disponible</h3>} value={(partialQuantity)} prefix={\"$\"}/>\r\n                        </Col>\r\n                        <Col span={8} lg={8} md={12} sm={24} xs={24}>\r\n                          <Statistic title={<h3 className=\"tag-weigth\">Cupo usado</h3>} value={(maximumAmount-partialQuantity)} prefix={\"$\"}/>\r\n                        </Col>\r\n                        <Col span={8} lg={8} md={12} sm={24} xs={24}>\r\n                          <Statistic title={<h3 className=\"tag-weigth\">Cupo total</h3>} value={maximumAmount} prefix={\"$\"}/>\r\n                        </Col>\r\n                      </Row>    \r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n                <Row className={\"row-table\"}>\r\n                  <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n                    <h3>Recientes transacciones...</h3>\r\n                  </Col>\r\n                  <Col>\r\n                    <Divider className={\"second-divider\"}/>\r\n                    <Table className={\"new-table\"} dataSource={tableData} columns={table} rowKey={'idTransaction'} \r\n                          size={'small'} scroll={{x:'500px'|true}} locale={{emptyText: 'No se han realizado transacciones hasta ahora.'}}\r\n                          />\r\n                  </Col>\r\n                </Row>\r\n                <Row className={\"row-request\"}>\r\n                  <Col xxl={14} lg={14} md={14} sm={12} xs={24}>\r\n                    <Button className={\"request-button-none\"} onClick={() => this.setState({loan: true})}>\r\n                      <h3><Icon type={\"plus-circle\"} className={\"request-button\"}/> \r\n                        <span className={\"request-title\"}> Solicitar préstamo</span>\r\n                      </h3>\r\n                    </Button>\r\n                  </Col>\r\n                  <Col xxl={9} lg={9} md={9} sm={10} xs={24} className={\"request-pending-col\"}>\r\n                    <Button className={\"request-pending-button\"} onClick={() => this.setState({request: true})}>\r\n                      <h3>\r\n                        {\r\n                          pendingRequests !== 0 && \r\n                          <span className={\"request-pendings\"}>Tienes {pendingRequests} solicitud(es) pendientes...</span>\r\n                        }\r\n                        {\r\n                          pendingRequests === 0 && \r\n                          <span className={\"request-pendings\"}>No tienes solicitudes pendientes...</span>\r\n                        }\r\n                      </h3>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          {\r\n            loan &&\r\n            <Redirect to={routes.customer_form_request}/>\r\n          }\r\n          {\r\n            request &&\r\n            <Redirect to={routes.customer_review_requests}/> \r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nCustomer.propTypes = {\r\n  homeDataResponse: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    homeDataResponse: state.customer.homeDataResponse\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getHomeData: (customerId) => dispatch(getHomeData(customerId))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Customer);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Divider, Card, Input, Table} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport MiniLoading from '../subcomponents/MiniLoading';\r\n\r\n//Actions\r\nimport {getAllTransactions} from \"../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../styles/customer/transactions.css'\r\n\r\n//Constants\r\nconst table = [\r\n  {\r\n    title: <div>Tipo Transacción</div>,\r\n    dataIndex: 'transactionType',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.name.localeCompare(b.name)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad</div>,\r\n    dataIndex: 'quantity',\r\n    width: \"100px\",\r\n    align: \"right\",\r\n    render: text => <div className={\"table-p\"}>{\"$\"+text}</div>,\r\n    sorter: (a, b) =>{ return a.quantity.toString().localeCompare(b.quantity.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Solicitud</div>,\r\n    dataIndex: 'createdDate',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text.split(\"T\")[0]}</div>,\r\n    sorter: (a, b) =>{ return a.createdDate.localeCompare(b.createdDate)},\r\n  }\r\n];\r\n\r\n//Functions\r\nfunction itemRender(current, type, originalElement) {\r\n  if (type === 'prev' || type === 'Previous Page') {\r\n    return <span title={'Anterior'} className={\"item-renderer\"}>{\"<\"}</span>;\r\n  } if (type === 'next') {\r\n    return <span title={'Siguiente'} className={\"item-renderer\"}>{\">\"}</span>;\r\n  }\r\n  return originalElement;\r\n};\r\n\r\nclass Transactions extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      text: null,\r\n      firstText: null,\r\n      firstTextLength: 0,\r\n      linkName: null,\r\n      linkUrl: null,\r\n    };\r\n\r\n    this.setData = this.setData.bind(this);\r\n    this.inputLinkName = this.inputLinkName.bind(this);\r\n\r\n    this.props.getAllTransactions(parseInt(localStorage.user_id, 10));\r\n\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          name: item.name,\r\n          link: item.url,\r\n        };\r\n        rows.push(row);\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  inputLinkName(e){\r\n    this.setState({\r\n      linkName: e.target.value,\r\n    });    \r\n  };\r\n\r\n  render() {\r\n\r\n    let tableData = this.props.transactionList;\r\n  \r\n    if(JSON.stringify(tableData) === '{}'){\r\n      return (\r\n        <MiniLoading visible={true}/> \r\n      );\r\n    }else{\r\n      return (\r\n        <div className={\"transactions-div\"}>\r\n          <Row>\r\n            <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n              <h2 className={'header-terms-title'}>Histórico de transacciones</h2>\r\n            </Col>\r\n          </Row>\r\n          <Row className={\"social-row-content\"}>\r\n            <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n              <Card className={\"transactions-card\"}>\r\n                <h3>Filtros</h3>\r\n                <Row gutter={8}>\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\">Tipo Transacción: </p>\r\n                    <Input placeholder={\"Tipo Transacción\"}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\">Cantidad</p>\r\n                    <Input placeholder={\"Cantidad\"}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\">Fecha Solicitud</p>\r\n                    <Input placeholder={\"Fecha Solicitud\"}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\">Fecha Transacción</p>\r\n                    <Input placeholder={\"Fecha Transacción\"}/>\r\n                  </Col>\r\n                </Row>\r\n                <Divider className={\"second-divider\"}/>\r\n                  <Table className={\"new-table\"} dataSource={tableData} columns={table} rowKey={'idTransaction'} \r\n                    locale={{ emptyText: 'No hay transacciones todavía' }} pagination={{ itemRender: itemRender, showSizeChanger: true,\r\n                    pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"] }} size={'small'} scroll={{x:'500px'|true}}/>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n}\r\n\r\nTransactions.propTypes = {\r\n  transactionList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    transactionList: state.customer.transactionList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllTransactions: (customerId) => dispatch(getAllTransactions(customerId)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions);","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Math from \"math\";\r\nimport PropTypes from 'prop-types';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport SignaturePad from 'react-signature-canvas';\r\nimport { Divider, Form, Select, Button, Col, Row, InputNumber, Table, Slider, Modal, \r\n  Statistic, Typography, Card, Switch, Spin, Input} from 'antd';\r\n\r\n//Subcomponents\r\nimport FieldTitle from '../subcomponents/FieldTitle';\r\nimport routes from '../../../configuration/routing/Routes';\r\nimport {bankTypeAccountInfo} from '../../../configuration/constants';\r\n\r\n//Actions\r\nimport { getRequestData, getOutlayData, getOultayDatesList, createRequest, generateCodes } from \"../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../styles/customer/request-form.css';\r\nimport { SUCCESS_MODAL, WARNING_MODAL, allowEmergingWindows, ERROR_MODAL } from '../subcomponents/modalMessages';\r\nimport { tsNonNullExpression } from '@babel/types';\r\n\r\n//Constants\r\nconst FormItem = Form.Item;\r\n//const { Panel } = Collapse;\r\n\r\nfunction format(d) {\r\n  var formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    maximumSignificantDigits: 1,\r\n  });\r\n\r\n  return formatter.format(d);\r\n};\r\n\r\nconst table = [\r\n  {\r\n    title: <div>Descuento</div>,\r\n    dataIndex: 'name',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.name.localeCompare(b.name)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad</div>,\r\n    dataIndex: 'quantity',\r\n    width: \"100px\",\r\n    align: \"right\",\r\n    render: text => \r\n      <div className={\"table-p\"}>\r\n        <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}} value={Math.round(text)}\r\n                         thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/>\r\n      </div>,\r\n    sorter: (a, b) =>{ return a.quantity.toString().localeCompare(b.quantity.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Descuento</div>,\r\n    dataIndex: 'date',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text.split(\"T\")[0]}</div>,\r\n    sorter: (a, b) =>{ return a.date.localeCompare(b.date)},\r\n  }\r\n];\r\n\r\nclass LoanRequest extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      sliderValue: null,\r\n      fee: null,\r\n      loan: null,\r\n      money_wallet: false,\r\n      wallet_type: null,\r\n      wallet_number: null,\r\n      bank_account: true,\r\n      bank_name: null,\r\n      bank_number: null,\r\n      bank_type: null,\r\n      signatureDone: false,\r\n      trimmedDataURL: null, \r\n      flagState: null,\r\n      workingDocument: null,\r\n      paymentDocument: null,\r\n      confirmed_data: false,\r\n      form_data: null,\r\n      phoneConfirmation: null,\r\n      emailConfirmation: null,\r\n      enterCodes: null,\r\n    };    \r\n\r\n    this.props.getRequestData(parseInt(localStorage.user_id, 10), this.props.location.state ? this.props.location.state.token : undefined);\r\n    this.props.getOutlayData(parseInt(localStorage.user_id, 10), this.props.location.state ? this.props.location.state.token : undefined);\r\n\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    //console.log(\"PV\", prevState.sliderValue, nextProps.requestDataResponse);\r\n    //console.log(\"RD\", JSON.stringify(nextProps.requestDataResponse) !== '{}');\r\n    if(JSON.stringify(nextProps.requestDataResponse) !== '{}'){\r\n      if(prevState.sliderValue === null){\r\n        return {\r\n          sliderValue: Math.round(nextProps.requestDataResponse.partialCapacity) < 80000 ? 80000 : Math.round(nextProps.requestDataResponse.partialCapacity),\r\n          bank_name: nextProps.requestDataResponse.accountBank,\r\n          bank_number: nextProps.requestDataResponse.accountNumber,\r\n          bank_type: nextProps.requestDataResponse.accountType\r\n        };\r\n      }else{\r\n        return{\r\n          flagState: true\r\n        }\r\n      }\r\n    }else if(nextProps.generateCodes !== null){\r\n      return {\r\n        confirmed_data: false,\r\n        enterCodes: true,\r\n      };\r\n    }else{  \r\n      return {\r\n        flagState: true\r\n      }\r\n    }\r\n  }\r\n\r\n  sigPad = {};\r\n\r\n  clear = () => {\r\n    this.sigPad.clear();\r\n    this.setState({\r\n      trimmedDataURL: false\r\n    });\r\n  };\r\n\r\n  trim = () => {\r\n    this.setState({\r\n      trimmedDataURL: this.sigPad.getTrimmedCanvas().toDataURL('image/png'),\r\n      signatureDone: true\r\n    });\r\n  };\r\n\r\n  onChangeFee = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^0-9]/g, '');\r\n    if(e.target.value !== ''){\r\n      this.setState({\r\n        fee: e.target.value\r\n      });\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  sendReportInfo = (e, maximumSplit) => {\r\n    //console.log(\"e\", e, maximumSplit);\r\n    if(e <= maximumSplit){\r\n      if( this.state.fee !== null){\r\n        this.props.getOultayDatesList(parseInt(localStorage.user_id, 10), this.state.fee, this.state.sliderValue);\r\n      }\r\n    }else{\r\n      WARNING_MODAL(\"Advertencia\", \"Por ingresa un número de cuotas válido\");\r\n    }\r\n  };\r\n\r\n  handleSliderChange = (e) => {\r\n    this.setState({\r\n      sliderValue: Math.round(e),\r\n    });\r\n    if(this.state.fee !== null){\r\n      this.props.getOultayDatesList(parseInt(localStorage.user_id, 10), this.state.fee, e);\r\n    }\r\n  };\r\n\r\n  handleQuantity = (e) => {\r\n    const input = e;\r\n    e = input.replace(/[^0-9]/g, '');\r\n    if(e<=300000 && e>=80000){\r\n      this.setState({\r\n        sliderValue: Math.round(e),\r\n      });\r\n      if(this.state.fee !== null){\r\n        this.props.getOultayDatesList(parseInt(localStorage.user_id, 10), this.state.fee, e);\r\n      } \r\n    } \r\n   \r\n  };\r\n\r\n  handleQuantityBlur = (e) => {\r\n    console.log(\"Valor E\", e);\r\n  };\r\n\r\n  handleWallet = (e) => {\r\n    this.setState({\r\n      money_wallet: e,\r\n      bank_account: !e,\r\n    });\r\n  };\r\n\r\n  handleBankProp = (e) => {\r\n    this.setState({\r\n      bank_account: e,\r\n      money_wallet: false,\r\n    });\r\n  };\r\n\r\n  changeWalletType = (e) => {\r\n    this.setState({\r\n      wallet_type: e\r\n    });\r\n  };\r\n\r\n  changeWalletNumber = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^0-9]/g, '');\r\n    this.setState({\r\n      wallet_number: e.target.value\r\n    });\r\n  };\r\n\r\n  changeBankName = (e) => {\r\n    this.setState({\r\n      bank_name: e\r\n    });\r\n  };\r\n\r\n  changeBankNumber = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^0-9]/g, '');\r\n    this.setState({\r\n      bank_number: e.target.value\r\n    });\r\n  };\r\n\r\n  changeBankType = (e) => {\r\n    this.setState({\r\n      bank_type: e\r\n    });\r\n  };\r\n\r\n  defineDocumentsCondition = () => {\r\n    \r\n    let {bank_account, bank_name, bank_number, bank_type, money_wallet, \r\n         wallet_type} = this.state;\r\n\r\n    //console.log(\"State\", bank_account, bank_name, bank_number, bank_type, money_wallet, \r\n    //wallet_number, wallet_type, signatureDone);\r\n\r\n    if (bank_account){\r\n      if(bank_name !== null && bank_number !== null && bank_type !== null && \r\n         bank_name !== \"\" && bank_number !== \"\" && bank_type !== \"\"){\r\n          return true;\r\n         }\r\n      return false;\r\n    }else if(money_wallet){\r\n      if( wallet_type !== null && wallet_type !== \"\"){\r\n         return true;\r\n        }\r\n      return false;\r\n    }\r\n\r\n    return false;\r\n  \r\n  };\r\n\r\n  generateDocuments = ()=> {\r\n    this.props.generateDocuments(parseInt(localStorage.user_id, 10), this.state.fee, this.state.sliderValue);\r\n  };\r\n\r\n  openDocument = () => {\r\n\r\n    let route = \"https://drive.google.com/open?id=1vlyOU8r-f31ucKc2fvwlcoT570VCtSRi\";\r\n      \r\n    if (route !== null) {\r\n      let newWindow = window.open(route, \"blank\");\r\n      if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined') {\r\n        allowEmergingWindows();\r\n\r\n      }\r\n      SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El contrato se ha descargado satisfactoriamente\");\r\n    } else {\r\n      WARNING_MODAL('Advertencia', 'El archivo no se encuentra disponible en estos momentos');\r\n    }\r\n  \r\n  };\r\n\r\n  checkRequest = (interestValue, adminValue) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (err){\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingrese datos válidos dentro del formulario.\");\r\n      }else{\r\n\r\n        let data = {\r\n          file: this.state.trimmedDataURL,\r\n          quantity: values.quantity,\r\n          split: this.state.fee,\r\n          moyen: values.moyen,\r\n          paymentSupport: this.state.paymentDocument !== null ? this.state.paymentDocument : null,\r\n          workingSupport: this.state.workingDocument !== null ? this.state.workingDocument : null,\r\n          accountType: this.state.money_wallet ? null : values.account_type,\r\n          accountNumber: values.account_number,\r\n          isBank: this.state.money_wallet ? false :  true,\r\n          interest: this.state.sliderValue * interestValue,\r\n          administration: (this.state.fee%2) * adminValue,\r\n          idCompany: this.props.requestDataResponse.idCompany,  \r\n          identificationId: this.props.requestDataResponse.identificationId,\r\n          loanData: this.props.outlayDatesList.datesList[0].quantity,\r\n        };\r\n\r\n        this.setState({\r\n          form_data: data,\r\n          confirmed_data: true,\r\n        });\r\n        \r\n        //console.log(data);\r\n        //this.props.createRequest(data, this.props.location.state ? this.props.location.state.token : undefined);\r\n      }     \r\n    });\r\n  };\r\n\r\n  onChangeWorking = (e) =>{\r\n    let fileType = e.target.files;\r\n\r\n    this.setState({\r\n      workingDocument: fileType[0]\r\n    });\r\n\r\n  };\r\n\r\n  onChangePaymentSupport  = (e) =>{\r\n\r\n  let fileType = e.target.files;\r\n\r\n    this.setState({\r\n      paymentDocument: fileType[0]\r\n    });\r\n\r\n  };\r\n\r\n  changeNewEmail = (e) => {\r\n\r\n    let email = e.target.value;\r\n\r\n    if (email !== null || email !== \"\"){\r\n      this.setState({\r\n        emailConfirmation: email,\r\n      });\r\n    }else{\r\n      ERROR_MODAL(\"Error al realizar la acción\", \"Por favor confirma tu correo electrónico.\");\r\n    }\r\n    //console.log(\"Email\", e.target.value);\r\n  \r\n  };\r\n\r\n  changeNewPhone = (e) => {\r\n    \r\n    let phone = e.target.value;\r\n\r\n    if (phone !== null || phone !== \"\"){\r\n      this.setState({\r\n        phoneConfirmation: phone,\r\n      });\r\n    }else{\r\n      ERROR_MODAL(\"Error al realizar la acción\", \"Por favor confirma tu número de celular.\");\r\n    }\r\n  \r\n  };\r\n\r\n  confirmData = () => {\r\n\r\n    let {phoneConfirmation, emailConfirmation} = this.state;\r\n\r\n    if(phoneConfirmation !== null && emailConfirmation !== null){\r\n\r\n      this.props.generateCodes( emailConfirmation, phoneConfirmation, parseInt(localStorage.user_id, 10));\r\n\r\n    }else{\r\n\r\n      ERROR_MODAL(\"Error al realizar la acción\", \"Los datos ingresados no son válidos.\");\r\n\r\n    }\r\n\r\n  };\r\n\r\n  confirmCodes = () => {\r\n\r\n    this.setState({\r\n      enterCodes: false,\r\n    });\r\n    this.props.createRequest(this.state.form_data, this.props.location.state ? this.props.location.state.token : undefined);\r\n\r\n  };\r\n\r\n  validationLetters = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^a-zA-Z\\s]$/g, '');\r\n  };\r\n\r\n  validationNumbers = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^0-9]/g, '');\r\n  };\r\n\r\n  render(){\r\n\r\n    //console.log(\"BankInfo\", bankTypeAccountInfo);\r\n    //console.log( \"TK\", this.props.location.state.token);\r\n    let signature = false;\r\n    let {fee, sliderValue, bank_account, money_wallet, confirmed_data, enterCodes} = this.state;\r\n    let feeCondition = fee !== null && this.defineDocumentsCondition();\r\n    const { getFieldDecorator } = this.props.form;\r\n    let { requestDataResponse, outlayDataResponse, outlayDatesList } = this.props;\r\n    let { interestValue, adminValue, partialCapacity, maximumSplit, workingSupport,\r\n          paymentSupport, phoneNumber, accountNumber, accountType, accountBank } = requestDataResponse;\r\n    let { bankInfo, walletInfo } = outlayDataResponse;\r\n    let { trimmedDataURL } = this.state;    \r\n\r\n    //console.log(\"ODL\", this.state.sliderValue);\r\n\r\n\r\n    if(JSON.stringify(this.props.requestDataResponse) === '{}' || JSON.stringify(this.props.outlayDataResponse) === '{}'){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                  Cargando ...\r\n                  <br/>\r\n                  <br/>\r\n                  <Spin size=\"large\" />\r\n                </div>);\r\n    }else{\r\n      return (\r\n        <div className={\"request-div\"}>\r\n            <Row className={\"request-row-content\"}>\r\n              <Col xxl={19} lg={19} md={19} sm={12} xs={11}>\r\n                <Typography >\r\n                  <Typography.Title level={3} className={\"request-form-title\"}>\r\n                    Solicitar préstamo\r\n                  </Typography.Title>       \r\n                </Typography>\r\n              </Col>\r\n              <Col xxl={5} lg={5} md={5} sm={12} xs={13}>\r\n                <div>\r\n                  <Row gutter={2}>\r\n                    <Col span={24}>\r\n                      <Statistic className={\"customer-credit-card\"} title={<h3>Cupo disponible</h3>} value={partialCapacity} prefix={\"$\"}/>\r\n                    </Col>\r\n                  </Row>    \r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row className={\"request-row-content\"}>\r\n              <div className={\"request-initial-step\"}>  \r\n                <Form>\r\n                  <Row>\r\n                    <Col lg={1} md={3} sm={5} xs={4}>\r\n                      <Button className={\"step-one\"}>\r\n                        1.\r\n                      </Button>\r\n                    </Col>\r\n                    <Col lg={23} md={21} sm={19} xs={20}>\r\n                      <div>\r\n                        <h3>Información de la solicitud</h3>\r\n                        <Divider className={\"form-request-divider\"}/>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className={\"form-request-rows\"} gutter={8}>\r\n                    <Col xs={24} sm={24} md={12} lg={12} >\r\n                      <Card>\r\n                      <FieldTitle title={\"Monto requerido\"}/>\r\n                      <FormItem>\r\n                        {getFieldDecorator('quantity',\r\n                          {initialValue: this.state.sliderValue, \r\n                          rules: [\r\n                            {required: false, message: 'Por favor ingresa una cantidad de dinero específica'}\r\n                          ]})(\r\n                              <InputNumber step={10000} className={\"form-input-number\"} max={partialCapacity < 80000 ? 80000 : partialCapacity} min={partialCapacity < 80000 ? partialCapacity : 80000}\r\n                                    formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} \r\n                                    placeholder={\"Monto requerido\"} onBlur={(e) => this.handleQuantityBlur(e)} onChange={this.handleQuantity} disabled={this.state.quantityBlur}/>\r\n                          )\r\n                        }\r\n                      </FormItem>\r\n                      <Row className=\"icon-wrapper\">\r\n                        <Col xxl={5} lg={5} md={8} sm={8} xs={5}>\r\n                          <h3>\r\n                          <span className={\"request-title-amount\"}>\r\n                            <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}} value={80000}\r\n                                             thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/></span>\r\n                          </h3>\r\n                        </Col>\r\n                        <Col xxl={14} lg={14} md={8} sm={8} xs={14}>\r\n                          <FormItem>\r\n                            {getFieldDecorator('quantity',\r\n                              {initialValue: this.state.sliderValue, rules: [\r\n                                {required: false, message: 'Por favor ingresa una cantidad de dinero específica'}\r\n                              ]})(\r\n                                <Slider max={partialCapacity <= 80000 ? 80000 : partialCapacity} min={80000} step={10000} className={\"slider-amount\"}\r\n                                        tipFormatter={\r\n                                          function (d) { \r\n                                            return format(d); \r\n                                          }} \r\n                                        onChange={this.handleSliderChange} style={{width: \"90%\"}} />\r\n                                )\r\n                              }  \r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col xxl={5} lg={5} md={8} sm={8} xs={5}>\r\n                          <h3>\r\n                          <span className={\"request-title-amount\"}><CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                                value={partialCapacity < 80000 ? 80000 : partialCapacity} thousandSeparator={'.'}\r\n                                                decimalSeparator={','} prefix={'$'}/></span>\r\n                          </h3>\r\n                        </Col>\r\n                        \r\n                      </Row>\r\n                      <FieldTitle title={\"Número de cuotas\"}/>\r\n                      <span className={\"text-fees\"}>*La cantidad máxima de cuotas de acuerdo con tu empresa es <span className={\"fees-number-text\"}>{maximumSplit}</span>.</span>\r\n                      <FormItem className={\"fees-item\"}>\r\n                        {getFieldDecorator('fees',\r\n                          {rules: [\r\n                            {required: true, message: 'Por favor ingresa un número de cuotas'}\r\n                          ]})(\r\n                            <Row>\r\n                              <Input className={\"form-input-number\"} placeholder={\"Número de cuotas\"} max={maximumSplit}\r\n                              onChange={(e) => this.onChangeFee(e)} onBlur={(e) => this.sendReportInfo(e.target.value, maximumSplit)}\r\n                              disabled={sliderValue < 80000 ? true : false} />\r\n                            </Row>\r\n                          )\r\n                        }\r\n                      </FormItem>  \r\n                      </Card>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12} lg={12}>\r\n                      <Card>\r\n                        <Row gutter={8}>\r\n                          <Col xs={12} sm={24} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                            <b>Cantidad solicitada</b>\r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                            <b style={{color: \"#18e000a6\"}}>\r\n                              <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                                value={this.state.sliderValue} thousandSeparator={'.'}\r\n                                                decimalSeparator={','} prefix={'$'}/></b>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                          <b>Interés total (28,16% E.A.)</b>\r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                          <b>\r\n                            <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                              value={JSON.stringify(outlayDatesList) === '{}' ? \"-\" : outlayDatesList.totalInterest} thousandSeparator={'.'}\r\n                                              decimalSeparator={','} prefix={'$'}/></b>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                            <b>Administración</b>\r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                            <b><CurrencyFormat displayType={'text'} style={{width: \"100%\"}}\r\n                                              value={JSON.stringify(outlayDatesList) === '{}' ? \"-\" : outlayDatesList.administrationValue} thousandSeparator={'.'}\r\n                                              decimalSeparator={','} prefix={'$'}/></b>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Divider className={\"information-divider\"}/>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                            <b>Subtotal</b>\r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                            <b style={{color: \"#cecece\"}}><CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                              value={JSON.stringify(outlayDatesList) === '{}' ? \"-\" : outlayDatesList.subTotal} thousandSeparator={'.'}\r\n                                              decimalSeparator={','} prefix={'$'}/></b>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                            <b>IVA (19%)</b>\r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                            <b><CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                              value={JSON.stringify(outlayDatesList) === '{}' ? \"-\" : Math.ceil(outlayDatesList.ivaValue)} thousandSeparator={'.'}\r\n                                              decimalSeparator={','} prefix={'$'}/></b>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                            <b>Otros cobros</b>\r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                            <b><CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                              value={JSON.stringify(outlayDatesList) === '{}' ? \"-\" : 0} thousandSeparator={'.'}\r\n                                              decimalSeparator={','} prefix={'$'}/></b>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Divider className={\"information-divider\"}/>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                            <b style={{fontSize: \"15px\"}}>Total a pagar</b> \r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                            <b style={{color: \"#42a4ff\"}}><CurrencyFormat  displayType={'text'} style={{width: \"100%\", fontSize: \"15px\"}}\r\n                                              value={JSON.stringify(outlayDatesList) === '{}' ? \"-\" : outlayDatesList.totalValue} thousandSeparator={'.'}\r\n                                              decimalSeparator={','} prefix={'$'}/></b>\r\n                          </Col>\r\n                        </Row>\r\n                        <span className={\"text-fees\"}>*Al dar click en el botón Solitar préstamo, usted acepta los términos y condiciones descritos aquí.</span>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <br/>\r\n                  {\r\n                    (JSON.stringify(outlayDatesList.datesList) !== '[]' && JSON.stringify(outlayDatesList.datesList) !== undefined)  && \r\n                    <Row className={\"form-request-rows\"}>\r\n                      \r\n                        De acuerdo a las cuotas que suministraste, tendrás el siguiente informe de descuentos. \r\n                        <br/>\r\n                        <br/>\r\n                        <Table className={\"dates-table\"} dataSource={outlayDatesList.datesList} columns={table} rowKey={'id'} \r\n                            size={'small'} pagination={false}/>\r\n                      \r\n                    </Row>\r\n                  }\r\n                  <br/>\r\n                  <Row>\r\n                    <Col lg={1} md={3} sm={5} xs={4}>\r\n                      <Button className={\"step-one\"}>\r\n                        2.\r\n                      </Button>\r\n                    </Col>\r\n                    <Col lg={23} md={21} sm={19} xs={20}>\r\n                      <div>\r\n                        <h3>Información de desembolso</h3>\r\n                        <Divider className={\"form-request-divider\"}/>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row gutter={20} className={\"form-request-rows\"}>\r\n                    <Col xs={24} sm={24} md={8} lg={7}>\r\n                    <span className={\"type-account\"}>{\"Banco \"}<Switch onChange={this.handleWallet}/>{\" Billetera virtual\"}</span>  \r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12} lg={10} className={\"form-bank-col\"}>\r\n                      {\r\n                        bank_account &&\r\n                        <div className={\"div-bank-requires\"}>\r\n                          <span className={\"bank-requires\"}>* El tiempo de desembolso depende de los ciclos ACH</span>\r\n                        </div> \r\n                      }\r\n                      {\r\n                        (!bank_account && !money_wallet) && \r\n                        <div >\r\n                          <span>* Escoge un medio para realizar el desembolso</span>\r\n                        </div> \r\n                      }\r\n                    </Col>\r\n                  </Row>\r\n                  <br/>\r\n                    {\r\n                      bank_account && \r\n                      <Row gutter={12} className={\"form-request-rows\"}>\r\n                        <Col xs={12} sm={12} md={7} lg={7} >\r\n                          <FieldTitle title={\"Cuenta\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('moyen',\r\n                              {initialValue: accountBank, rules: [\r\n                                {required: false, message: 'Por favor selecciona una cuenta'}\r\n                              ]})(\r\n                                <Select onChange={this.changeBankName} disabled={sliderValue < 80000 ? true : false} placeholder={\"Cuenta\"} showSearch={true} allowClear={true} autoClearSearchValue={true}>\r\n                                  {bankInfo.map((bank, i) =>(\r\n                                    <Select.Option value={bank.bankName} key={i}>\r\n                                      {bank.bankName}\r\n                                    </Select.Option>\r\n                                  ))\r\n                                  }\r\n                                </Select>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={7} lg={7} >\r\n                          <FieldTitle title={\"Tipo de cuenta\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('account_type',\r\n                              {initialValue: accountType, rules: [\r\n                                {required: false, message: 'Por favor ingresa un tipo de cuenta'}\r\n                              ]})(\r\n                                <Select placeholder={\"Tipo de cuenta\"} disabled={sliderValue < 80000 ? true : false} showSearch={true} allowClear={true} autoClearSearchValue={true} onChange={this.changeBankType}>\r\n                                  {bankTypeAccountInfo.map((accountType, i) =>(\r\n                                    <Select.Option value={accountType.id} key={i}>\r\n                                      {accountType.name}\r\n                                    </Select.Option>\r\n                                  ))\r\n                                  }\r\n                                </Select>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={10} lg={10}>\r\n                        <FieldTitle title={\"Número de cuenta\"}/>\r\n                          <FormItem >\r\n                            {getFieldDecorator('account_number',\r\n                              {initialValue: accountNumber, rules: [\r\n                                {required: false, message: 'Por favor ingresa un número de cuenta' }\r\n                              ]})(\r\n                                <Input className={\"form-input-number\"} placeholder={\"Número de cuenta\"} \r\n                                onChange={this.changeBankNumber} disabled={sliderValue < 80000 ? true : false}/>\r\n                              )\r\n                            }\r\n                          </FormItem>  \r\n                        </Col>\r\n                      </Row>\r\n                    }\r\n                    {\r\n                      money_wallet &&\r\n                      <Row  gutter={12} className={\"form-request-rows\"}>\r\n                        <Col xs={12} sm={12} md={7} lg={7} >\r\n                          <FieldTitle title={\"Billetera virtual\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('moyen',\r\n                              {initialValue: null, rules: [\r\n                                {required: false, message: 'Por favor ingresa un tipo de billetera'}\r\n                              ]})(\r\n                                <Select placeholder={\"Tipo de billetera\"} disabled={sliderValue < 80000 ? true : false} showSearch={true} onChange={this.changeWalletType}>\r\n                                  {walletInfo.map((wallet, i) =>(\r\n                                    <Select.Option value={wallet.bankName} key={i}>\r\n                                      {wallet.bankName}\r\n                                    </Select.Option>\r\n                                  ))\r\n                                  }\r\n                                </Select>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={10} lg={10}>\r\n                        <FieldTitle title={\"Número de celular\"}/>\r\n                          <FormItem >\r\n                            {getFieldDecorator('account_number',\r\n                              {initialValue: phoneNumber, rules: [\r\n                                {required: false, message: 'Por favor ingresa un número de celular' }\r\n                              ]})(\r\n                                <Input  className={\"form-input-number\"} placeholder={\"Número de celular\"} \r\n                                onChange={this.changeWalletNumber} disabled={sliderValue < 80000 ? true : false}/>\r\n                              )\r\n                            }\r\n                          </FormItem>  \r\n                        </Col>\r\n                      </Row>\r\n                    }\r\n\r\n                    {\r\n                      (workingSupport === true) && \r\n                      \r\n                        <Col xs={24} sm={24} md={12} lg={10} className={\"documents-column\"}>\r\n                          <FieldTitle title={\"Cargar certificado laboral\"}/>\r\n                          <input key={this.state.kBK} type=\"file\" onChange={this.onChangeWorking}\r\n                                accept=\".pdf, application/pdf\"/>\r\n                        </Col>\r\n                      \r\n                    }\r\n                    {\r\n                      (paymentSupport === true) && \r\n                      \r\n                        <Col lg={12} md={12} sm={12} xs={24} className={\"documents-column2\"}>\r\n                          <FieldTitle title={\"Cargar comprobante de pago\"}/>\r\n                          <input key={this.state.kBK} type=\"file\" multiple=\"multiple\" onChange={this.onChangePaymentSupport}\r\n                                accept=\".pdf, application/pdf\"/>\r\n                        </Col>\r\n                      \r\n                    }\r\n\r\n                    { \r\n                      ((workingSupport === true || paymentSupport === true)) &&\r\n                        <Row>\r\n                          <Col lg={1} md={3} sm={5} xs={4}>\r\n                            <Button className={\"step-one\"}>\r\n                              3.\r\n                            </Button>\r\n                          </Col>\r\n                          <Col lg={23} md={21} sm={19} xs={20}>\r\n                            <div>\r\n                              <h3>Certificados y soportes</h3>\r\n                              <Divider className={\"form-request-divider\"}/>\r\n                            </div>\r\n                          </Col>\r\n                        </Row>\r\n                    }\r\n                 \r\n\r\n                  { \r\n                    (signature === true) &&\r\n                    <Row className={\"form-request-rows2\"}>\r\n                      <Col lg={1} md={3} sm={5} xs={4}>\r\n                        <Button className={\"step-one\"}>\r\n                          4.\r\n                        </Button>\r\n                      </Col>\r\n                      <Col lg={23} md={21} sm={19} xs={20}>\r\n                        <div>\r\n                          <h3>Documentos de la solicitud</h3>\r\n                          <Divider className={\"form-request-divider\"}/>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  }\r\n                                   \r\n                  <Row className={\"form-request-rows\"}>\r\n                    <Col xs={24} sm={12} md={18} lg={19}/>\r\n                    <Col xs={24} sm={12} md={6} lg={5}>\r\n                      <Button className={\"request-confirm-button\"} icon=\"file\"  disabled={!feeCondition || sliderValue < 80000}\r\n                              onClick={() => this.checkRequest(interestValue, adminValue)}>\r\n                          Solicitar préstamo\r\n                      </Button> \r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </div>\r\n              {\r\n                this.props.requestResponse && \r\n                <Redirect to={routes.customer}/>\r\n              }\r\n              <Modal \r\n                 title={\"Confirmar datos\"}\r\n                 visible={confirmed_data}\r\n                 onCancel={() => this.setState({confirmed_data: false})}\r\n                 footer={\r\n                  <Button key='submit' type='primary' onClick={() => this.confirmData()}>\r\n                    Aceptar\r\n                  </Button>}\r\n                 >\r\n                 <Row className={\"form-request-rows2\"}>\r\n                  <Col lg={3} md={3} sm={3} xs={4}>\r\n                    <Button className={\"step-one\"}>\r\n                      4.\r\n                    </Button>\r\n                  </Col>\r\n                  <Col lg={21} md={21} sm={21} xs={20}>\r\n                    <div>\r\n                      <h3>Confirmar correo electrónico y número de celular</h3>\r\n                      <Divider className={\"form-request-divider\"}/>\r\n                    </div>\r\n                  </Col>\r\n                 </Row>\r\n                 <Form>\r\n                  <Row  gutter={12} className={\"form-request-rows\"}>\r\n                    <Col xs={24} sm={24} md={14} lg={14} >\r\n                      <FieldTitle title={\"Correo Electrónico\"}/>\r\n                      <FormItem>\r\n                        {getFieldDecorator('email',\r\n                          {rules: [\r\n                            {required: false, message: 'Por favor confirma tu correo electrónico'}\r\n                          ]})(\r\n                            <Input  className={\"form-input-number\"} placeholder={\"Confirmar correo\"} \r\n                            onChange={this.changeNewEmail}/>\r\n                          )\r\n                        }\r\n                      </FormItem>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={10} lg={10}>\r\n                    <FieldTitle title={\"Número de celular\"}/>\r\n                      <FormItem >\r\n                        {getFieldDecorator('phone_confirmation',\r\n                          {rules: [\r\n                            {required: false, message: 'Por favor confirma tu número de celular' }\r\n                          ]})(\r\n                            <Input  className={\"form-input-number\"} placeholder={\"Confirmar celular\"} \r\n                            onChange={this.changeNewPhone}/>\r\n                          )\r\n                        }\r\n                      </FormItem>  \r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </Modal>\r\n              <Modal \r\n                 title={\"Ingresar códigos\"}\r\n                 visible={enterCodes}\r\n                 onCancel={() => this.setState({enterCodes: false})}\r\n                 footer={\r\n                  <Button key='submit' type='primary' onClick={() => this.confirmCodes()}>\r\n                    Confirmar códigos\r\n                  </Button>}\r\n                 >\r\n                 <Row className={\"form-request-rows2\"}>\r\n                  <Col lg={3} md={3} sm={3} xs={4}>\r\n                    <Button className={\"step-one\"}>\r\n                      5.\r\n                    </Button>\r\n                  </Col>\r\n                  <Col lg={21} md={21} sm={21} xs={20}>\r\n                    <div>\r\n                      <h3>Ingresar códigos de validación</h3>\r\n                      <Divider className={\"form-request-divider\"}/>\r\n                    </div>\r\n                  </Col>\r\n                 </Row>\r\n                 <Form>\r\n                  <Row  gutter={12} className={\"form-request-rows\"}>\r\n                    <Col xs={24} sm={24} md={20} lg={20} >\r\n                      <FieldTitle title={\"Código Correo\"}/>\r\n                      <FormItem>\r\n                        {getFieldDecorator('code1',\r\n                          {rules: [\r\n                            {required: false, message: 'Por favor confirma tu correo electrónico'}\r\n                          ]})(\r\n                            <Input  className={\"form-input-number\"} placeholder={\"Código enviado al correo\"} \r\n                            onChange={this.changeNewEmail}/>\r\n                          )\r\n                        }\r\n                      </FormItem>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={20} lg={20}>\r\n                    <FieldTitle title={\"Código Celular\"}/>\r\n                      <FormItem >\r\n                        {getFieldDecorator('code2',\r\n                          {rules: [\r\n                            {required: false, message: 'Por favor confirma tu número de celular' }\r\n                          ]})(\r\n                            <Input  className={\"form-input-number\"} placeholder={\"Código enviado al celular\"} \r\n                            onChange={this.changeNewPhone}/>\r\n                          )\r\n                        }\r\n                      </FormItem>  \r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </Modal>\r\n          </Row>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n}\r\n\r\nlet RequestForm = Form.create()(LoanRequest);\r\n\r\nRequestForm.propTypes = {\r\n  requestDataResponse: PropTypes.object,\r\n  outlayDataResponse: PropTypes.object,\r\n  outlayDatesList: PropTypes.object,\r\n  requestResponse: PropTypes.bool,\r\n  generateCodesResponse: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    requestDataResponse: state.customer.requestDataResponse,\r\n    outlayDataResponse: state.customer.outlayDataResponse,\r\n    outlayDatesList: state.customer.outlayDatesList,\r\n    requestResponse: state.customer.requestResponse,\r\n    generateCodesResponse: state.customer.generateCodesResponse\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getRequestData: (customerId, token) => dispatch(getRequestData(customerId, token)),\r\n    getOutlayData: (customerId, token) => dispatch(getOutlayData(customerId, token)),\r\n    getOultayDatesList: (customerId, split, quantity) => dispatch(getOultayDatesList(customerId, split, quantity)),\r\n    createRequest: (data, token) => dispatch(createRequest(data, token)),\r\n    generateCodes: (email, phonenumber, clientid) => dispatch(generateCodes(email, phonenumber, clientid)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestForm);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Tooltip, Icon, Divider, Steps, Badge} from 'antd';\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\n//Styles\r\nimport '../../styles/customer/request-state.css';\r\n\r\n//Constants\r\nimport {requestState} from '../../../configuration/constants';\r\nconst Step = Steps.Step;\r\n\r\nclass RequestStateModal extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: null,\r\n      card_style_requested: \"requested\",\r\n      card_style_analysis: \"analysis\",\r\n      card_style_approved: \"approved\",\r\n      card_style_rejected: \"rejected\",\r\n    };\r\n    \r\n  };\r\n\r\n  defineBadgeName = (id) => {\r\n    if(id === 1){\r\n      return \"Solicitada\";\r\n    }else if(id === 2){\r\n      return \"Evaluada\";\r\n    }else if(id === 3){\r\n      return \"Aprobada RR.HH.\";\r\n    }else if(id === 4){\r\n      return \"Aprobada Admon.\";\r\n    }else if(id === 5){\r\n      return \"Desembolsada\";\r\n    }else if(id=== 6){\r\n      return \"Rechazada\"\r\n    }\r\n  };\r\n\r\n  defineButtonClass = (id) => {\r\n    if(id === 1){\r\n      return \"#c1c1c1\";\r\n    }else if(id === 2){\r\n      return \"yellow\";\r\n    }else if(id === 3){\r\n      return \"#ffa962\";\r\n    }else if(id === 4){\r\n      return \"#62ffb5\";\r\n    }else if(id === 5){\r\n      return \"#6cff55 \";\r\n    }else if(id === 6){\r\n      return \"#ff4747\";\r\n    }else{\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  render(){\r\n\r\n    let item = this.props.item;\r\n    //console.log(item);\r\n    return (\r\n        <Badge count={this.defineBadgeName(item.idRequestState)} className={\"request-badge\"} style={{backgroundColor: this.defineButtonClass(item.idRequestState), color: \"black\"} }>\r\n          <div key={item.key} className={\"request-state-item-requested\"}>\r\n            <Row>\r\n              <Col xs={12} sm={12} md={8} lg={6} className=\"request-item-initial-col\">\r\n                <b>No. de Solicitud</b> <br/><br/>\r\n                {\"Solicitud No. \" + item.idRequest} \r\n              </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\" >\r\n                  <b>Estado</b> <br/><br/>  {item.stateName}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={6}  className=\"request-item-initial-col\">\r\n                  <b>Fecha</b> <br/><br/> {item.createdDate.split(\"T\")[0]}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                  <b>Monto</b> <br/><br/>\r\n                  <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                      value={item.quantity} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={2} lg={2}>\r\n                <Tooltip title=\"Detallar solicitud\">\r\n                  <Icon type={\"plus-circle\"} className={\"request-item-icon\"} onClick={() => this.setState({visible: !this.state.visible})}/> \r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n          \r\n          {\r\n            this.state.visible && \r\n            <div>\r\n              <Row className={\"additional-info\"}>\r\n                <Divider/>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Flujo de aprobación</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row className={\"additional-info\"}>\r\n                <Steps current={item.idRequestState-1} size=\"small\" className={\"request-state-steps\"}>\r\n                  <Step title=\"Solicitada\"/>\r\n                  <Step title=\"En evaluación\"/>\r\n                  {\r\n                    (item.state-1 !== 3) && \r\n                    <Step title=\"Aprobar RR.HH.\"/>\r\n                  }\r\n                  {\r\n                    (item.state-1 !== 3) && \r\n                    <Step title=\"Aprobar Admon.\"/>\r\n                  }\r\n                  \r\n                  {\r\n                    (item.state-1 === 3) && \r\n                    <Step title=\"Rechazada\"/>\r\n                  }\r\n                  {\r\n                    (item.state-1 !== 3) && \r\n                    <Step title=\"Desembolsada\"/>\r\n                  }                 \r\n                </Steps>\r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Información adicional</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={8} lg={4} className=\"request-item-initial-col\">\r\n                  <b>Valor total</b><br/><br/>\r\n                  <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                      value={item.quantity+item.interestValue+item.administrationValue} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/> \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} className=\"request-item-initial-col\" >\r\n                    <b>Cuotas</b><br/><br/>\r\n                    {item.split}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4} className=\"request-item-initial-col\">\r\n                    <b>Cuenta</b><br/><br/>\r\n                    {item.account}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6} className=\"request-item-initial-col\">\r\n                    <b>Tipo de Cuenta</b><br/><br/>\r\n                    {item.accountType !== \"null\" ? item.accountType : \"-\" }\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6} className=\"request-item-initial-col\">\r\n                    <b>Número de cuenta</b><br/><br/>\r\n                    {item.accountNumber}\r\n                </Col>\r\n              </Row>\r\n              <br/><br/>\r\n              {\r\n                item.idRequestState === requestState.RR_HH &&\r\n                <div className={\"request-item-requested-alert\"}>\r\n                  <Row>\r\n                    <h3> \r\n                      <Icon type=\"exclamation-circle\" className={\"request-item-alert-icon\"}/> \r\n                      {\" \"}Ayudanos para que el área de recursos humanos de tu empresa realice la aprobación del crédito.\r\n                    </h3>\r\n                  </Row>\r\n                </div>\r\n              }\r\n              {\r\n                item.idRequestState === requestState.OUTLAYED &&\r\n                <div className={\"request-item-requested-confirm\"}>\r\n                  <Row>\r\n                    <h3> \r\n                      <Icon type=\"check-circle\" className={\"request-item-alert-icon\"}/> \r\n                      {\" \"}¡Tu solicitud ha sido desembolsada exitosamente!\r\n                    </h3>\r\n                  </Row>\r\n                </div>\r\n              }\r\n              {\r\n                item.idRequestState === requestState.REJECTED &&\r\n                <div className={\"request-item-requested-reject\"}>\r\n                  <Row className={\"rejected-row\"}>\r\n                    <span>  \r\n                      {\" \"}¡Tu solicitud fue rechazada por este motivo: {item.observation} !\r\n                    </span>\r\n                  </Row>\r\n                </div>\r\n              }\r\n\r\n            </div>\r\n          }\r\n        </div>\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n}\r\n\r\nexport default RequestStateModal;\r\n","//Libraries\r\nimport React, { Component } from 'react';\r\nimport { Col, Row, List, Spin, Tabs, Icon} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport RequestModal from \"./RequestStateModal\";\r\n//import MiniLoading from '../subcomponents/MiniLoading';\r\n\r\n//Actions\r\nimport {getAllRequest, getAllOutlayedRequest, getAllRequestsWasRejected} from \"../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../styles/customer/request-state.css';\r\nimport { SUCCESS_MODAL } from '../subcomponents/modalMessages';\r\n\r\n//Constants\r\nconst { TabPane } = Tabs;\r\n\r\nclass RequestState extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      visible: null,\r\n    };\r\n\r\n    this.props.getAllRequest(parseInt(localStorage.user_id, 10));\r\n    this.props.getAllOutlayedRequest(parseInt(localStorage.user_id, 10));\r\n    this.props.getAllRequestsWasRejected(parseInt(localStorage.user_id, 10));\r\n    \r\n\r\n  };\r\n\r\n  onChangeMoyen = (e) => {\r\n    this.setState({\r\n      moyen: true\r\n    }); \r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El préstamo ha sido solicitado correctamente.\");\r\n    this.setState({\r\n      loan: true\r\n    });\r\n  };\r\n\r\n  render(){\r\n\r\n  let tableData = this.props.requestList.request;\r\n  let tableOutlayedData = this.props.outlayedRequestList.request;\r\n  let tableRejectData = this.props.rejectedRequestList.request;\r\n  //console.log(\"TableData\", tableData);\r\n\r\n  if(JSON.stringify(tableData) === '{}' || JSON.stringify(tableData) === undefined ||\r\n     JSON.stringify(tableOutlayedData) === '{}' || JSON.stringify(tableOutlayedData) === undefined){\r\n    return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n              Cargando ...\r\n              <br/>\r\n              <br/>\r\n              <Spin size=\"large\" />\r\n            </div>);\r\n  }else{\r\n    return (\r\n      <div className={\"request-state-div\"}>\r\n        <Row>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <h2 className={'request-terms-title'}>Revisar solicitudes</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row >\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane tab={<span> <Icon type=\"unordered-list\" />Solicitudes pendientes</span>} key=\"1\">\r\n              <List\r\n                locale={{ emptyText: 'No hay solicitudes pendientes' }}\r\n                dataSource={tableData}\r\n                renderItem={(item, k) => (\r\n                  <List.Item className={\"request-state-list-item\"}>\r\n                      <RequestModal item={item} key={k}/>\r\n                  </List.Item>\r\n                )}/>\r\n            </TabPane>\r\n            <TabPane tab={<span> <Icon type=\"plus-circle\" />Solicitudes desembolsadas</span>} key=\"2\">\r\n              <List\r\n                  locale={{ emptyText: 'No hay solicitudes desembolsadas' }}\r\n                  dataSource={tableOutlayedData}\r\n                  renderItem={(item, k) => (\r\n                    <List.Item className={\"request-state-list-item\"}>\r\n                        <RequestModal item={item} key={k}/>\r\n                    </List.Item>\r\n                  )}/>\r\n            </TabPane>\r\n            <TabPane tab={<span> <Icon type=\"close-circle\" />Solicitudes rechazadas</span>} key=\"3\">\r\n              <List\r\n                  locale={{ emptyText: 'No hay solicitudes rechazadas' }}\r\n                  dataSource={tableRejectData}\r\n                  renderItem={(item, k) => (\r\n                    <List.Item className={\"request-state-list-item\"}>\r\n                        <RequestModal item={item} key={k}/>\r\n                    </List.Item>\r\n                  )}/>\r\n            </TabPane>\r\n          </Tabs>\r\n          </Col>\r\n        </Row>\r\n          \r\n      </div>\r\n    );\r\n  }\r\n  };\r\n  \r\n}\r\n\r\nRequestState.propTypes = {\r\n  requestList: PropTypes.object,\r\n  outlayedRequestList: PropTypes.object,\r\n  rejectedRequestList: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    requestList: state.customer.requestList,\r\n    outlayedRequestList: state.customer.outlayedRequestList,\r\n    rejectedRequestList: state.customer.rejectedRequestList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllRequest: (customerId) => dispatch(getAllRequest(customerId)),\r\n    getAllOutlayedRequest: (customerId) => dispatch(getAllOutlayedRequest(customerId)),\r\n    getAllRequestsWasRejected: (customerId) => dispatch(getAllRequestsWasRejected(customerId)),\r\n    \r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestState);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Card, Row, Col, Divider, Typography, Skeleton, Button} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\n//Subcomponents\r\nimport CurrencyFormat from \"react-currency-format\";\r\n//import MiniLoading from '../subcomponents/MiniLoading';\r\n\r\n//Actions\r\nimport {getAccountDetail} from \"../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../styles/customer/account-state.css';\r\n\r\nclass AccountState extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      loan: false,\r\n      request: false,\r\n    };\r\n    \r\n    //this.next = this.next.bind(this);\r\n    //this.previous = this.previous.bind(this);\r\n    //this.carousel = React.createRef();\r\n\r\n    this.props.getAccountDetail();\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    let {accountDetail} = this.props;\r\n\r\n    if(this.props.accountDetail === null){\r\n      return (\r\n        <Skeleton active paragraph={{ rows: 15 }} className={\"main-skeleton\"}/>        \r\n      );\r\n    }else{\r\n      return (\r\n        <div className={\"account-div\"}>\r\n          <Row className={\"request-row-content\"}>\r\n            <Col xxl={19} lg={18} md={19} sm={12} xs={11}>\r\n              <Typography >\r\n                <Typography.Title level={4} className={\"request-form-title\"}>\r\n                  Estado de cuenta\r\n                </Typography.Title>       \r\n              </Typography>\r\n            </Col>\r\n            <Col lg={5} md={6} sm={12} xs={12} className={\"account-button\"}>\r\n              <Button type=\"primary\" icon=\"download\">\r\n                Paz y salvo\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Divider className={\"account-divider\"}/>\r\n          <Row gutter={12}>\r\n            <Col lg={12} className={\"account-left-column\"}>\r\n              <Row className={\"account-name-row\"}>\r\n                <Col className={\"account-main-column\"}>\r\n                  <Card className={\"account-card\"}>\r\n                    <Row gutter={8} className={\"information-col\"}>\r\n                      <Col xs={12} sm={24} md={10} lg={10} style={{textAlign: \"left\"}}>\r\n                        <b>Nombres: </b>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={14} lg={14} style={{textAlign: \"left\"}}>\r\n                        <b style={{color: \"#000\"}}>\r\n                          {accountDetail.name + \" \" + accountDetail.lastName}\r\n                        </b>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row gutter={8} className={\"information-col\"}>\r\n                      <Col xs={12} sm={24} md={10} lg={10} style={{textAlign: \"left\"}}>\r\n                        <b>No. Identificación: </b>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={14} lg={14} style={{textAlign: \"left\"}}>\r\n                        <b style={{color: \"#000\"}}>\r\n                          {accountDetail.identificationId}\r\n                        </b>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row gutter={8} className={\"information-col\"}>\r\n                      <Col xs={12} sm={24} md={10} lg={10} style={{textAlign: \"left\"}}>\r\n                        <b>Correo electrónico:</b>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={14} lg={14} style={{textAlign: \"left\"}}>\r\n                        <b style={{color: \"#000\"}}>\r\n                          {accountDetail.email}\r\n                        </b>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row gutter={8} className={\"information-col\"}>\r\n                      <Col xs={12} sm={24} md={10} lg={10} style={{textAlign: \"left\"}}>\r\n                        <b>Número telefónico:</b>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={14} lg={14} style={{textAlign: \"left\"}}>\r\n                        <b style={{color: \"#000\"}}>\r\n                          {accountDetail.phoneNumber}  \r\n                        </b>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row gutter={8} className={\"information-col\"}>\r\n                      <Col xs={12} sm={24} md={10} lg={10} style={{textAlign: \"left\"}}>\r\n                        <b>Fecha de registro:</b>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={14} lg={14} style={{textAlign: \"left\"}}>\r\n                        <b style={{color: \"#000\"}}>\r\n                          {accountDetail.createdDate.split(\"T\")[0]}  \r\n                        </b>\r\n                      </Col>\r\n                    </Row>\r\n                    <Divider/>\r\n                    <Row gutter={8} className={\"information-col\"}>\r\n                      <Col xs={12} sm={24} md={10} lg={10} style={{textAlign: \"left\"}}>\r\n                        <b>Empresa:</b>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={14} lg={14} style={{textAlign: \"left\"}}>\r\n                        <b style={{color: \"#000\"}}>\r\n                          {accountDetail.socialReason}\r\n                        </b>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row gutter={8} className={\"information-col\"}>\r\n                      <Col xs={12} sm={24} md={10} lg={10} style={{textAlign: \"left\"}}>\r\n                        <b>Cantidad de cuotas:</b>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={14} lg={14} style={{textAlign: \"left\"}}>\r\n                        <b style={{color: \"#000\"}}>\r\n                          {accountDetail.montlyFee}\r\n                        </b>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row gutter={8} className={\"information-col\"}>\r\n                      <Col xs={12} sm={24} md={10} lg={10} style={{textAlign: \"left\"}}>\r\n                        <b>Monto Máximo</b>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={14} lg={14} style={{textAlign: \"left\"}}>\r\n                        <b style={{color: \"#000\"}}>\r\n                          <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                            value={accountDetail.maximumAmount} thousandSeparator={'.'}\r\n                                            decimalSeparator={','} prefix={'$'}/></b>\r\n                      </Col>\r\n                    </Row>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n            <Col lg={12}>\r\n              <Row className={\"account-main-row\"}>\r\n                <Col className={\"account-column\"}>\r\n              <Card className={\"account-card\"}>\r\n                <Row gutter={8} className={\"information-col\"}>\r\n                  <Col xs={12} sm={24} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                    <b>Cupo disponible</b>\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                    <b style={{color: \"#18e000a6\"}}>\r\n                      <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                        value={accountDetail.maximumAmount} thousandSeparator={'.'}\r\n                                        decimalSeparator={','} prefix={'$'}/></b>\r\n                  </Col>\r\n                  </Row>\r\n                <br/>\r\n                <b>Conceptos</b>\r\n                <br/>\r\n                <Row gutter={8} className={\"information-col\"}>\r\n                  <Col xs={12} sm={24} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                    <b>Capital</b>\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                    <b style={{color: \"#18e000a6\"}}>\r\n                      <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                        value={accountDetail.totalCapital} thousandSeparator={'.'}\r\n                                        decimalSeparator={','} prefix={'$'}/></b>\r\n                  </Col>\r\n                </Row>\r\n                <Row gutter={8} className={\"information-col\"}>\r\n                  <Col xs={12} sm={24} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                    <b>Intereses corrientes</b>\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                    <b style={{color: \"#18e000a6\"}}>\r\n                      <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                        value={accountDetail.totalInterest} thousandSeparator={'.'}\r\n                                        decimalSeparator={','} prefix={'$'}/></b>\r\n                  </Col>\r\n                </Row>\r\n                <Row gutter={8} className={\"information-col\"}>\r\n                  <Col xs={12} sm={24} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                    <b>Administración</b>\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                    <b style={{color: \"#18e000a6\"}}>\r\n                      <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                        value={accountDetail.totalFeeAdministration} thousandSeparator={'.'}\r\n                                        decimalSeparator={','} prefix={'$'}/></b>\r\n                  </Col>\r\n                </Row>\r\n                <Row gutter={8} className={\"information-col\"}>\r\n                  <Col xs={12} sm={24} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                    <b>IVA</b>\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                    <b style={{color: \"#18e000a6\"}}>\r\n                      <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                        value={accountDetail.totalOtherCollection} thousandSeparator={'.'}\r\n                                        decimalSeparator={','} prefix={'$'}/></b>\r\n                  </Col>\r\n                </Row>\r\n                <Divider/>\r\n                <Row gutter={8} className={\"information-col\"}>\r\n                  <Col xs={12} sm={24} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                    <b>TOTAL A PAGAR</b>\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                    <b style={{color: \"#18e000a6\"}}>\r\n                      <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                        value={accountDetail.totalRemainder} thousandSeparator={'.'}\r\n                                        decimalSeparator={','} prefix={'$'}/></b>\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </div>);\r\n    }\r\n  }\r\n}\r\n\r\nAccountState.propTypes = {\r\n  accountDetail: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    accountDetail: state.customer.accountDetail\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAccountDetail: () => dispatch(getAccountDetail())\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountState);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom'\r\nimport {Layout} from \"antd\";\r\n\r\n//Components - Admin\r\nimport AdminCompanyManagement from \"../admin/company_management/index\";\r\nimport AdminCustomerManagement from \"../admin/customer_management/index\";\r\nimport AdminRequestManagement from \"../admin/request_management/index\";\r\nimport AdminGenerateReports from \"../admin/generate_reports/index\";\r\n\r\n//Components - Company\r\nimport Company from \"../company/request_management/index\";\r\nimport CompanyGenerateReports from \"../company/generate_reports/index\";\r\n\r\n//Components - Customer\r\nimport Customer from \"../customer/index\";\r\nimport Customer_Transactions from \"../customer/Transactions\";\r\nimport Customer_RequestForm from \"../customer/RequestForm\";\r\nimport Customer_ListRequest from \"../customer/RequestState\";\r\nimport Customer_Account from \"../customer/AccountState\";\r\n\r\n\r\n//Subcomponents\r\nimport routes from \"../../../configuration/routing/Routes\";    \r\n\r\nclass Router extends Component {\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <Layout.Content className={\"content\"}>\r\n        { \r\n          (parseInt(localStorage.role_id, 10) === 2 || parseInt(localStorage.role_id, 10) === 1) &&\r\n          <Switch>\r\n            <Route path={routes.admin_company_management} component={AdminCompanyManagement}/>\r\n            <Route path={routes.admin_customer_management} component={AdminCustomerManagement}/>\r\n            <Route path={routes.admin_request_management} component={AdminRequestManagement}/>\r\n            <Route path={routes.admin_generate_reports} component={AdminGenerateReports}/>\r\n            <Route render = {()=><Redirect to={routes.admin_company_management}/>}/>\r\n          </Switch>\r\n        }\r\n        { \r\n          parseInt(localStorage.role_id, 10) === 3 &&\r\n          <Switch>\r\n            <Route path={routes.company_request_management} component={Company}/>\r\n            <Route path={routes.company_generate_reports} component={CompanyGenerateReports}/>\r\n            <Route render = {()=><Redirect to={routes.company_request_management}/>}/>\r\n          </Switch>\r\n        }\r\n        { \r\n          parseInt(localStorage.role_id, 10) === 4 &&\r\n          <Switch>\r\n            <Route path={routes.customer} component={Customer}/>\r\n            <Route path={routes.customer_transactions} component={Customer_Transactions}/>\r\n            <Route path={routes.customer_form_request} component={Customer_RequestForm}/>\r\n            <Route path={routes.customer_review_requests} component={Customer_ListRequest}/>\r\n            <Route path={routes.customer_account} component={Customer_Account}/>\r\n            <Route render = {()=><Redirect to={routes.customer}/>}/>\r\n          </Switch>\r\n        }\r\n        </Layout.Content>  \r\n    );\r\n  };\r\n}\r\n\r\nexport default withRouter(Router);","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Divider, Layout, Form} from \"antd\";\r\nimport {withRouter, Route, Switch,} from 'react-router-dom';\r\n\r\n//Components\r\nimport MainMenu from \"../components/general/MainMenu\";\r\nimport Login from \"../components/authentication/index\";\r\nimport Information from \"../components/general/Information\";\r\n//import ConfirmedAccount from \"../components/authentication/AccountRouting\";\r\n\r\n//IntegrationSubcomponents\r\nimport IFormRequest from \"./integration/IFormRequest\";\r\nimport ITransactions from \"./integration/ITransactions\";\r\nimport ResetPassword from \"./authentication/password/ResetPassword\";\r\nimport Home from \"./home/index\";\r\n\r\n//Subcomponents\r\nimport Router from \"../components/general/Router\";\r\nimport routes from \"../../configuration/routing/Routes\";\r\n\r\n//Styles\r\nimport '../styles/App.css';\r\nimport 'antd/dist/antd.css';\r\nimport { WARNING_MODAL } from './subcomponents/modalMessages';\r\n\r\n//Constants\r\nconst { Footer } = Layout;\r\nconst WrappedResetPassword = Form.create()(ResetPassword);\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n    \r\n    this.state = {\r\n      viewportWidth: 0\r\n    };\r\n\r\n    this.isSignedIn = this.isSignedIn.bind(this);\r\n\r\n  };\r\n\r\n  componentDidUpdate(){\r\n    this.isSignedIn();\r\n  }\r\n\r\n  isSignedIn(){\r\n    if (localStorage.access_token !== undefined && localStorage.access_token !== null &&\r\n       localStorage.access_token){\r\n      let expireTime = new Date(localStorage.expires_on);\r\n      let today = new Date();\r\n      //console.log(\"Dates\", expireTime, today);\r\n      if(today<=expireTime){\r\n        return true;\r\n      }else{\r\n        localStorage.clear();\r\n        WARNING_MODAL(\"Advertencia\", \"La sesión ha caducado. Por favor, vuelve a iniciar sesión.\")\r\n        return false;\r\n      }\r\n    }else{\r\n      return false;\r\n    }\r\n  };\r\n\r\n  render(){\r\n\r\n    let signedIn = (this.props.location.pathname).includes('integration-form') ? true: this.isSignedIn();\r\n    console.log(\"SI\", signedIn);\r\n    //console.log(\"Route\", this.props.location.pathname);\r\n    //console.log(\"IntegrationForm\", routes.integration_form);\r\n    //console.log(\"Comp\", this.props.location.pathname === routes.integration_form);\r\n    //console.log(\"Includes\", this.props.location.pathname.includes('integration-form'));\r\n\r\n    if((this.props.location.pathname).includes('integration-form')){\r\n      return(\r\n        <div>           \r\n          <Layout className={'back-home'}>\r\n            <Switch>         \r\n              <Route exact path={routes.integration_form} component={IFormRequest}/>\r\n              <Route render = {()=><IFormRequest/>}/>\r\n            </Switch>\r\n          </Layout>\r\n        </div>\r\n      );\r\n    }else{\r\n      if(!signedIn){\r\n        if (this.props.location.pathname === routes.login ||\r\n            this.props.location.pathname === routes.forgot_password ||\r\n            this.props.location.pathname === routes.confirm_password ||\r\n            this.props.location.pathname === routes.confirm_account ||\r\n            this.props.location.pathname === routes.admin_register){\r\n            return( <Login pathname={this.props.location.pathname}/> );\r\n          }else{\r\n            return(\r\n              <div>           \r\n                <Layout className={'back-home'}>\r\n                  <Switch>         \r\n                    <Route exact path={routes.integration_form} component={IFormRequest}/>\r\n                    <Route exact path={routes.integration_transactions} component={ITransactions} />\r\n                    <Route exact path={routes.reset_password} component={WrappedResetPassword}/>\r\n                    <Route render = {()=><Home/>}/>\r\n                  </Switch>\r\n                </Layout>\r\n              </div>\r\n            );\r\n          }          \r\n      }else{\r\n        return(\r\n            <div>\r\n              <MainMenu viewPortWidth={this.state.viewportWidth}/>\r\n              <Information/>\r\n              <Layout className={'back-home'}>\r\n                <Router/>\r\n              </Layout>\r\n              <Layout >\r\n                <Footer className={'back-home2'}>\r\n                  <br/>\r\n                  <Divider className={\"layout-divider\"}/>\r\n                  <div className={\"footer-div\"}>\r\n                    Avanzo © 2020 \r\n                  </div>\r\n                </Footer>\r\n              </Layout>\r\n            </div>)\r\n      }\r\n    } \r\n  };\r\n\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","///Types\r\nimport {loginTypes as C} from '../../types';\r\nimport {customerTypes as Cu} from '../../types';\r\n\r\nconst initialState={\r\n  isLogin: false,\r\n  forgetPasswordResponse: null,\r\n  resetPasswordResponse: null,\r\n  correct: false,\r\n  newRegisterResponse: null,\r\n  companyList: [],\r\n};\r\n\r\nexport default function loginReducer(state = initialState, action){\r\n  switch (action.type) {\r\n    case C.RESET_ALL:\r\n      return{\r\n        ...state,\r\n        isLogin: action.isLogin,\r\n      };\r\n    case C.LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLogin: action.isLogin\r\n      };\r\n    case C.LOGGING:\r\n      return{\r\n        ...state,\r\n        isLogin: action.payload\r\n      };\r\n    case C.RESET_PASSWORD:\r\n      return{\r\n        ...state,\r\n        forgetPasswordResponse: action.payload\r\n      };\r\n    case C.CONFIRM_PASSWORD:\r\n      return{\r\n        ...state,\r\n        resetPasswordResponse: action.payload,\r\n        correct: action.correct\r\n      };\r\n    case Cu.NEW_REGISTER:\r\n      return{\r\n        ...state,\r\n        newRegisterResponse: action.payload\r\n      };\r\n    case Cu.GET_COMPANIES:\r\n      return{\r\n        ...state,\r\n        companyList: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","///Types\r\nimport {customerTypes as C} from '../../types';\r\n\r\nconst initialState={\r\n  idDocumentsTypes: [],\r\n  registerDataResponse: {},\r\n  registerResponse: null,\r\n  homeDataResponse: {},\r\n  requestDataResponse: {},\r\n  outlayDataResponse: {},\r\n  outlayDatesList: {},\r\n  documentsReponse: {},\r\n  transactionList: [],\r\n  requestList: {},\r\n  outlayedRequestList: {},\r\n  rejectedRequestList: {},\r\n  accountDetail: null,\r\n  requestResponse: null,\r\n  generateCodesResponse: null,\r\n};\r\n\r\nexport default function customerReducer(state = initialState, action){\r\n  switch (action.type) {\r\n    case C.GET_DOCUMENTS_TYPE:\r\n      return{\r\n        ...state,\r\n        idDocumentsTypes: action.payload,\r\n      };\r\n    case C.REGISTER:\r\n      return{\r\n        ...state,\r\n        registerDataResponse: action.payload,\r\n        registerResponse: action.correct,\r\n      };\r\n    case C.GET_HOME_DATA:\r\n      return{\r\n        ...state,\r\n        homeDataResponse: action.payload,\r\n      };\r\n    case C.GET_REQUEST_DATA:\r\n      return{\r\n        ...state,\r\n        requestDataResponse: action.payload,\r\n      };\r\n    case C.GET_OUTLAY_DATA:\r\n      return{\r\n        ...state,\r\n        outlayDataResponse: action.payload,\r\n      };\r\n    case C.GET_OUTLAY_DATESLIST:\r\n      return{\r\n        ...state,\r\n        outlayDatesList: action.payload,\r\n      };\r\n    case C.GENERATE_DOCUMENTS:\r\n      return{\r\n        ...state,\r\n        documentsReponse: action.payload,\r\n      };\r\n    case C.GET_TRANSACTIONS_LIST:\r\n      return{\r\n        ...state,\r\n        transactionList: action.payload,\r\n      };\r\n    case C.GET_REQUEST_LIST:\r\n      return{\r\n        ...state,\r\n        requestList: action.payload,\r\n      };\r\n    case C.GET_OUTLAYED_REQUEST_LIST:\r\n      return{\r\n        ...state,\r\n        outlayedRequestList: action.payload,\r\n      };\r\n    case C.GET_REJECTED_REQUEST_LIST:\r\n      return{\r\n        ...state,\r\n        rejectedRequestList: action.payload,\r\n      };\r\n    case C.CREATE_REQUEST:\r\n      return{\r\n        ...state,\r\n        requestResponse: action.correct\r\n      }\r\n    case C.GET_ACCOUNT_DETAIL:\r\n      return{\r\n        ...state,\r\n        accountDetail: action.payload\r\n      }\r\n    case C.GENERATE_CODES:\r\n      return{\r\n        ...state,\r\n        generateCodesResponse: action.code\r\n      }\r\n    case C.RESET_VALUES:\r\n      return{\r\n        ...state,\r\n        requestResponse: null\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","///Types\r\nimport {companyTypes as C} from '../../types';\r\n\r\nconst initialState={\r\n  requestList: [],\r\n};\r\n\r\nexport default function companyReducer(state = initialState, action){\r\n  switch (action.type) {    \r\n    case C.GET_REQUEST_LIST:\r\n      return{\r\n        ...state,\r\n        requestList: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","\r\n///Types\r\nimport {adminTypes as C} from '../../types';\r\n\r\nconst initialState={\r\n  registerAdminResponse: null,\r\n  requestResponse: null,\r\n  requestOutLayResponse: null,\r\n  createCustomerResponse: null,\r\n  companyResponse: null,\r\n  companySalaryResponse: [],  \r\n  companyList: null,\r\n  customerList: null,\r\n  customerListToApprove: null, \r\n  customerDateList: null,\r\n  rejectedRequest: null,\r\n  pendingRHRequest: null,\r\n};\r\n\r\nexport default function adminReducer(state = initialState, action){\r\n  switch (action.type) {\r\n    case C.RESET_VALUES:\r\n      return{\r\n      ...state,\r\n        companyResponse: null\r\n      };\r\n    case C.REGISTER_ADMIN:\r\n      return{\r\n        ...state,\r\n        registerAdminResponse: action.payload,\r\n      };\r\n    case C.GET_REQUEST_TO_APPROVE:\r\n      return{\r\n        ...state,\r\n        requestResponse: action.payload\r\n      };\r\n    case C.CREATE_COMPANY:\r\n      return{\r\n        ...state,\r\n        companyResponse: action.correct\r\n      };\r\n    case C.CREATE_CUSTOMER:\r\n      return{\r\n        ...state,\r\n        createCustomerResponse: action.correct\r\n      }\r\n    case C.GET_ALL_COMPANIES:\r\n      return{\r\n        ...state,\r\n        companyList: action.payload\r\n      };\r\n    case C.GET_COMPANY_WITH_SALARY:\r\n      return{\r\n        ...state,\r\n        companySalaryResponse: action.payload\r\n      }\r\n    case C.GET_ALL_CUSTOMERS:\r\n      return{\r\n        ...state,\r\n        customerList: action.payload\r\n      };      \r\n    case C.GET_CUSTOMERS_TO_APPROVE:\r\n      return{\r\n        ...state,\r\n        customerListToApprove: action.payload\r\n      };\r\n    case C.GET_REJECTED_REQUEST:\r\n      return{\r\n        ...state,\r\n        rejectedRequest: action.payload\r\n      };\r\n    case C.GET_PENDINGRH_REQUEST:\r\n      return{\r\n        ...state,\r\n        pendingRHRequest: action.payload\r\n      };\r\n    case C.GET_DATELIST_TO_CUSTOMER:\r\n      return{\r\n        ...state,\r\n        customerDateList: action.payload\r\n      }  \r\n    case C.GET_REQUEST_TO_OUTLAY:\r\n      return{\r\n        ...state,\r\n        requestOutLayResponse: action.payload\r\n      };  \r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","//Types\r\nimport {integrationTypes as C} from '../../types';\r\n\r\nconst initialState={\r\n  integrationRegisterResponse: null,\r\n  integrationToken: null,\r\n};\r\n\r\nexport default function integrationReducer(state = initialState, action){\r\n  switch (action.type) {\r\n    case C.INTEGRATION_REGISTER:\r\n      return{\r\n        ...state,\r\n        integrationRegisterResponse: action.payload,\r\n        integrationToken: action.token,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","//Dependencias\r\nimport { combineReducers } from 'redux'; //Combinar todos\r\n\r\n//Reducers\r\nimport loginReducer from \"./login/loginReducer\";\r\nimport customerReducer from './customer/customerReducer';\r\nimport companyReducer from \"./company/companyReducer\";\r\nimport adminReducer from \"./admin/adminReducer\";\r\nimport integrationReducer from \"./integration/integrationReducer\";\r\n\r\nexport default combineReducers({\r\n  login: loginReducer,\r\n  customer: customerReducer,\r\n  company: companyReducer,\r\n  admin: adminReducer,\r\n  integration: integrationReducer,\r\n});","//Importar de Node-Modules\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n//Importar combinador de reducers.\r\nimport reducer from './redux/reducers/index';\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer, initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.devToolsExtension ? window.devToolsExtension() : f => f\r\n  ) \r\n);\r\n\r\nexport default store;","//Libraries\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n//Components\r\nimport App from './ui/components/App';\r\n\r\n//Subcomponents\r\nimport * as serviceWorker from './configuration/serviceWorker';\r\nimport store from './store/store';\r\n\r\n//Styles\r\nimport './ui/styles/index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>\r\n  </Provider>, \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/background.2ca52f59.png\";"],"sourceRoot":""}