{"version":3,"sources":["ui/assets/authentication/background2.png","ui/assets/authentication/avanzoMenu.jpg","ui/assets/authentication/background.png","ui/assets/home2.PNG","ui/assets/authentication/avanzo.jpg","configuration/routing/Routes.js","ui/components/general/MainMenu.js","ui/components/subcomponents/modalMessages.js","ui/components/authentication/password/ConfirmedPassword.js","store/redux/types.js","services/requestWrapper.js","services/BaseURL.js","services/general/loginServices.js","services/customer/registerServices.js","store/redux/actions/general/loginActions.js","ui/components/authentication/password/ForgotPassword.js","ui/components/authentication/LoginForm.js","services/integrationWrapper.js","services/customer/customerServices.js","store/redux/actions/customer/customerActions.js","ui/components/authentication/register/RegisterCustomer.js","ui/components/authentication/ConfirmedAccount.js","services/admin/adminServices.js","store/redux/actions/admin/adminActions.js","ui/components/authentication/register/Register.js","ui/components/home/index.js","ui/components/authentication/index.js","ui/components/general/Information.js","services/integration/integrationServices.js","store/redux/actions/integration/integrationActions.js","ui/components/integration/IFormRequest.js","ui/components/subcomponents/MiniLoading.js","ui/components/integration/IMenu.js","ui/components/integration/ITransactions.js","ui/components/authentication/password/ResetPassword.js","ui/components/subcomponents/FieldTitle.js","ui/components/admin/company_management/CreateCompany.js","ui/components/admin/company_management/EditModal.js","ui/components/admin/company_management/ServiceTableButtons.js","ui/components/admin/company_management/CompanyTable.js","ui/components/admin/company_management/index.js","ui/components/admin/customer_management/create/CreateCustomer.js","ui/components/admin/customer_management/approve/RequestModalCard.js","ui/components/admin/customer_management/approve/ApproveCustomer.js","ui/components/admin/customer_management/list/ServiceTableButtons.js","ui/components/admin/customer_management/list/CustomerTable.js","ui/components/admin/customer_management/index.js","services/general/generalServices.js","store/redux/actions/general/generalActions.js","ui/components/admin/request_management/approve_requests/RequestStateModal.js","ui/components/admin/request_management/approve_requests/ApproveRequest.js","ui/components/admin/request_management/make_outlay/RequestStateModal.js","ui/components/admin/request_management/make_outlay/MakeOutlay.js","ui/components/admin/request_management/index.js","ui/components/admin/generate_reports/ReceiptManagement.js","ui/components/admin/generate_reports/index.js","ui/components/company/request_management/approve_requests/RequestStateModal.js","ui/components/company/request_management/approve_requests/ApproveRequest.js","ui/components/company/request_management/index.js","ui/components/company/generate_reports/ReceiptManagement.js","ui/components/company/generate_reports/index.js","ui/components/customer/index.js","ui/components/customer/Transactions.js","ui/components/customer/RequestForm.js","ui/components/customer/RequestStateModal.js","ui/components/customer/RequestState.js","ui/components/general/Router.js","ui/components/App.js","configuration/serviceWorker.js","store/redux/reducers/login/loginReducer.js","store/redux/reducers/customer/customerReducer.js","store/redux/reducers/company/companyReducer.js","store/redux/reducers/admin/adminReducer.js","store/redux/reducers/integration/integrationReducer.js","store/redux/reducers/index.js","store/store.js","index.js"],"names":["module","exports","integration_form","integration_transactions","integrations_requests","home","login","forgot_password","reset_password","confirm_password","confirm_account","receive_confirmation","admin_register","admin_company_management","admin_customer_management","admin_request_management","admin_generate_reports","company_request_management","company_generate_reports","customer","customer_register","customer_transactions","customer_form_request","customer_review_requests","Header","Layout","MainMenu","props","state","log_out","visible","redirectTo","loggedIn","isSignedIn","logOut","bind","handleCancelModal","localStorage","clear","this","setState","undefined","access_token","role","parseInt","role_id","className","mode","Item","src","icon","alt","onClick","type","to","routes","title","onOk","okText","onCancel","cancelText","width","Component","withRouter","ERROR_MODAL","err_message","Modal","error","content","SUCCESS_MODAL","success","CONFIRM_MODAL","window","location","reload","WARNING_MODAL","warning","allowEmergingWindows","FormItem","Form","ConfirmedPassword","handleSubmit","e","preventDefault","form","validateFields","err","values","accountInfo","email","recoverPassword","requestSent","sendMessage","loading","modal","secondIcon","onSubmit","htmlType","loginTypes","LOGGING","LOGOUT","RESET_PASSWORD","CONFIRM_PASSWORD","customerTypes","companyTypes","adminTypes","generalTypes","integrationTypes","client","initializeClient","axios","create","baseURL","headers","request","options","then","response","console","config","status","data","message","Promise","reject","loginService","password","url","method","logout","forgetPassword","changePassword","token","registerService","register","getDocumentTypes","newRegister","bodyFormData","FormData","append","name","lastName","identificationId","phoneNumber","company","documentId","photo","paymentReport","getCompanies","dispatch","loginServices","user_info","expires_on","user_name","roleId","roleName","userId","setItem","saveLocalStorage","idUser","payload","C","ForgotPassword","getFieldDecorator","forgetPasswordResponse","rules","required","prefix","placeholder","connect","LoginForm","isLoading","login_success","rol","isLogin","loginError","target","value","getItem","isLogged","initialValue","onChange","onChangeEmail","onChangePassword","integration_token","customerService","getHomeData","getRequestData","customerId","integrationRequest","getOutLayData","getOultayDatesList","split","quantity","generateDocuments","createRequest","file","moyen","accountType","accountNumber","isBank","interest","getAllTransactions","getAllRequest","getAllRequestWasOutlayed","getAllRequestWasRejected","getOutlayData","correct","RegisterCustomer","compareToFirstPassword","rule","callback","getFieldValue","captchaSolved","onSignInClicked","handleEmail","getDocumentsTypes","birthDate","moment","_d","format","expeditionDate","idDocumentsTypes","registerResponse","signInBackground","signInBackground2","logo","gutter","lg","md","sm","xs","allowClear","showSearch","notFoundContent","map","i","Option","key","typeName","min","pattern","validator","xxs","visibleTermModal","footer","dangerouslySetInnerHTML","__html","terms","WrappedRegisterCustomer","registerDataResponse","ConfirmedAccount","adminService","registerAdmin","createCompany","createCustomer","createMultipleCustomer","getAllRequestToOutLay","getAllRequestToApprove","getAllCompanies","getAllCustomers","getAllCustomersToApprove","approveCustomer","approve","clientId","updateCompany","activateCustomer","updateCustomer","getAllCompaniesWithSalaries","companyid","activateCompany","adminServices","getCompanyWithSalary","Register","names","username","description","onChangeValue","param","modifier","nameSplit","confirmationPassword","registerAdminResponse","WrappedRegisterAdmin","admin","Home","handleSliderChange","sliderValue","Math","round","onChangeName","isNaN","test","validationLetters","input","replace","validationNumbers","openTermsandConditions","file1","file2","newWindow","open","newWindow1","closed","checkBox1","clicked","next","previous","carousel","React","createRef","prevProps","prevState","newRegisterResponse","prev","confirmPassword","toString","length","fileType","files","partner","checked","companyList","xxl","maxLength","idCompany","socialReason","kBK","multiple","accept","onChangeField","disabled","WrappedHome","Content","Sider","WrappedNormalLoginStandard","WrappedForgotPassword","WrappedConfirmPassword","ConfirmResetPassword","WrappedConfirmAccount","ConfirmAccount","Login","pathname","path","component","style","backgroundColor","AdminRegister","second_background","CustomerRegister","company_register","render","Information","href","rel","ticking","timezone","integrationService","integrationRegistration","integrationRegister","Role_idRole","IFormRequest","fee","loan","money_wallet","wallet_type","wallet_number","bank_account","bank_name","bank_number","bank_type","signatureDone","trimmedDataURL","match","params","integrationRegisterResponse","marginTop","color","fontSize","textAlign","size","IRequestForm","propTypes","PropTypes","bool","integrationToken","string","integration","MiniLoading","IMainMenu","table","dataIndex","align","text","sorter","a","b","transaction","localeCompare","date","itemRender","current","originalElement","ITransactions","firstText","firstTextLength","linkName","linkUrl","setData","inputLinkName","linkList","rows","item","row","link","push","tableData","date2","JSON","stringify","IMenu","dataSource","columns","rowKey","locale","emptyText","pagination","showSizeChanger","pageSizeOptions","scroll","x","transactionList","ResetPassword","validateFieldsAndScroll","burstingKey","resetPasswordResponse","FieldTitle","visibility","Panel","Collapse","CreateCompany","onConfirmRequest","handleSalaryRate","companyRate","salary_rate","newSalary","companyReportDate","companyFirstDate","companySecondDate","address","approveHumanResources","companySalaries","defaultAmount","economyActivity","maximumSplit","nit","companyMembers","memberName","memberLastName","memberId","profession","memberEmail","representantName","representantLastName","representantId","representantProfession","representantPhone","representantEmail","addNewSalary","defaultPaymentRate","defaultSalaryDate","datesArray","defaultReportDate","clearSelect","log","changeRatesValues","changeSalariesValues","setter","changeDateValues","setterValue","validationNumbersFee","validationNITNumbers","validationNumbersNumber","cleanValues","meeting","report","upload","salariesArray","companyRateName","companyPaymentNumber","burstingFormKey","resetValue","defaultActiveKey","bordered","header","autoClearSearchValue","formatter","onSelect","max","minLength","nextProps","companyResponse","CreateCompanyForm","SalariesTable","service","time","companySalaryResponse","id","array","idCompanySalaries","pop","actions","span","removeRow","handleEdit","keyboard","closable","defaultValue","inputServiceName","inputServiceNumber","TableButtons","inputServiceTime","EditModal","registeredDate","CompanyTable","filterData","toCompare","toUpperCase","includes","TabPane","Tabs","Administrator","tab","CustomerManagement","fixedNumber","Date","customer_initDate","handleWallet","onLoadFile","particular_modal","onChangeFile","onChangeNames","seeDocument","user_id","outlayDataResponse","bankInfo","bankTypeAccountInfo","walletInfo","action","BaseURL","authorization","info","changeBankName","bank","bankName","changeBankType","accountTypeName","changeWalletType","wallet","walletName","changeWalletNumber","CustomerManagementForm","createCustomerResponse","RequestModalCard","defineBadgeName","defineButtonClass","file3","newWindow2","approveCustomers","idNewClient","approve_modal","onRejectRequest","reject_modal","validationInputNumbers","card_style_requested","card_style_analysis","card_style_approved","card_style_rejected","marginBottom","accountBank","customerList","ApproveCustomer","createdDate","idAccount","maximumAmount","montlyFee","platformState","totalRemainder","customerListToApprove","renderItem","k","inputService","idClient","CustomerTable","Customer_Management","generalService","approveorRejectRequest","requestid","requestId","transactionCode","getAllCustomer","companyId","getReportByCustomer","getReportByCompany","generalServices","Step","Steps","RequestStateModal","filePath","idRequest","inputChange","count","requestStateId","idRequestState","displayType","thousandSeparator","decimalSeparator","interestValue","administrationValue","account","okButtonProps","onshowSearch","ApproveRequest","onChangeMoyen","requestStateName","Company_idCompany","requestResponse","RequestOutLayState","onChangeTransactionCode","MakeOutlayProcess","requestOutLayResponse","margin","MakeOutlay","ReceiptManagement","marginLeft","inputAdviserName","GenerateReports","newUrl","approveorRejectRequestByCompany","Company","Customer","homeDataResponse","partialQuantity","partialCapacity","transactions","pendingRequests","active","paragraph","Title","level","Transactions","LoanRequest","sigPad","trim","getTrimmedCanvas","toDataURL","onChangeFee","sendReportInfo","handleQuantity","handleQuantityBlur","handleBankProp","changeBankNumber","defineDocumentsCondition","openDocument","route","checkRequest","adminValue","account_type","account_number","administration","flagState","feeCondition","requestDataResponse","outlayDatesList","otherCollectionValue","step","onBlur","quantityBlur","tipFormatter","d","Intl","NumberFormat","currency","fontWeight","canvasProps","height","ref","backgroundSize","RequestForm","object","stateName","RequestState","getAllOutlayedRequest","requestList","tableOutlayedData","outlayedRequestList","Router","AdminCompanyManagement","AdminCustomerManagement","AdminRequestManagement","AdminGenerateReports","CompanyGenerateReports","Customer_Transactions","Customer_RequestForm","Customer_ListRequest","Footer","WrappedResetPassword","App","viewportWidth","expireTime","viewPortWidth","exact","Boolean","hostname","initialState","documentsReponse","combineReducers","RESET_ALL","Cu","middleware","thunk","store","createStore","reducer","compose","applyMiddleware","devToolsExtension","f","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.eb946392.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background2.1eb55a6e.png\";","module.exports = __webpack_public_path__ + \"static/media/avanzoMenu.7387a43a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background.aa62f661.png\";","module.exports = __webpack_public_path__ + \"static/media/home2.f48bb85c.PNG\";","module.exports = __webpack_public_path__ + \"static/media/avanzo.f5f62129.jpg\";","export default {\r\n  integration_form: \"/integration-form/:name/:lastName/:identificationId/:birthDate/:expeditionDate/:email/:phoneNumber\",\r\n  integration_transactions: \"/integration-transactions\",\r\n  integrations_requests: \"/integrations-requests\",\r\n\r\n\r\n  home: \"/home\",\r\n  login: \"/login\",\r\n  forgot_password: \"/forgot_password\",\r\n  reset_password: \"/confirm_password/:token\",\r\n  confirm_password: \"/password_confirmed\",\r\n  confirm_account: \"/account_confirmed\",\r\n  receive_confirmation: \"/account_confirmation/:token\",\r\n  \r\n  admin_register: \"/admon-register\",\r\n  admin_company_management: \"/admin-company-management\",\r\n  admin_customer_management: \"/admin-customer-management\",\r\n  admin_request_management: \"/admin-request-management\",\r\n  admin_generate_reports: \"/admin-generate-reports\",\r\n  \r\n  company_request_management: \"/company-request-management\",\r\n  company_generate_reports: \"/company-generate-reports\",\r\n  \r\n  customer: \"/customer-home\",\r\n  customer_register: \"/customer-register\",\r\n  customer_transactions: \"/customer-transactions\",\r\n  customer_form_request: \"/customer-form-request\",\r\n  customer_review_requests: \"/customer-review-requests\", \r\n};  \r\n","//Libraries\r\nimport {Layout, Menu, Modal, Icon} from 'antd';\r\nimport React, {Component} from 'react';\r\nimport { Redirect } from \"react-router\";\r\nimport {withRouter, NavLink} from 'react-router-dom';\r\n\r\n//Subcomponents\r\nimport routes from \"../../../configuration/routing/Routes\";\r\nimport icon from \"../../assets/authentication/avanzoMenu.jpg\";\r\n\r\n//Styles\r\nimport '../../styles/general/mainmenu.css';\r\n\r\n//Constants\r\nconst { Header } = Layout;\r\n\r\nclass MainMenu extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      log_out: 0,\r\n      visible: false,\r\n      redirectTo: \"\",\r\n      loggedIn: this.isSignedIn()\r\n    };\r\n\r\n    this.logOut = this.logOut.bind(this);\r\n    this.handleCancelModal = this.handleCancelModal.bind(this);\r\n    this.isSignedIn=this.isSignedIn.bind(this);\r\n\r\n  };\r\n\r\n  logOut(){\r\n    //this.props.logout();\r\n    localStorage.clear();\r\n    this.setState({loggedIn: false})\r\n  };\r\n\r\n  handleCancelModal(){\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n  \r\n  isSignedIn(){\r\n    if (localStorage.access_token !== undefined && localStorage.access_token !== null &&\r\n        localStorage.access_token !== 'null' && localStorage.access_token){\r\n      return true;\r\n    } else {\r\n      localStorage.clear();\r\n      return false;\r\n    }\r\n  };\r\n \r\n  render(){\r\n    \r\n    let {loggedIn} = this.state;\r\n    //let {role} = this.props;\r\n    let role = parseInt(localStorage.role_id, 10);\r\n\r\n    return(\r\n      <Layout className=\"layout\" >\r\n        <Header className={\"header-menu1\"} >         \r\n          <Menu\r\n            mode=\"horizontal\"\r\n            className={\"menu-style\"}>\r\n              <Menu.Item>\r\n                <img src={icon} alt=\"menulogo\" className=\"menu-logo\" />\r\n              </Menu.Item>\r\n              <Menu.Item className={\"menu-logout\"} onClick={() => this.setState({visible: true})}>\r\n                <Icon type=\"poweroff\" />Cerrar sesión\r\n              </Menu.Item>\r\n              {\r\n                (role === 2 || role === 1 ) && \r\n                <Menu.Item className={\"menu-admin-report\"}>\r\n                  <NavLink to={routes.admin_generate_reports}>\r\n                    <Icon type=\"file\"/>Generar Reportes\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (role === 2 || role === 1 ) && \r\n                <Menu.Item className={\"menu-admin-customer\"}>\r\n                  <NavLink to={routes.admin_customer_management}>\r\n                    <Icon type=\"idcard\"/>Gestionar Clientes\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (role === 2 || role === 1 ) && \r\n                <Menu.Item className={\"menu-admin-loan\"}>\r\n                  <NavLink to={routes.admin_request_management}>\r\n                    <Icon type=\"percentage\"/>Gestionar Créditos\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (role === 2 || role === 1 ) && \r\n                <Menu.Item className={\"menu-admin-home\"}>\r\n                  <NavLink to={routes.admin_company_management}>\r\n                    <Icon type=\"cluster\"/>Gestionar Empresas\r\n                  </NavLink>\r\n                  \r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (parseInt(role,10) === 3) && \r\n                <Menu.Item className={\"menu-admin-customer\"}>\r\n                  <NavLink to={routes.company_generate_reports}>\r\n                    <Icon type=\"file-text\"/>Generar informes\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              } \r\n              {\r\n                (parseInt(role,10) === 3) && \r\n                <Menu.Item className={\"menu-admin-customer\"}>\r\n                  <NavLink to={routes.company_request_management}>\r\n                    <Icon type=\"file-done\"/>Gestionar solicitudes\r\n                  </NavLink>  \r\n                </Menu.Item>\r\n              }\r\n                          \r\n              {\r\n                (parseInt(role,10) === 4) && \r\n                <Menu.Item className={\"menu-user-transactions\"}>\r\n                  <NavLink to={routes.customer_transactions}>\r\n                    <Icon type=\"profile\"/>Transacciones\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (parseInt(role,10) === 4) && \r\n                <Menu.Item className={\"menu-user-request\"}>\r\n                  <NavLink to={routes.customer_review_requests}>\r\n                    <Icon type=\"schedule\"/>Revisar solicitudes\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (parseInt(role,10) === 4) && \r\n                <Menu.Item className={\"menu-user-loan\"}>\r\n                  <NavLink to={routes.customer_form_request}>\r\n                    <Icon type=\"dollar\"/>Solicitar préstamo\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n              {\r\n                (parseInt(role,10) === 4) && \r\n                <Menu.Item className={\"menu-user-home\"}>\r\n                  <NavLink to={routes.customer}>\r\n                    <Icon type=\"home\"/>Inicio\r\n                  </NavLink>\r\n                </Menu.Item>\r\n              }\r\n            </Menu>\r\n        </Header>\r\n        <Modal\r\n            title=\"Cerrar sesión\"\r\n            visible={this.state.visible}\r\n            onOk={this.logOut}\r\n            okText={\"Confirmar\"}\r\n            onCancel={this.handleCancelModal}\r\n            cancelText={\"Cancelar\"}\r\n            width={400}\r\n            className={\"log-out-modal\"}>\r\n          <p>¿Confirma que desea cerrar sesión?</p>\r\n        </Modal>\r\n        {\r\n          !loggedIn &&\r\n          <Redirect to={\"/\"}/>\r\n        }\r\n      </Layout>\r\n    );\r\n  };\r\n  \r\n}\r\n\r\n/*MainMenu.propTypes = {\r\n  logout: PropTypes.func,\r\n  isLogin: PropTypes.bool,\r\n  role: PropTypes.number.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLogin: state.login.isLogin,\r\n    role: state.login.role\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch(logout())\r\n  }\r\n};*/\r\n\r\n//export default connect(mapStateToProps, mapDispatchToProps)(withRouter(MainMenu));\r\n\r\nexport default (withRouter(MainMenu));","//Libraries\r\nimport {Modal} from 'antd';\r\n\r\nexport function ERROR_MODAL(title, err_message) {\r\n  Modal.error({\r\n    title: title,\r\n    content: err_message\r\n  });\r\n};\r\n\r\nexport function SUCCESS_MODAL(title, err_message) {\r\n  Modal.success({\r\n    title: title,\r\n    content: err_message\r\n  });\r\n};\r\n\r\nexport function CONFIRM_MODAL(title, err_message) {\r\n  Modal.success({\r\n    title: title,\r\n    content: err_message,\r\n    onOk() {\r\n      window.location.reload();\r\n    },\r\n  });\r\n};\r\n\r\nexport function ERROR_NEW_MODAL(title, err_message) {\r\n  Modal.error({\r\n    title: title,\r\n    content: err_message,\r\n    onOk() {\r\n      window.location.reload();\r\n    },\r\n  });\r\n};\r\n\r\nexport function WARNING_MODAL(title, err_message) {\r\n  Modal.warning({\r\n    title: title,\r\n    content: err_message,\r\n  });\r\n};\r\n\r\nexport function allowEmergingWindows() {\r\n  Modal.warning({\r\n    title: 'Ventanas emergentes',\r\n    content: 'Por favor habilite las ventanas emergentes de acuerdo con su navegador',\r\n  });\r\n};","//Libraries\r\nimport {Form, Icon, Button} from 'antd';\r\nimport {Redirect, NavLink} from \"react-router-dom\";\r\nimport React, {Component} from 'react';\r\n\r\n//Subcomponents\r\nimport routes from \"../../../../configuration/routing/Routes\";\r\n\r\n//Actions\r\nimport { SUCCESS_MODAL } from '../../subcomponents/modalMessages';\r\n\r\n//Assets\r\nimport secondIcon from \"../../../assets/authentication/avanzo.jpg\";\r\n\r\n//Constants\r\nconst FormItem = Form.Item;\r\n\r\nclass ConfirmedPassword extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state={\r\n      loading: false,\r\n      requestSent: false,\r\n      modal: false,\r\n    };\r\n\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const accountInfo = {\r\n          email: values.email\r\n        };\r\n        this.props.recoverPassword(accountInfo);\r\n        this.setState({requestSent: true});\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  sendMessage = (e) => {\r\n    SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", \"Se ha enviado un correo electrónico con las instrucciones necesarias para restablecer la contraseña.\")\r\n  };\r\n\r\n  render() {\r\n\r\n    //const { getFieldDecorator } = this.props.form;\r\n    const {requestSent} = this.state;\r\n\r\n    return (\r\n        <div>\r\n          <div className=\"div-logo\">\r\n            <img src={secondIcon} alt=\"icon\" className={\"logo-confirmed\"} />\r\n          </div>\r\n          <div className={\"login-card-confirmed\"}>\r\n            <div className=\"login-form\">\r\n              <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <div className={\"confirm_account\"}>\r\n                  <div className={\"confirm_account_text\"}>\r\n                    <Icon className='question-button' type='check-circle'/>\r\n                       La cuenta ha sido confirmada satisfactoriamente.\r\n                      Ahora puede iniciar sesión con la contraseña asignada.\r\n                      <br/>\r\n                  </div>\r\n                </div>\r\n                <FormItem className={\"submit\"}>\r\n                  <NavLink to={routes.login} >\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" >\r\n                      <p className={\"login-button-text\"}>Iniciar Sesión</p>\r\n                    </Button>\r\n                  </NavLink>\r\n                </FormItem>\r\n\r\n              </Form>\r\n            </div>\r\n            \r\n          {requestSent === true &&\r\n            <Redirect to={routes.login}/>\r\n          }\r\n        </div>\r\n        <div className={\"bottom-title\"}>\r\n          Avanzo © 2019\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*ForgotPassword.propTypes = {\r\n  postForgotPassword: PropTypes.func,\r\n  onSwap: PropTypes.func,\r\n  forgot_password: PropTypes.object,\r\n  recoverPassword: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    recoverPassword: (accountInfo) => dispatch(recoverPassword(accountInfo))\r\n  };\r\n};*/\r\n\r\n//export default connect(null, mapDispatchToProps)(ForgotPassword);\r\n\r\nexport default (ConfirmedPassword);","/* ----------------- Account ---------------- */\r\nexport const loginTypes = {\r\n  LOGGING: 'LOGGING',\r\n  LOGOUT: 'LOGOUT',\r\n  RESET_PASSWORD: 'RESET_PASSWORD',\r\n  CONFIRM_PASSWORD: 'CONFIRM_PASSWORD'\r\n};\r\n\r\n/* --------------- Customer -------------- */\r\nexport const customerTypes = {\r\n  GET_DOCUMENTS_TYPE: \"GET_DOCUMENTS_TYPE\",\r\n  REGISTER: \"REGISTER\",\r\n  GET_COMPANIES: \"GET_COMPANIES\",\r\n  NEW_REGISTER: \"NEW_REGISTER\",\r\n  GET_HOME_DATA: \"GET_HOME_DATA\",\r\n  GET_REQUEST_DATA: \"GET_REQUEST_DATA\",\r\n  GET_OUTLAY_DATA: \"GET_OUTLAY_DATA\",\r\n  GET_OUTLAY_DATESLIST: \"GET_OUTLAY_DATESLIST\",\r\n  GENERATE_DOCUMENTS: \"GENERATE_DOCUMENTS\",\r\n  CREATE_REQUEST: \"CREATE_REQUEST\",\r\n  GET_TRANSACTIONS_LIST: \"GET_TRANSACTIONS_LIST\",\r\n  GET_REQUEST_LIST: \"GET_REQUEST_LIST\",\r\n  GET_OUTLAYED_REQUEST_LIST: \"GET_OUTLAYED_REQUEST_LIST\",\r\n  RESET_VALUES: \"RESET_VALUES\",\r\n};\r\n\r\n/* ----------------- Company ------------------- */\r\nexport const companyTypes = {\r\n  GET_REQUEST_LIST: \"GET_REQUEST_LIST\",\r\n};\r\n\r\n/* ----------------- Admin ------------------- */\r\nexport const adminTypes = {\r\n  GET_ALL_CUSTOMERS: \"GET_ALL_CUSTOMERS\",\r\n  GET_CUSTOMERS_TO_APPROVE: \"GET_CUSTOMERS_TO_APPROVE\",\r\n  APPROVE_CUSTOMERS: \"APPROVE_CUSTOMERS\",\r\n  GET_ALL_COMPANIES: \"GET_ALL_COMPANIES\",\r\n  GET_COMPANY_WITH_SALARY: \"GET_COMPANY_WITH_SALARY\",\r\n  REGISTER_ADMIN: \"REGISTER_ADMIN\",\r\n  CREATE_COMPANY: \"CREATE_COMPANY\",\r\n  UPDATE_COMPANY: \"UPDATE_COMPANY\",\r\n  CREATE_CUSTOMER: \"CREATE_CUSTOMER\",\r\n  ACTIVATE_CUSTOMER: \"ACTIVATE_CUSTOMER\",\r\n  ACTIVATE_COMPANY: \"ACTIVATE_COMPANY\",\r\n  UPDATE_CUSTOMER: \"UPDATE_CUSTOMER\",\r\n  CREATE_MULTIPLE_CUSTOMER: \"CREATE_MULTIPLE_CUSTOMER\",\r\n  GET_REQUEST_LIST: \"GET_REQUEST_LIST\",\r\n  GET_REQUEST_TO_APPROVE: \"GET_REQUEST_TO_APPROVE\",\r\n  GET_REQUEST_TO_OUTLAY: \"GET_REQUEST_TO_OUTLAY\",\r\n  RESET_VALUES: \"RESET_VALUES\"\r\n};\r\n\r\n/* ---------------- General --------------------- */\r\nexport const generalTypes = {\r\n  APPROVE_REJECT_REQUEST: \"APPROVE_REJECT_REQUEST\",\r\n  GET_CUSTOMER_LIST: \"GET_CUSTOMER_LIST\",\r\n  GET_CUSTOMER_REPORT: \"GET_CUSTOMER_REPORT\",\r\n  GET_COMPANY_REPORT: \"GET_COMPANY_REPORT\",\r\n};\r\n\r\nexport const integrationTypes = {\r\n  INTEGRATION_REGISTER: \"INTEGRATION_REGISTER\",\r\n};\r\n\r\n","//Libraries\r\nimport axios from 'axios';\r\n\r\n//Subcomponents\r\nimport BaseURL from \"./BaseURL\";\r\n\r\n/*** Create an Axios Client with defaults ***/\r\nlet client = null;\r\n\r\nexport const initializeClient = function () {\r\n  client = axios.create({\r\n    baseURL: BaseURL,\r\n    headers: { 'Authorization': 'Bearer ' + localStorage.access_token }\r\n  });\r\n};\r\n\r\ninitializeClient();\r\n\r\n/*** Request Wrapper with default success/error actions ***/\r\nconst request = function (options) {\r\n\r\n  const onSuccess = function (response) {\r\n    //console.info('Request Successful: response: ', response);\r\n    return response;\r\n  };\r\n\r\n  const onError = function (error) {\r\n    console.error('Request Failed: Config Sent:', error.config);\r\n\r\n    if (error.response) {\r\n      console.error('Status:', error.response.status);\r\n      console.error('Data:', error.response.data);\r\n      console.error('Headers:', error.response.headers);\r\n\r\n      if(error.response.status === 500){\r\n        error.response.data = \"Error en el servidor\";\r\n      }\r\n    } else {\r\n      console.error('Error Message:', error.message);\r\n    }\r\n    return Promise.reject(error.response || error.message);\r\n  };\r\n\r\n  return client(options).then(onSuccess).catch(onError);\r\n};\r\n\r\nexport default request;","//const BaseURL = \"http://18.189.143.137:4000\";\r\n//const BaseURL = \"http://3.133.128.42:4000/\";\r\nconst BaseURL = \"http://18.188.61.218:4000/\";\r\n//const BaseURL = \"http://localhost:4000/\"\r\n\r\nexport default BaseURL;","//Subcomponents\r\nimport request from '../requestWrapper';\r\n\r\nfunction login(email, password) {\r\n  \r\n  let data = {\r\n    email: email,\r\n    password: password \r\n  };\r\n\r\n  return request({\r\n    url: '/Account/Token',\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n}\r\n\r\nfunction logout(){\r\n  return request({\r\n    url: '/Account/Logout',\r\n    method: 'PUT',\r\n  });\r\n};\r\n\r\nfunction forgetPassword(email) {\r\n  \r\n  return request({\r\n    url: '/Account/ResetPassword',\r\n    method: 'GET',\r\n    headers:{\r\n      email: email\r\n    }\r\n  });\r\n}\r\n\r\nfunction changePassword(data, token){\r\n  return request({\r\n    url: '/Account/ConfirmPassword',\r\n    method: 'PUT',\r\n    data: data,\r\n    headers: { \r\n      'Authorization': 'Bearer ' + token \r\n    }\r\n  });\r\n}; \r\n\r\n\r\nconst loginService = {\r\n  login, logout, forgetPassword, changePassword\r\n};\r\n\r\nexport default loginService;","//Subcomponents\r\nimport request from '../requestWrapper';\r\n\r\nfunction getDocumentTypes(){\r\n  return request({\r\n    url: '/DocumentTypes/GetAll',\r\n    method: 'GET',\r\n  });\r\n};\r\n\r\nfunction register(data) {\r\n  \r\n  return request({\r\n    url: '/Account/Register',\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n};\r\n\r\nfunction newRegister(data) {\r\n\r\n  var bodyFormData = new FormData();\r\n\r\n  bodyFormData.append('name', data.name);\r\n  bodyFormData.append('lastName', data.lastName);\r\n  bodyFormData.append('email', data.email);\r\n  bodyFormData.append('identificationId', data.identificationId);\r\n  bodyFormData.append('phoneNumber', data.phoneNumber);\r\n  bodyFormData.append('company', data.company);\r\n  bodyFormData.append('password', data.password);\r\n  bodyFormData.append('documentId', data.documentId); \r\n  bodyFormData.append('photo', data.photo); \r\n  bodyFormData.append('paymentReport', data.paymentReport); \r\n  \r\n  return request({\r\n    url: '/Account/NewRegister',\r\n    method: 'POST',\r\n    data: bodyFormData\r\n  });\r\n};\r\n\r\nfunction getCompanies(){\r\n  return request({\r\n    url: '/Company/GetAllForUsers',\r\n    method: 'GET',\r\n  });\r\n};\r\n\r\n\r\nconst registerService = {\r\n  register, getDocumentTypes, newRegister, getCompanies\r\n};\r\n\r\nexport default registerService;","///Types\r\nimport {loginTypes} from '../../types';\r\nimport {customerTypes as C} from '../../types';\r\n\r\n//Subcomponents\r\nimport { SUCCESS_MODAL, ERROR_MODAL } from '../../../../ui/components/subcomponents/modalMessages';\r\n\r\n//Services\r\nimport { initializeClient } from '../../../../services/requestWrapper';\r\nimport loginServices from '../../../../services/general/loginServices'; \r\nimport registerService from '../../../../services/customer/registerServices'; \r\n\r\nfunction saveLocalStorage(access_token, expires_on, user_name, roleId, roleName, email, userId){\r\n\r\n  localStorage.setItem('access_token', access_token);\r\n  localStorage.setItem('expires_on', expires_on);\r\n  localStorage.setItem('user_name', user_name);\r\n  localStorage.setItem('role_id', roleId);\r\n  localStorage.setItem('role_name', roleName);\r\n  localStorage.setItem('email', email);  \r\n  localStorage.setItem('user_id', userId);\r\n\r\n  initializeClient();\r\n};\r\n\r\n//Exports login function.\r\nexport const login = (email, password) => {\r\n  return dispatch => {\r\n    return loginServices.login(email, password)\r\n        //Response\r\n        .then(response => {\r\n          let data = response.data;\r\n          let user_info = response.data.user_info;\r\n          saveLocalStorage(data.access_token, data.expires_on, user_info.name, user_info.roleId,\r\n             user_info.roleName, user_info.email, user_info.idUser);\r\n          dispatch({\r\n            type: loginTypes.LOGGING,\r\n            payload: true,\r\n          });\r\n          //SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", \r\n          //\"Ha ingresado a nuestra plataforma exitosamente.\");\r\n        //Manejo error\r\n        }).catch(err => {\r\n          dispatch({\r\n            type: loginTypes.LOGGING,\r\n            payload: false,\r\n          });\r\n          ERROR_MODAL(\"Error al realizar la acción\", err.data.message);\r\n        });\r\n  }\r\n};\r\n\r\nfunction setLogout (isLogin) {\r\n  return {\r\n    type: loginTypes.LOGOUT,\r\n    isLogin\r\n  };\r\n}\r\n\r\nexport const logout = () => {\r\n  return dispatch => {\r\n    dispatch(setLogout(false));\r\n    localStorage.clear();\r\n  }\r\n};\r\n\r\nexport const forgetPassword = (email) => {\r\n  return dispatch => {\r\n    return loginServices.forgetPassword(email)\r\n      .then(response => {\r\n        dispatch({\r\n          type: loginTypes.RESET_PASSWORD,\r\n          payload: response.data\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", \"Se te ha enviado un correo electrónico con las instrucciones necesarias para restablecer la contraseña.\")\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: loginTypes.RESET_PASSWORD,\r\n          payload: err\r\n        });\r\n      });\r\n  }\r\n};\r\n\r\nexport const changePassword = (data, token) => {\r\n  return dispatch => {\r\n    return loginServices.changePassword(data, token)\r\n        .then(response => {\r\n          dispatch({\r\n            type: loginTypes.CONFIRM_PASSWORD,\r\n            payload: response.data,\r\n            correct: true,\r\n          });\r\n          SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", \"La contraseña se ha cambiado existosamente. Puedes iniciar con tu nueva contraseña.\")\r\n        }).catch(err => {\r\n          dispatch({\r\n            type: loginTypes.CONFIRM_PASSWORD,\r\n            payload: err,\r\n            correct: false,\r\n          });\r\n        });\r\n  }\r\n};\r\n\r\nexport const newRegister = (data) => {\r\n  return dispatch => {\r\n    return registerService.newRegister(data)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.NEW_REGISTER,\r\n          payload: true,\r\n          correct: true,\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada exitosamente\", response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.NEW_REGISTER,\r\n          payload: false,\r\n          correct: false,\r\n        });\r\n        ERROR_MODAL('Error al registrar el usuario',  err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getCompanies = () => {\r\n  return dispatch => {\r\n    return registerService.getCompanies()\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_COMPANIES,\r\n          payload: response.data,\r\n        });\r\n        //SUCCESS_MODAL(\"Acción realizada exitosamente\", response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_COMPANIES,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al registrar el usuario',  err.response.message);\r\n      });\r\n  }\r\n};","//Libraries\r\nimport {Form, Icon, Input, Button} from 'antd';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Subcomponents\r\nimport routes from \"../../../../configuration/routing/Routes\";\r\n\r\n//Actions\r\nimport {forgetPassword} from \"../../../../store/redux/actions/general/loginActions\";\r\n\r\n//Assets\r\nimport secondIcon from \"../../../assets/authentication/avanzo.jpg\"\r\n\r\n//Constants\r\nconst FormItem = Form.Item;\r\n\r\nclass ForgotPassword extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state={\r\n      loading: false,\r\n      requestSent: false,\r\n      modal: false,\r\n    };\r\n\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        //console.log(values);\r\n        let email = values.email;\r\n        this.props.forgetPassword(email);\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  sendMessage = (e) => {\r\n  };\r\n\r\n  render() {\r\n\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { forgetPasswordResponse } = this.props;\r\n\r\n    return (\r\n        <div>\r\n          <div className=\"div-logo\">\r\n            <img src={secondIcon} alt=\"icon\" className={\"logo\"} />\r\n          </div>\r\n          <div className={\"login-card\"}>\r\n            <div className=\"login-form\">\r\n              <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                  <div className={\"info\"}>\r\n                    Ingrese su correo electrónico para poder restablecer la contraseña\r\n                  </div>\r\n                  <FormItem>\r\n                      {getFieldDecorator('email', {\r\n                          rules: [{\r\n                              type: 'email', message: 'El texto no es un email válido',\r\n                          },\r\n                              { required: true, message: 'Por favor, inserte su email para enviar un correo' }]\r\n                      })(\r\n                          <Input className={\"form-content\"} prefix={<Icon type=\"mail\" className={\"field-icon\"}/>} placeholder=\"Email\"/>\r\n                      )}\r\n                  </FormItem>\r\n                  \r\n                  <FormItem className={\"submit\"}>\r\n                      <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                          Restablecer\r\n                      </Button>\r\n                      <div>\r\n                          <Link to={routes.login}>\r\n                              <p className={\"url-form\"}>Iniciar Sesión</p>\r\n                          </Link>\r\n                          <Link to={routes.customer_register}>\r\n                              <p className={\"url-form\"}>¿Desea Registrarse?</p>\r\n                          </Link>\r\n                      </div>\r\n                  </FormItem>\r\n              </Form>\r\n            </div>\r\n            \r\n          {(forgetPasswordResponse !== null ? forgetPasswordResponse.message === \"Sample text\" : false) &&\r\n            <Redirect to={routes.login}/>\r\n          }\r\n        </div>\r\n        <div className={\"bottom-title\"}>\r\n          Avanzo © 2019\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nForgotPassword.propTypes = {\r\n  forgetPasswordResponse: PropTypes.object,\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    forgetPasswordResponse: state.login.forgetPasswordResponse,\r\n  }\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    forgetPassword: (email) => dispatch(forgetPassword(email))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForgotPassword);\r\n","//Libraries\r\nimport { Form, Icon, Input, Button } from 'antd';\r\nimport React, {Component} from 'react';\r\nimport { Redirect } from \"react-router\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\n//Subcomponents\r\nimport routes from \"../../../configuration/routing/Routes\";\r\nimport {ERROR_MODAL} from \"../subcomponents/modalMessages\";\r\n\r\n//Actions\r\nimport {login} from \"../../../store/redux/actions/general/loginActions\";\r\n\r\n//Assets\r\nimport secondIcon from \"../../assets/authentication/avanzo.jpg\";\r\n\r\n//Constants\r\nconst FormItem = Form.Item;\r\n\r\nclass LoginForm extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state={\r\n\r\n      isLoading: false,\r\n      login_success: 0,\r\n      email: '',\r\n      password: '',\r\n      rol: null,\r\n      isLogin: false,\r\n      token: null,\r\n      loginError: null,\r\n    };\r\n\r\n  };\r\n\r\n  onChangeEmail(email) {\r\n    this.setState({ email: email.target.value })\r\n  };\r\n\r\n  onChangePassword(password) {\r\n    this.setState({ password: password.target.value })\r\n  };\r\n\r\n  sendMessage = (e) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (err){\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingrese un email y contraseña válidos.\");\r\n      }else{\r\n        this.props.login(values.email, values.password);\r\n      }     \r\n    });\r\n  };\r\n\r\n  render() {  \r\n\r\n    const { getFieldDecorator } = this.props.form;\r\n    let role = parseInt(localStorage.getItem(\"role_id\"), 10);\r\n    let isLogged = this.props.isLogin !== undefined ? this.props.isLogin : false;\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"div-logo\">\r\n          <img src={secondIcon} alt=\"icon\" className=\"logo\" />\r\n        </div>\r\n        <div className={\"login-card\"}>\r\n          <div className=\"login-form\">\r\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n              <div>\r\n                <br/>\r\n                <br/>\r\n                <FormItem>\r\n                  {getFieldDecorator('email', { initialValue: '',\r\n                    rules: [\r\n                      {type: \"email\", message: \"Ingrese un correo válido, por favor.\"},\r\n                      {required: true, message: 'Por favor, ingrese su correo electrónico.'}],\r\n                  })(\r\n                    <Input prefix={<Icon type=\"user\" className={\"field-icon\"} />} placeholder=\"Email\" \r\n                    onChange={(value) => this.onChangeEmail(value)}/>\r\n                  )}\r\n                </FormItem>\r\n                <FormItem>\r\n                  {getFieldDecorator('password', {\r\n                    rules: [{ required: true, message: 'Por favor, ingrese su contraseña' }],\r\n                  })(\r\n                  <Input prefix={<Icon type=\"lock\" className={\"field-icon\"} />} type=\"password\" placeholder=\"Contraseña\"\r\n                    onChange={(value) => this.onChangePassword(value)}/>)\r\n                  }\r\n                </FormItem>\r\n                <FormItem className={\"submit\"}>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" \r\n                          onClick={() => this.sendMessage()}>\r\n                    <p className={\"login-button-text\"}>Iniciar Sesión</p>\r\n                  </Button>\r\n                  <div className={\"for-links\"}>\r\n                    <Link to={routes.forgot_password}>\r\n                      <p className={\"url-form\"}>¿Olvidó su contraseña?</p>\r\n                    </Link>\r\n                    <Link to={routes.home }>\r\n                      <p className={\"url-form\"}>¿Desea Registrarse?</p>\r\n                    </Link>\r\n                  </div>\r\n                </FormItem>\r\n              </div>\r\n            </Form>\r\n            \r\n          </div>\r\n        </div>\r\n        <div className={\"bottom-title\"}>\r\n          Avanzo © 2019\r\n        </div>\r\n        {(isLogged && (role===4)) &&\r\n          <Redirect to={routes.customer}/>\r\n        }\r\n        {(isLogged && (role===3)) &&\r\n          <Redirect to={routes.company_request_management}/>\r\n        }\r\n        {(isLogged && (role===2 || role===1)) &&\r\n          <Redirect to={routes.admin_company_management}/>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  isLogin: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLogin: state.login.isLogin\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (email, password) => dispatch(login(email, password))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LoginForm));\r\n","//Libraries\r\nimport axios from 'axios';\r\n\r\n//Subcomponents\r\nimport BaseURL from \"./BaseURL\";\r\n\r\n/*** Create an Axios Client with defaults ***/\r\nlet client = null;\r\n\r\nexport const initializeClient = function () {\r\n  client = axios.create({\r\n    baseURL: BaseURL,\r\n    headers: { 'Authorization': 'Bearer ' + localStorage.integration_token }\r\n  });\r\n};\r\n\r\ninitializeClient();\r\n\r\n/*** Request Wrapper with default success/error actions ***/\r\nconst request = function (options) {\r\n\r\n  const onSuccess = function (response) {\r\n    //console.info('Request Successful: response: ', response);\r\n    return response;\r\n  };\r\n\r\n  const onError = function (error) {\r\n    console.error('Request Failed: Config Sent:', error.config);\r\n\r\n    if (error.response) {\r\n      console.error('Status:', error.response.status);\r\n      console.error('Data:', error.response.data);\r\n      console.error('Headers:', error.response.headers);\r\n\r\n      if(error.response.status === 500){\r\n        error.response.data = \"Error en el servidor\";\r\n      }\r\n    } else {\r\n      console.error('Error Message:', error.message);\r\n    }\r\n    return Promise.reject(error.response || error.message);\r\n  };\r\n\r\n  return client(options).then(onSuccess).catch(onError);\r\n};\r\n\r\nexport default request;","//Subcomponents\r\nimport request from '../requestWrapper';\r\nimport integrationRequest from '../integrationWrapper';\r\n\r\nfunction getHomeData(){\r\n\r\n  return request({\r\n    url: '/Customer/GetInitialData',\r\n    method: 'GET',\r\n  });\r\n};\r\n\r\nfunction getRequestData(customerId, token) {\r\n  if (token === undefined){\r\n    return request({\r\n      url: '/Customer/GetRequestData',\r\n      method: 'GET',\r\n    });\r\n  }else{   \r\n    return integrationRequest({\r\n      url: '/Customer/GetRequestData',\r\n      method: 'GET',\r\n      headers: { \r\n        'Authorization': 'Bearer ' + token \r\n      }\r\n    });\r\n  }\r\n  \r\n};\r\n\r\nfunction getOutLayData(customerId, token) {\r\n  \r\n  if (token === undefined){\r\n    return request({\r\n      url: '/Request/GetOutlayData',\r\n      method: 'GET',\r\n    });\r\n  }else{\r\n    return integrationRequest({\r\n      url: '/Request/GetOutlayData',\r\n      method: 'GET',\r\n      headers: { \r\n        'Authorization': 'Bearer ' + token \r\n      }\r\n    });\r\n  }  \r\n};\r\n\r\nfunction getOultayDatesList(customerId, split, quantity) {\r\n  return request({\r\n    url: '/Request/GetOultayDatesList',\r\n    method: 'GET',\r\n    headers:{\r\n      customerId: customerId,\r\n      split: split,\r\n      quantity: quantity\r\n    }\r\n  });\r\n};\r\n\r\nfunction generateDocuments(customerId, split, quantity) {\r\n  return request({\r\n    url: '/Documents/Generate',\r\n    method: 'GET',\r\n    headers:{\r\n      customerId: customerId,\r\n      split: split,\r\n      quantity: quantity\r\n    }\r\n  });\r\n};\r\n\r\nfunction createRequest(data, token){\r\n\r\n  var bodyFormData = new FormData();\r\n\r\n  bodyFormData.append('file', data.file);\r\n  bodyFormData.append('quantity', data.quantity);\r\n  bodyFormData.append('split', data.split);\r\n  bodyFormData.append('moyen', data.moyen);\r\n  bodyFormData.append('accountType', data.accountType);\r\n  bodyFormData.append('accountNumber', data.accountNumber);\r\n  bodyFormData.append('isBank', data.isBank); \r\n  bodyFormData.append('interest', data.interest);\r\n  bodyFormData.append('administration', data.interest);\r\n\r\n  if (token === undefined){\r\n    return request({\r\n      url: '/Request/Create',\r\n      method: 'POST',\r\n      data: bodyFormData\r\n    });\r\n  }else{  \r\n    return integrationRequest({\r\n      url: '/Request/Create',\r\n      method: 'POST',\r\n      data: bodyFormData,\r\n      headers: { \r\n        'Authorization': 'Bearer ' + token \r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nfunction getAllTransactions(customerId){\r\n  return request({\r\n    url: '/Transactions/GetTransactionsByUserId',\r\n    method: 'GET',\r\n    headers:{\r\n      customerId: customerId\r\n    }\r\n  });\r\n};\r\n\r\nfunction getAllRequest(customerId){\r\n  return request({\r\n    url: '/Request/GetAll',\r\n    method: 'GET',\r\n    headers:{\r\n      customerId: customerId\r\n    }\r\n  });\r\n}\r\n\r\nfunction getAllRequestWasOutlayed(customerId){\r\n  return request({\r\n    url: '/Request/GetAllWasOutlayed',\r\n    method: 'GET',\r\n    headers:{\r\n      customerId: customerId\r\n    }\r\n  });\r\n}\r\n\r\nfunction getAllRequestWasRejected(customerId){\r\n  return request({\r\n    url: '/Request/GetAllWasRejected',\r\n    method: 'GET',\r\n    headers:{\r\n      customerId: customerId\r\n    }\r\n  });\r\n}\r\n\r\nconst customerService = {\r\n  getHomeData, getRequestData, getOutLayData, getOultayDatesList,\r\n  generateDocuments, createRequest, getAllTransactions, getAllRequest,\r\n  getAllRequestWasOutlayed, getAllRequestWasRejected\r\n};\r\n\r\nexport default customerService;","///Types\r\nimport {customerTypes as C} from '../../types';\r\n\r\n//Services\r\nimport registerService from '../../../../services/customer/registerServices';\r\nimport customerService from '../../../../services/customer/customerServices';\r\n\r\n//Subcomponents\r\nimport { ERROR_MODAL, SUCCESS_MODAL } from '../../../../ui/components/subcomponents/modalMessages';\r\n\r\nexport const getDocumentsTypes = () => {\r\n  return dispatch => {\r\n    return registerService.getDocumentTypes()\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_DOCUMENTS_TYPE,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_DOCUMENTS_TYPE,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer los tipos de documentos', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const register = (data) => {\r\n  return dispatch => {\r\n    return registerService.register(data)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.REGISTER,\r\n          payload: response.data,\r\n          correct: true,\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada exitosamente\", response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.REGISTER,\r\n          payload: err,\r\n          correct: false,\r\n        });\r\n        ERROR_MODAL('Error al registrar el usuario',  err.request.response.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getHomeData = () => {\r\n  return dispatch => {\r\n    return customerService.getHomeData()\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_HOME_DATA,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_HOME_DATA,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la información de inicio', err.data.message);\r\n      });\r\n  };\r\n};\r\n\r\nexport const getRequestData = (customerId, token) => {\r\n  return dispatch => {\r\n    return customerService.getRequestData(customerId, token)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_DATA,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_DATA,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la información particular de la solicitud', err.data.message);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const getOutlayData = (customerId, token) => {\r\n  return dispatch => {\r\n    return customerService.getOutLayData(customerId, token)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_OUTLAY_DATA,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_OUTLAY_DATA,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la información del desembolso', err.data.message);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const getOultayDatesList = (customerId, split, quantity) => {\r\n  return dispatch => {\r\n    return customerService.getOultayDatesList(customerId, split, quantity)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_OUTLAY_DATESLIST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_OUTLAY_DATESLIST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la información de las fechas desembolso.',  err.data.message);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const generateDocuments = (customerId, split, quantity) => {\r\n  return dispatch => {\r\n    return customerService.generateDocuments(customerId, split, quantity)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GENERATE_DOCUMENTS,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GENERATE_DOCUMENTS,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al generar los documentos necesarios.',  err.data.message);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const resetValue = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: C.RESET_VALUES\r\n    });\r\n  }\r\n}\r\n\r\nexport const createRequest = (data, token) => {\r\n  return dispatch => {\r\n    return customerService.createRequest(data, token)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.CREATE_REQUEST,\r\n          payload: response.data,\r\n          correct: true,\r\n        });\r\n        SUCCESS_MODAL('Acción realizada exitosamente', response.data.message);\r\n        dispatch(resetValue());\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.CREATE_REQUEST,\r\n          payload: err,\r\n          correct: false\r\n        });\r\n        ERROR_MODAL('Error al crear la solicitud de préstamo.', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllTransactions = (customerId) => {\r\n  return dispatch => {\r\n    return customerService.getAllTransactions(customerId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_TRANSACTIONS_LIST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_TRANSACTIONS_LIST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de transacciones.', err);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const getAllRequest = (customerId) => {\r\n  return dispatch => {\r\n    return customerService.getAllRequest(customerId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_LIST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_LIST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de solicitudes pendientes.', err.data);\r\n      });\r\n  };\r\n};  \r\n\r\nexport const getAllOutlayedRequest = (customerId) => {\r\n  return dispatch => {\r\n    return customerService.getAllRequestWasOutlayed(customerId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_OUTLAYED_REQUEST_LIST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_OUTLAYED_REQUEST_LIST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de solicitudes desembolsadas.', err.data);\r\n      });\r\n  };\r\n};  ","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { Button, Form, Icon, Input, Col, Row, Modal, Select, InputNumber, DatePicker} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport moment from 'moment';\r\n\r\n//Subcomponents\r\nimport routes from '../../../../configuration/routing/Routes';\r\nimport {ERROR_MODAL} from \"../../subcomponents/modalMessages\";\r\n\r\n//Actions\r\nimport {getDocumentsTypes, register} from \"../../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../../styles/authentication/loginCustomer.css';\r\n\r\n//Assets\r\nimport logo from '../../../assets/authentication/avanzo.jpg';\r\nimport signInBackground from '../../../assets/authentication/background.png';\r\nimport signInBackground2 from  '../../../assets/authentication/background.png';\r\n\r\n//Constants\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass RegisterCustomer extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      isLoading: false,\r\n      captchaSolved: true,\r\n      email: null,\r\n      login: null,\r\n    };\r\n\r\n    this.onSignInClicked = this.onSignInClicked.bind(this);\r\n    this.handleEmail = this.handleEmail.bind(this);\r\n\r\n    this.props.getDocumentsTypes();\r\n\r\n  };\r\n\r\n  onSignInClicked(){\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    this.props.form.validateFields((err, values) => {\r\n      if (err){\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingrese un email y contraseña válidos.\");\r\n      }else{\r\n        values.birthDate = moment(values.birthDate._d).format();\r\n        values.expeditionDate = moment(values.expeditionDate._d).format();\r\n        this.props.register(values);\r\n      }     \r\n    });\r\n  };\r\n\r\n  handleEmail(e){\r\n    this.setState({\r\n      email: e,\r\n    });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Las dos contraseñas no coinciden');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  render(){\r\n    \r\n    let { login } = this.state;\r\n    let { idDocumentsTypes, registerResponse } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <div className=\"div-meeting\">\r\n          <div className='sign-in-background-crop'>\r\n            <img className='sign-in-background' alt='background' src={signInBackground} />\r\n            <img className='background2' alt='background2' src={signInBackground2} />\r\n          </div>\r\n          <Form className='home-form'>        \r\n          <div className='home-logo-div'>\r\n            <div className='home-logo-container'>\r\n              <img className='home-logo' alt='home-logo' src={logo} />\r\n            </div>\r\n          </div>\r\n          <Row gutter={8}>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('name', { initialValue: '',\r\n                  rules: [\r\n                    { required: true, message: 'Por favor, ingrese su(s) nombre(s).' }],\r\n                })(\r\n                    <Input prefix={<Icon type=\"user\" className={'icon-prefix'} />}\r\n                          placeholder=\"Nombres\"/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('lastName', { initialValue: '',\r\n                  rules: [\r\n                    { required: true, message: 'Por favor, ingrese su(s) apellido(s).' }],\r\n                })(\r\n                    <Input prefix={<Icon type=\"user\" className={'icon-prefix'} />}\r\n                          placeholder=\"Apellidos\"/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n          </Row> \r\n          <Row gutter={8}>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n            <FormItem className='home-form-item'>\r\n                {getFieldDecorator('documentType', {\r\n                  rules: [{ required: true, message: 'Por ingrese su tipo de documento' }],\r\n                })(\r\n                  <Select placeholder={'Tipo de documento'} allowClear={true} showSearch={true}\r\n                    notFoundContent={\"No hay tipos de documento disponibles\"}>\r\n                      {idDocumentsTypes.map((type, i) => (\r\n                        <Select.Option key={i} value={type.typeName}>\r\n                          {type.typeName}\r\n                        </Select.Option>))\r\n                      }\r\n                  </Select>)\r\n                }\r\n                </FormItem>\r\n            </Col>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('identificationId', {\r\n                  initialValue: '',\r\n                  rules: [{ required: true, message: 'Por favor ingrese su número de cédula' }],\r\n                })(\r\n                    <InputNumber prefix={<Icon type=\"idcard\" className={'icon-prefix'} />}\r\n                                 placeholder=\"Número de documento\" className={\"input-number\"}/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={8}>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('expeditionDate', {\r\n                  rules: [{ required: true, message: 'Por favor ingrese la fecha de expedición de su documento' }],\r\n                })(\r\n                  <DatePicker placeholder=\"Fecha de expedición\" className={\"input-number\"}/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('birthDate', {\r\n                  rules: [{ required: true, message: 'Por ingrese su fecha de nacimiento' }],\r\n                })(\r\n                    <DatePicker placeholder=\"Fecha de nacimiento\" className={\"input-number\"}/>)}\r\n              </FormItem>\r\n            </Col>\r\n          </Row>          \r\n          <Row gutter={8}>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('email', { initialValue: '',\r\n                  rules: [ \r\n                    {type: 'email', message: 'Por favor, ingrese un correo electrónico válido.'},\r\n                    {required: true, message: 'Por favor, ingrese su correo electrónico.' }],\r\n                })(\r\n                    <Input prefix={<Icon type=\"mail\" className={'icon-prefix'} />}\r\n                          placeholder=\"Correo electrónico\"/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('phoneNumber', {\r\n                  initialValue: '',\r\n                  rules: [{ required: true, message: 'Por favor ingrese el celular' }],\r\n                })(\r\n                <InputNumber prefix={<Icon type=\"phone\" className={'icon-prefix'} />} \r\n                             placeholder=\"Celular\" className={\"input-number\"}/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={8}>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('password', { \r\n                  initialValue: '',\r\n                  rules: [ \r\n                    {required: true, message: 'Por favor, ingrese su contraseña.' }, {min: 6, message: \"Mínimo 6 caracteres.\"},\r\n                    {pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)^(?=.*[!@#\\\\$%\\\\^&.,\\\\*])', message: \"La contraseña debe contener al menos una mayúscula, una minúscula, un número y un caracter especial\"}],\r\n                })(<Input type=\"password\" prefix={<Icon type=\"lock\" className={'icon-prefix'} />}\r\n                          placeholder=\"Contraseña\"/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n            <Col lg={12} md={12} sm={12} xs={12}>\r\n              <FormItem className='home-form-item'>\r\n                {getFieldDecorator('confirmPassword', {\r\n                  initialValue: '',\r\n                  rules: [\r\n                    {required: true, message: 'Confirme la contraseña'},\r\n                    {validator: this.compareToFirstPassword}\r\n                  ],\r\n                })(<Input type=\"password\" prefix={<Icon type=\"lock\" className={'icon-prefix'} />} \r\n                             placeholder=\"Confirme contraseña\" className={\"input-number\"}/>\r\n                )}\r\n              </FormItem>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <div className={'home-buttons-div'}>\r\n            <Row gutter={24}>\r\n              <Col lg={12} md={12} sm={12} xs={24} xxs={24} className={\"register-col\"}>\r\n                <Button className={\"register-button\"}  onClick={() => this.onSignInClicked()}\r\n                        icon=\"user-add\">\r\n                  Registrarse\r\n                </Button>\r\n              </Col>\r\n              <Col lg={12} md={12} sm={12} xs={24} xxs={24} className={\"login-col\"}>\r\n                <Button type=\"primary\" className={\"login-button\"} onClick={() => this.setState({login: true})}\r\n                      icon=\"login\" loading={false}>\r\n                    Iniciar sesión\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            \r\n          </div>\r\n          <Modal\r\n            title={\"Términos y Condiciones\"}\r\n            visible={this.state.visibleTermModal}\r\n            onCancel={() => this.setState({visibleTermModal: false})}\r\n            footer={\r\n              <Button key='submit' type='primary' onClick={() => this.setState({visibleTermModal: false})}>\r\n                Aceptar\r\n              </Button>}\r\n          >\r\n            <div>\r\n              <p dangerouslySetInnerHTML={{ __html: this.props.terms }}/>\r\n            </div>\r\n          </Modal>\r\n        </Form>    \r\n\r\n          {\r\n            (login) && \r\n            <Redirect to={routes.login}/>\r\n          }\r\n          {\r\n            (registerResponse) && \r\n            <Redirect to={routes.confirm_account}/>\r\n          }\r\n        </div> \r\n    );\r\n  \r\n  };\r\n  \r\n}\r\n\r\nRegisterCustomer.propTypes = {\r\n  idDocumentsTypes: PropTypes.array,\r\n  registerResponse: PropTypes.bool,\r\n  registerDataResponse: PropTypes.object,\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    idDocumentsTypes: state.customer.idDocumentsTypes,\r\n    registerResponse: state.customer.registerResponse,\r\n    registerDataResponse: state.customer.registerDataResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getDocumentsTypes: () => dispatch(getDocumentsTypes()),\r\n    register: (data) => dispatch(register(data)),\r\n  }\r\n};\r\n\r\nlet WrappedRegisterCustomer = Form.create()(RegisterCustomer);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegisterCustomer);\r\n","//Libraries\r\nimport {Form, Icon, Button} from 'antd';\r\nimport {Redirect, NavLink} from \"react-router-dom\";\r\nimport React, {Component} from 'react';\r\n\r\n//Subcomponents\r\nimport routes from \"../../../configuration/routing/Routes\";\r\n\r\n//Actions\r\nimport { SUCCESS_MODAL } from '../subcomponents/modalMessages';\r\n\r\n//Assets\r\nimport secondIcon from \"../../assets/authentication/avanzo.jpg\";\r\n\r\n//Constants\r\nconst FormItem = Form.Item;\r\n\r\nclass ConfirmedAccount extends Component {\r\n\r\n  constructor(props) {\r\n\r\n    super(props);\r\n\r\n    this.state={\r\n      loading: false,\r\n      requestSent: false,\r\n      modal: false,\r\n    };\r\n\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const accountInfo = {\r\n          email: values.email\r\n        };\r\n        this.props.recoverPassword(accountInfo);\r\n        this.setState({requestSent: true});\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  sendMessage = (e) => {\r\n    SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", \"Se ha enviado un correo electrónico con las instrucciones necesarias para restablecer la contraseña.\")\r\n  };\r\n\r\n  render() {\r\n\r\n    //const { getFieldDecorator } = this.props.form;\r\n    const {requestSent} = this.state;\r\n\r\n    return (\r\n        <div>\r\n          <div className=\"div-logo\">\r\n            <img src={secondIcon} alt=\"icon\" className={\"logo-confirmed\"} />\r\n          </div>\r\n          <div className={\"login-card-confirmed\"}>\r\n            <div className=\"login-form\">\r\n              <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                <div className={\"confirm_account\"}>\r\n                  <div className={\"confirm_account_text\"}>\r\n                      <p><Icon className='question-button' type='check-circle'/>Has sido registrado exitosamente. Luego del proceso de aprobación interno, será enviado un correo que permitirá realizar la confirmación de la cuenta.</p>\r\n                      <p>Luego de que se realice la validación, podrás iniciar sesión con tu correo y contraseña.</p>\r\n                  </div>\r\n                </div>\r\n                <FormItem className={\"submit\"}>\r\n                  <NavLink to={routes.login} >\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" >\r\n                      <p className={\"login-button-text\"}>Iniciar sesión</p>\r\n                    </Button>\r\n                  </NavLink>\r\n                </FormItem>\r\n\r\n              </Form>\r\n            </div>\r\n            \r\n          {requestSent === true &&\r\n            <Redirect to={routes.login}/>\r\n          }\r\n        </div>\r\n        <div className={\"bottom-title\"}>\r\n          Avanzo © 2019\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default (ConfirmedAccount);","//Subcomponents\r\nimport request from '../requestWrapper';\r\n\r\nfunction registerAdmin(data) {\r\n  return request({\r\n    url: '/Account/RegisterAdministrator',\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n};\r\n\r\nfunction createCompany(data){\r\n  return request({\r\n    url: '/Company/Create',\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n};\r\n\r\nfunction updateCompany(data){\r\n  return request({\r\n    url: '/Company/Update',\r\n    method: 'PUT',\r\n    data: data\r\n  });\r\n};\r\n\r\nfunction createCustomer(data){\r\n  return request({\r\n    url: '/Customer/Create',\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n};\r\n\r\nfunction updateCustomer(data){\r\n  return request({\r\n    url: '/Customer/Update',\r\n    method: 'PUT',\r\n    data: data\r\n  });\r\n};\r\n\r\nfunction activateCustomer(clientId, status){\r\n  return request({\r\n    url: '/Customer/ChangePlatformStatus',\r\n    method: 'GET',\r\n    headers:{\r\n      clientId: clientId,\r\n      status: status\r\n    }\r\n  });\r\n};\r\n\r\nfunction createMultipleCustomer(data){\r\n  return request({\r\n    url: '/Customer/CreateMultiple',\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n};\r\n\r\n\r\nfunction activateCompany(companyid, status){\r\n  return request({\r\n    url: '/Company/ChangePlatformStatus',\r\n    method: 'PUT',\r\n    headers:{\r\n      companyid: companyid,\r\n      status: status\r\n    }\r\n  });\r\n};\r\n\r\n\r\n\r\nfunction getAllRequest(userId){\r\n  return request({\r\n    url: '/Request/GetAllByAdmin',\r\n    method: 'GET',\r\n    headers:{\r\n      userId: userId\r\n    }\r\n  });\r\n};\r\n\r\nfunction getAllRequestToOutLay(userId){\r\n  return request({\r\n    url: '/Request/GetAllToOutLayByAdmin',\r\n    method: 'GET',\r\n    headers:{\r\n      userId: userId\r\n    }\r\n  });\r\n};\r\n\r\nfunction getAllRequestToApprove(){\r\n  return request({\r\n    url: '/Request/GetToApproveByAdmin',\r\n    method: 'GET'\r\n  });\r\n};\r\n\r\nfunction getAllCompanies(){\r\n  return request({\r\n    url: '/Company/GetAll',\r\n    method: 'GET'\r\n  });\r\n};\r\n\r\nfunction getAllCompaniesWithSalaries(companyid){\r\n  return request({\r\n    url: '/Company/GetWithSalaries',\r\n    method: 'GET',\r\n    headers:{\r\n      companyid: companyid\r\n    }\r\n  });\r\n  \r\n}\r\n\r\nfunction getAllCustomers(){\r\n  return request({\r\n    url: '/Customer/GetAllWithCompany',\r\n    method: 'GET'\r\n  });\r\n};\r\n\r\nfunction getAllCustomersToApprove(){\r\n  return request({\r\n    url: '/Customer/GetAllToApprove',\r\n    method: 'GET'\r\n  });\r\n};\r\n\r\nfunction approveCustomer(client, approve){\r\n  return request({\r\n    url: '/Customer/ApproveorReject',\r\n    method: 'PUT',\r\n    headers:{\r\n      clientId: parseInt(client, 10),\r\n      approve: approve\r\n    }\r\n  });\r\n};\r\n\r\nconst adminService = {\r\n  registerAdmin, createCompany, createCustomer, createMultipleCustomer, \r\n  getAllRequest, getAllRequestToOutLay, getAllRequestToApprove, getAllCompanies, getAllCustomers,\r\n  getAllCustomersToApprove, approveCustomer, updateCompany, activateCustomer, updateCustomer,\r\n  getAllCompaniesWithSalaries, activateCompany\r\n};\r\n\r\nexport default adminService;","///Types\r\nimport {adminTypes as C} from '../../types';\r\n\r\n//Services\r\nimport adminServices from '../../../../services/admin/adminServices';\r\n\r\n//Subcomponents\r\nimport { ERROR_MODAL, SUCCESS_MODAL, CONFIRM_MODAL } from '../../../../ui/components/subcomponents/modalMessages';\r\n\r\nexport const resetValue = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: C.RESET_VALUES\r\n    });\r\n  }\r\n}\r\n\r\nexport const registerAdmin = (data) => {\r\n  return dispatch => {\r\n    return adminServices.registerAdmin(data)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.REGISTER_ADMIN,\r\n          payload: true\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.REGISTER_ADMIN,\r\n          payload: false,\r\n        });\r\n        if(err.data){\r\n          ERROR_MODAL('Error al registrar el administrador', err.data.message);\r\n        }\r\n      });\r\n  }\r\n};\r\n\r\nexport const createCompany = (data) => {\r\n  return dispatch => {\r\n    return adminServices.createCompany(data)\r\n      .then(response => {\r\n        dispatch(getAllCompanies());\r\n        dispatch({\r\n          type: C.CREATE_COMPANY,\r\n          payload: response.data,\r\n          correct: true,\r\n        });\r\n        //SUCCESS_MODAL('Acción realizada exitosamente', response.data.message);\r\n        CONFIRM_MODAL('Acción realizada exitosamente', response.data.message);\r\n      }).catch(err => {\r\n        console.log(\"Error\", err);\r\n        dispatch({\r\n          type: C.CREATE_COMPANY,\r\n          payload: err,\r\n          correct: false,\r\n        });\r\n        ERROR_MODAL('Error al crear la empresa', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const updateCompany = (data) => {\r\n  return dispatch => {\r\n    return adminServices.updateCompany(data)\r\n      .then(response => {\r\n        dispatch(getAllCompanies());\r\n        dispatch({\r\n          type: C.UPDATE_COMPANY,\r\n          payload: response.data,\r\n          correct: true,\r\n        });\r\n        SUCCESS_MODAL('Acción realizada exitosamente', response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.UPDATE_COMPANY,\r\n          payload: err,\r\n          correct: false,\r\n        });\r\n        ERROR_MODAL('Error al editar la empresa', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const createCustomer = (data) => {\r\n  return dispatch => {\r\n    return adminServices.createCustomer(data)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.CREATE_CUSTOMER,\r\n          payload: response.data,\r\n          correct: true,\r\n        });\r\n        //SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El cliente ha sido creado satisfactoriamente\");\r\n        CONFIRM_MODAL(\"Acción realizada exitosamente\", \"El cliente ha sido creado satisfactoriamente\");\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.CREATE_CUSTOMER,\r\n          payload: err,\r\n          correct: false,\r\n        });\r\n        ERROR_MODAL('Error al crear el cliente', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const updateCustomer = (data) => {\r\n  return dispatch => {\r\n    return adminServices.updateCustomer(data)\r\n      .then(response => {\r\n        dispatch(getAllCustomers());\r\n        dispatch({\r\n          type: C.UPDATE_CUSTOMER,\r\n          payload: response.data\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El cliente ha sido actualizado satisfactoriamente\");\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.UPDATE_CUSTOMER,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al actualizar el cliente', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const activateCustomer = (clientId, status) => {\r\n  return dispatch => {\r\n    return adminServices.activateCustomer(clientId, status)\r\n      .then(response => {\r\n        dispatch(getAllCustomers());\r\n        dispatch({\r\n          type: C.ACTIVATE_CUSTOMER,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.ACTIVATE_CUSTOMER,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al activar el cliente', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const activateCompany = (clientId, status) => {\r\n  return dispatch => {\r\n    return adminServices.activateCompany(clientId, status)\r\n      .then(response => {\r\n        dispatch(getAllCompanies());\r\n        dispatch({\r\n          type: C.ACTIVATE_COMPANY,\r\n          payload: response.data\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", response.data.message);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.ACTIVATE_COMPANY,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al activar la empresa.', err.data);\r\n      });\r\n  }\r\n};\r\n\r\n\r\nexport const createMultipleCustomer = (data) => {\r\n  return dispatch => {\r\n    return adminServices.createMultipleCustomer(data)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.CREATE_MULTIPLE_CUSTOMER,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.CREATE_MULTIPLE_CUSTOMER,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al crear múltiples clientes', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllRequest = (userId) => {\r\n  return dispatch => {\r\n    return adminServices.getAllRequest(userId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_LIST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_LIST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de solicitudes', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllRequestToApprove = () => {\r\n  return dispatch => {\r\n    return adminServices.getAllRequestToApprove()\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_TO_APPROVE,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_TO_APPROVE,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de solicitudes para aprobar', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllRequestToOutLay = (userId) => {\r\n  return dispatch => {\r\n    return adminServices.getAllRequestToOutLay(userId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_TO_OUTLAY,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_REQUEST_TO_OUTLAY,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de solicitudes para desembolsar', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllCompanies = ( ) => {\r\n  return dispatch => {\r\n    return adminServices.getAllCompanies( )\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_ALL_COMPANIES,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_ALL_COMPANIES,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de empresas', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getCompanyWithSalary = (companyid) => {\r\n  return dispatch => {\r\n    return adminServices.getAllCompaniesWithSalaries(companyid)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_COMPANY_WITH_SALARY,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_COMPANY_WITH_SALARY,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la información de la empresa', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllCustomers = ( ) => {\r\n  return dispatch => {\r\n    return adminServices.getAllCustomers( )\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_ALL_CUSTOMERS,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_ALL_CUSTOMERS,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de clientes', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllCustomersToApprove = ( ) => {\r\n  return dispatch => {\r\n    return adminServices.getAllCustomersToApprove( )\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_CUSTOMERS_TO_APPROVE,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_CUSTOMERS_TO_APPROVE,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de clientes', err.data);\r\n      });\r\n  }\r\n};\r\n\r\nexport const approveCustomers = (client, approve) => {\r\n  return dispatch => {\r\n    return adminServices.approveCustomer(client, approve)\r\n      .then(response => {\r\n        dispatch(getAllCustomersToApprove());\r\n        dispatch({\r\n          type: C.APPROVE_CUSTOMERS,\r\n          payload: response.data\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada satisfactoriamente\", response.data);\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.APPROVE_CUSTOMERS,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al modificar el estado del cliente', err.data);\r\n      });\r\n  }\r\n};","//Libraries\r\nimport {Form, Icon, Input, Button} from 'antd';\r\nimport React, {Component} from 'react';\r\nimport { Redirect } from \"react-router\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\n//Assets\r\nimport secondIcon from \"../../../assets/authentication/avanzo.jpg\"\r\n\r\n//Subcomponents\r\nimport {ERROR_MODAL} from \"../../subcomponents/modalMessages\";\r\nimport routes from \"../../../../configuration/routing/Routes\";\r\n\r\n//Actions\r\nimport {registerAdmin} from \"../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Constants\r\nconst FormItem = Form.Item;\r\n\r\nclass Register extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loading: false,\r\n      names: null,\r\n      username: null,\r\n      description: null,\r\n      email: null,\r\n      password: null,\r\n      loginError: null,\r\n    };\r\n\r\n    this.onChangeValue = this.onChangeValue.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    //this.handleSubmit = this.handleSubmit.bind(this);\r\n  };\r\n\r\n  onChangeValue(value, param){\r\n    let modifier = this.state;\r\n    modifier[param] = value.target.value;\r\n    if(param !== \"\"){\r\n      this.setState({\r\n        state: modifier\r\n      });\r\n    }else{\r\n      ERROR_MODAL(\"Acción erronea\", \"Los valores ingresados están incompletos o están vacíos.\")\r\n    }\r\n  };\r\n\r\n  onChangeEmail(e){\r\n    this.setState({\r\n      email: e,\r\n    });\r\n  };\r\n\r\n  onChangePassword(e){\r\n    this.setState({\r\n      email: e,\r\n    });\r\n  };\r\n\r\n  onSignInClicked(){\r\n    this.props.form.validateFields((err, values) => {\r\n      if (err){\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingrese un email y contraseña válidos.\");\r\n      }else{\r\n        \r\n        let data = values;\r\n        let nameSplit = values.name.split(\" \");\r\n        data.name = nameSplit[0];\r\n        data.lastName = nameSplit[1];\r\n        data.confirmationPassword = values.password;\r\n        this.props.registerAdmin(data);\r\n      }     \r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    //let { login } = this.state;\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"div-logo\">\r\n          <img src={secondIcon} alt=\"icon\" className=\"logo\" />\r\n        </div>\r\n        <div className={\"login-card\"}>\r\n          <div className=\"login-form\">\r\n            <Form className=\"login-form\">\r\n              <div>\r\n                <br/>\r\n                <FormItem>\r\n                  {getFieldDecorator('name', {\r\n                    rules: [{ required: true, message: 'Ingrese sus nombres y apellidos, por favor.' }],\r\n                  })(\r\n                    <Input prefix={<Icon type=\"user\" className={\"field-icon\"} />} placeholder=\"Nombre - Apellido\"/>)\r\n                  }\r\n                </FormItem>\r\n                <FormItem>\r\n                  {getFieldDecorator('identificationId', {\r\n                    rules: [{ required: true, message: 'Ingrese su número de identificación, por favor.' }],\r\n                  })(\r\n                    <Input prefix={<Icon type=\"number\" className={\"field-icon\"} />} placeholder=\"Número de identificación\"/>)\r\n                  }\r\n                </FormItem>\r\n                <FormItem>\r\n                  {getFieldDecorator('email', { initialValue: '',\r\n                    rules: [\r\n                      {type: \"email\", message: \"Ingrese un correo válido, por favor.\"},\r\n                      {required: true, message: 'Por favor, ingrese su correo electrónico.'}],\r\n                  })(\r\n                    <Input prefix={<Icon type=\"mail\" className={\"field-icon\"} />} placeholder=\"Email\"/>\r\n                  )}\r\n                </FormItem>\r\n                <FormItem>\r\n                  {getFieldDecorator('password', {\r\n                    rules: [{ required: true, message: 'Por ingrese su contraseña' }],\r\n                  })(\r\n                  <Input prefix={<Icon type=\"lock\" className={\"field-icon\"} />} type=\"password\" placeholder=\"Contraseña\"/>)\r\n                  }\r\n                </FormItem>\r\n                \r\n                <FormItem className={\"submit\"}>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" \r\n                          onClick={() => this.onSignInClicked()}>\r\n                    <p className={\"login-button-text\"}>Registrarse</p>\r\n                  </Button>\r\n                  <div className={\"for-links\"}>\r\n                    <Link to={routes.login}>\r\n                      <p className={\"url-form\"}>Iniciar sesión</p>\r\n                    </Link>\r\n                  </div>\r\n                </FormItem>\r\n              </div>\r\n            </Form>\r\n            \r\n          </div>\r\n        </div>\r\n        <div className={\"bottom-title\"}>\r\n          Avanzo © 2019\r\n        </div>\r\n        {\r\n          (this.props.registerAdminResponse) && \r\n          <Redirect to={routes.login}/>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerAdminResponse: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    registerAdminResponse: state.admin.registerAdminResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    registerAdmin: (data) => dispatch(registerAdmin(data)),\r\n  }\r\n};\r\n\r\nlet WrappedRegisterAdmin = Form.create()(Register);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegisterAdmin);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Card, Row, Col, Layout, Menu, Form, Input, Icon, Button, Select, Checkbox, Modal} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\n//Subcomponents\r\nimport routes from '../../../configuration/routing/Routes';\r\n\r\n//Actions\r\nimport {newRegister, getCompanies} from \"../../../store/redux/actions/general/loginActions\";\r\n\r\n//Assets\r\nimport icon from \"../../assets/authentication/avanzoMenu.jpg\";\r\nimport home from \"../../assets/home2.PNG\";\r\n\r\n//Styles\r\nimport '../../styles/home/home.css'\r\nimport { ERROR_MODAL, WARNING_MODAL, allowEmergingWindows } from '../subcomponents/modalMessages';\r\n\r\n//Functions\r\n/*function format(d) {\r\n  var formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  });\r\n\r\n  return formatter.format(d);\r\n};*/\r\n\r\n//Constants\r\nconst { Header } = Layout;\r\nconst FormItem = Form.Item;\r\n//const { Dragger } = Upload;\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      documentId: null,\r\n      photo: null,\r\n      paymentReport: null,\r\n      sliderValue: 300000,\r\n      login: null,\r\n      checkBox1: false,\r\n      visibleTermModal: false,\r\n      clicked: false,\r\n    };\r\n    \r\n    this.next = this.next.bind(this);\r\n    this.previous = this.previous.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.handleSliderChange = this.handleSliderChange.bind(this);\r\n    this.carousel = React.createRef();\r\n\r\n    this.props.getCompanies();\r\n\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // You don't have to do this check first, but it can help prevent an unneeded render\r\n    if (prevProps.newRegisterResponse !== this.props.newRegisterResponse) {\r\n      this.setState({ clicked: null });\r\n    }\r\n  }\r\n\r\n  next() {\r\n    this.carousel.next();\r\n  };\r\n\r\n  previous() {\r\n    this.carousel.prev();\r\n  };\r\n\r\n  onSignInClicked(){\r\n    //console.log(\"entro\");\r\n    let { documentId, photo, paymentReport, checkBox1 } = this.state;\r\n    this.props.form.validateFields((err, values) => {\r\n      if (err ){\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor, ingresa datos válidos, carga los archivos correspondientes y acepta los términos y condiciones.\");\r\n      }else if(documentId === null && photo === null && paymentReport === null ){\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor, carga los archivos correspondientes.\");\r\n      }else if(checkBox1 === false ){\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor, acepta los términos y condiciones.\");\r\n      }else{\r\n        if(documentId !== null && photo !== null && paymentReport !== null ){\r\n  \r\n          if(values.password !== values.confirmPassword){\r\n            WARNING_MODAL(\"Las contraseñas no coinciden\");\r\n          }else if(values.phoneNumber.toString()[0] !== \"3\" || values.phoneNumber.toString().length !== 10 ){\r\n            ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingresa un número de teléfono válido.\");\r\n          }else{\r\n            \r\n            let data = values;\r\n            data.documentId = documentId;\r\n            data.photo = photo;\r\n            data.documentId = documentId;\r\n            data.paymentReport = paymentReport;\r\n            data.sliderValue = this.state.sliderValue;\r\n            \r\n            //Actions\r\n            this.props.newRegister(data);\r\n          }\r\n        }else{\r\n          ERROR_MODAL(\"Error al realizar la acción\", \"Alguno de los archivos no ha sido cargado correctamente.\");\r\n        }\r\n\r\n      }     \r\n    });\r\n  };\r\n\r\n  handleSliderChange = (e) => {\r\n    this.setState({\r\n      sliderValue: Math.round(e),\r\n    });\r\n  };\r\n\r\n  onChange(e) {\r\n    //let { documentId, photo, paymentReport } = this.state;\r\n    let fileType = e.target.files;\r\n    for (let file in fileType){\r\n      //console.log(file===0);\r\n      if(parseInt(file,10) === 0){\r\n        this.setState({\r\n          documentId: fileType[0]\r\n        });\r\n      }\r\n      if(parseInt(file,10) === 1){\r\n        this.setState({\r\n          photo: fileType[1]\r\n        });\r\n      }\r\n      if(parseInt(file,10) === 2){\r\n        this.setState({\r\n          paymentReport: fileType[2]\r\n        });\r\n      }\r\n    }\r\n    //console.log(fileType);\r\n    /*if (status !== 'uploading') {\r\n      //console.log(info.file, info.fileList);\r\n    }\r\n    if (status === 'done') {\r\n      message.success(`${info.file.name} file uploaded successfully.`);\r\n    } else if (status === 'error') {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }*/\r\n  };\r\n\r\n  onChangeField(e, param){\r\n    let partner = this.state.partner;\r\n    if(param !== \"checkBox1\"){\r\n      this.setState({\r\n        [param]: e.target.value\r\n      });\r\n    }else{\r\n      this.setState({\r\n        checkBox1: e.target.checked\r\n      });\r\n    }\r\n    this.setState({\r\n      partner: partner\r\n    });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Las dos contraseñas no coinciden');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  onChangeName = (rule, value, callback) => {\r\n    //const { value } = e.target;\r\n    //const reg = /^-?[0-9]*(\\.[0-9]*)?$/;\r\n    const reg = /[^a-zA-Z\\s]$/;\r\n    if ((!isNaN(value) && reg.test(value)) || value === '' || value === '-') {\r\n      callback('Ingresa los nombres correctamente.');\r\n    }else{\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validationLetters = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^a-zA-Z\\s]$/g, '');\r\n  };\r\n\r\n  validationNumbers = (e) => {\r\n    const input = e.target.value\r\n    e.target.value = input.replace(/[^0-9]/g, '')\r\n  };\r\n\r\n  openTermsandConditions = () => {\r\n    this.setState({\r\n      visibleTermModal: true\r\n    });\r\n    \r\n    let file1 = \"https://drive.google.com/open?id=1QmZLrbxljJAcsHqY9EOL8epl6-wPLloj\";\r\n    //let baseURL = \"http://3.133.128.42:4000/\";\r\n    let file2 = \"https://drive.google.com/open?id=1tW9L5Mg7mKxfhZdwR2QqcAvJNnc8PXev\";\r\n\r\n    if (file1 !== null && file2 !== null) {\r\n      let newWindow = window.open(file1, \"_blank\");\r\n      let newWindow1 = window.open(file2, \"_blank\");\r\n      if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined' ||\r\n          !newWindow1 || newWindow1.closed || typeof newWindow1.closed === 'undefined'){\r\n        allowEmergingWindows();\r\n      }\r\n    }else {\r\n      WARNING_MODAL('Advertencia', 'Los términos y condiciones no están disponibles. Intenta más tarde.');\r\n    }\r\n\r\n    this.setState({\r\n      visibleTermModal: true\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    /*const marks = {0: { style: { color: '#000', }, label: <p className={\"left-marker\"}>$80.000</p>},\r\n                   100: { style: { color: '#1c77ff', }, label: <p className={\"right-marker\"}>$300.000</p>}};*/\r\n    const { getFieldDecorator } = this.props.form;\r\n    let { companyList } = this.props;\r\n\r\n    return (\r\n      <div >\r\n        <Layout>\r\n          <Header className={\"header-menu1\"} >         \r\n            <Menu\r\n              mode=\"horizontal\"\r\n              className={\"menu-home-style\"}>\r\n                <Menu.Item>\r\n                  <img src={icon} alt=\"menulogo\" className=\"menu-logo\" />\r\n                </Menu.Item>\r\n                <Menu.Item className={\"login-menu-item\"}>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"home-login-button\" \r\n                            onClick={() => this.setState({login: true})}>Iniciar sesión</Button>\r\n                </Menu.Item>\r\n            </Menu>\r\n          </Header>\r\n          <Layout>\r\n            <Row className={\"home-main-row\"}>\r\n              <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n                <Card className={\"customer-home-card\"}>\r\n                  <span className={\"home-first-text\"}>Llena estos datos con tus campos personales y nos pondremos en contacto contigo.</span> \r\n                  <Row className={\"home-second-row\"}>\r\n                    <Col xxl={12} lg={12} md={12} sm={24} xs={24}>\r\n                      <img src={home} alt=\"homes\" className=\"home-img\" />\r\n                      <br/>\r\n                    </Col>\r\n                    <Col xxl={12} lg={12} md={12} sm={24} xs={24}>\r\n                      <Form className={\"form-home\"}> \r\n                      <Row gutter={4}>      \r\n                        <Col lg={12} md={12} sm={12} xs={12}>\r\n                          <p className={\"form-names\"}>Nombres</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('name', { initialValue: '',\r\n                              rules: [\r\n                                { required: true, message: 'Por favor, ingrese su(s) nombre(s).' }],\r\n                            })(\r\n                                <Input onChange={this.validationLetters} maxLength={21} className={\"input-box\"} prefix={<Icon type=\"user\" className={'icon-prefix'} />}\r\n                                      placeholder=\"Nombres\"/>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col lg={12} md={12} sm={12} xs={12}>\r\n                          <p className={\"form-names\"}>Apellidos</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('lastName', { initialValue: '',\r\n                              rules: [\r\n                                { required: true, message: 'Por favor, ingrese su(s) apellido(s).' }],\r\n                            })(\r\n                                <Input onChange={this.validationLetters} maxLength={21} prefix={<Icon type=\"user\" className={'icon-prefix'} />}\r\n                                      placeholder=\"Apellidos\"/>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={4}>      \r\n                        <Col lg={12} md={12} sm={12} xs={12}>\r\n                          <p className={\"form-names\"}>Cédula</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('identificationId', {\r\n                              initialValue: '',\r\n                              rules: [{ required: true, message: 'Por favor ingrese su número de cédula' }],\r\n                            })(\r\n                                <Input onChange={this.validationNumbers} maxLength={12}  prefix={<Icon type=\"idcard\" className={'icon-prefix'} />}\r\n                                            placeholder=\"Número de documento\" className={\"input-number\"}/>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col lg={12} md={12} sm={12} xs={12}>\r\n                          <p className={\"form-names\"}>Número de celular</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('phoneNumber', {\r\n                              initialValue: '',\r\n                              rules: [{ required: true, message: 'Por favor ingrese el celular' }],\r\n                            })(\r\n                            <Input onChange={this.validationNumbers} maxLength={10} placeholder=\"Número de celular\"\r\n                                className={\"input-number\"}/>\r\n                                )}\r\n                          </FormItem>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={4}>\r\n                        <Col lg={24} md={12} sm={24} xs={24}>\r\n                          <p className={\"form-names\"}>Correo Electrónico</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('email', { initialValue: '',\r\n                              rules: [ \r\n                                {type: 'email', message: 'Por favor, ingrese un correo electrónico válido.'},\r\n                                {required: true, message: 'Por favor, ingrese su correo electrónico.' }],\r\n                            })(\r\n                                <Input maxLength={35} prefix={<Icon type=\"mail\" className={'icon-prefix'} />}\r\n                                      placeholder=\"Correo electrónico\"/>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={4}>\r\n                        <Col lg={24} md={12} sm={24} xs={24}>\r\n                          <p className={\"form-names\"}>Empresa</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('company', {\r\n                              rules: [ \r\n                                {required: true, message: 'Por favor, ingrese su empresa.' }],\r\n                            })(\r\n                              <Select placeholder=\"Selecciona tu empresa\" allowClear={true} showSearch={true}\r\n                                notFoundContent={\"No hay empresas disponibles\"}>\r\n                                {companyList.map((type, i) => (\r\n                                  <Select.Option key={i} value={type.idCompany}>\r\n                                    {type.socialReason}\r\n                                  </Select.Option>))\r\n                                }\r\n                              </Select>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row gutter={4}>\r\n                        <Col lg={12} md={10} sm={24} xs={24}>\r\n                          <p className={\"form-names\"}>Contraseña</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('password', { initialValue: '',\r\n                              rules: [ \r\n                                {required: true, message: 'Por favor, ingrese una contraseña válida.' }],\r\n                            })(\r\n                                <Input maxLength={20} type=\"password\"  prefix={<Icon type=\"lock\" className={'icon-prefix'} />}\r\n                                      placeholder=\"Contraseña\"/>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col lg={12} md={12} sm={24} xs={24}>\r\n                          <p className={\"form-names\"}>Confirmar contraseña</p>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('confirmPassword', { initialValue: '',\r\n                              rules: [ \r\n                                {required: true, message: 'Por favor, ingrese una contraseña válida.' },\r\n                                {validator: this.compareToFirstPassword}\r\n                              ],\r\n                            })(\r\n                                <Input maxLength={20} type=\"password\"  prefix={<Icon type=\"lock\" className={'icon-prefix'} />}\r\n                                      placeholder=\"Confirmar contraseña\"/>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                      </Row>\r\n                      \r\n                      <Row className={\"upload-documents\"}>\r\n                        <Col xs={24} sm={24} md={24} lg={24}>\r\n                          <p className={\"form-names\"}>Cargar cédula, foto y comprobante de pago</p>\r\n                          <input key={this.state.kBK} type=\"file\" multiple=\"multiple\" onChange={this.onChange}\r\n                                accept=\".pdf, application/pdf\"/>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <FormItem className='home-form-item'>\r\n                          {getFieldDecorator('checkBox1', { initialValue: '',\r\n                            rules: [\r\n                              { required: true, message: 'Por favor, acepta los términos y condiciones.' }],\r\n                            })(\r\n                              <Row>\r\n                                <Col lg={24} md={23} >\r\n                                  <Row gutter={2}>\r\n                                    <Col lg={2} md={2} sm={2} xs={2} className={\"checkbox-terms-firstCol\"}>\r\n                                      <Checkbox className={'checkbox-terms-conditions'} onChange={(e) => this.onChangeField(e, 'checkBox1')}/>\r\n                                    </Col>\r\n                                    <Col lg={22} md={22} sm={22} xs={22}>\r\n                                      <span onClick={() => this.openTermsandConditions()} className={\"form-names-terms\"}>{\"\"} Acepto los <u>Términos, Condiciones de uso y Autorización de tratamiento de datos.</u></span>\r\n                                    </Col>\r\n                                  </Row>\r\n                                </Col>\r\n                              </Row>\r\n                          )}\r\n                        </FormItem>\r\n                      </Row>\r\n                      \r\n                      <Row className={\"button-home-row\"}>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className={\"home-form-button\"}\r\n                                onClick={() => this.onSignInClicked()}>\r\n                          <p className={\"login-button-text\"}>Enviar datos</p>\r\n                        </Button>\r\n                      </Row>\r\n                      <Modal\r\n                        title={\"Términos y condiciones de uso de la página web - Autorización de la política de tratamiento de datos\"}\r\n                        visible={this.state.visibleTermModal}\r\n                        width={600}\r\n                        onCancel={() => this.setState({visibleTermModal: false})}\r\n                        footer={\r\n                          <Button key='submit' type='primary' disabled={this.state.clicked && this.props.newRegisterResponse === null} loading={this.state.clicked } onClick={() => this.setState({visibleTermModal: false, clicked: true})}>\r\n                            Aceptar\r\n                          </Button>}>\r\n                        <div>\r\n                          <p className={\"terms-conditions\"}>\r\n                             <br/>\r\n                             AVANZO solicita a los visitantes y usuarios de la página web la lectura de los términos, las condiciones de uso de la página web y la autorización de tratamiento de datos antes de iniciar su\r\n                             navegación o utilizar los servicios ofrecidos a través de este portal web. El acceso y navegación en la página web,\r\n                             así como el registro en la plataforma tecnológica de AVANZO, se encuentra precedido de un “click” en el botón Aceptar,\r\n                             lo cual constituye el conocimiento de la autorización del tratamiento de datos y la aceptación expresa del <b>usuario </b>\r\n                             de estos términos y condiciones. \r\n                             <br/><br/>\r\n                             En caso de no estar de acuerdo con estas condiciones sugerimos al visitante y usuario que se abstenga de acceder o navegar por la página web.\r\n                             <br/>\r\n                            </p>\r\n                        </div>\r\n                      </Modal>\r\n                    </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Layout>\r\n        </Layout>\r\n        \r\n        {\r\n          (this.props.newRegisterResponse === true) &&\r\n          <Redirect to={routes.confirm_account}/> \r\n        }\r\n\r\n        \r\n        {\r\n          (this.state.login === true) &&\r\n          <Redirect to={routes.login}/> \r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  newRegisterResponse: PropTypes.bool,\r\n  companyList: PropTypes.array\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    newRegisterResponse: state.login.newRegisterResponse,\r\n    companyList: state.login.companyList\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    newRegister: (customerId) => dispatch(newRegister(customerId)),\r\n    getCompanies: ( ) => dispatch(getCompanies( ))\r\n  }\r\n};\r\n\r\nlet WrappedHome = Form.create()(Home);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedHome);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Form, Layout} from 'antd';\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport {Redirect} from \"react-router\";\r\n\r\n//Subcomponents\r\nimport ConfirmResetPassword from './password/ConfirmedPassword';\r\n//import ResetPassword from './password/ResetPassword';\r\nimport ForgotPassword from \"./password/ForgotPassword\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport CustomerRegister from \"./register/RegisterCustomer\";\r\nimport ConfirmAccount from \"./ConfirmedAccount\";\r\nimport AdminRegister from \"./register/Register\";\r\nimport Home from \"../home/index\";\r\nimport routes from \"../../../configuration/routing/Routes\";\r\n\r\n//Styles\r\nimport '../../styles/authentication/login.css';\r\n\r\n//Assets\r\nimport second_background from \"../../assets/authentication/background2.png\";\r\n\r\n\r\n//Constants\r\nconst { Content, Sider } = Layout;\r\nconst WrappedNormalLoginStandard = Form.create()(LoginForm);\r\nconst WrappedForgotPassword = Form.create()(ForgotPassword);\r\n//const WrappedResetPassword = Form.create()(ResetPassword);\r\nconst WrappedConfirmPassword = Form.create()(ConfirmResetPassword);\r\nconst WrappedConfirmAccount = Form.create()(ConfirmAccount);\r\n\r\n\r\nclass Login extends Component {\r\n  \r\n  render() {\r\n    \r\n     return (\r\n      <div className='login'>\r\n        {\r\n          (this.props.pathname === routes.home) && \r\n          <Layout>\r\n            <Route path={routes.home} component={Home}/>\r\n          </Layout>     \r\n        }\r\n        {\r\n          (this.props.pathname === routes.admin_register) && \r\n          <Layout>\r\n            <Sider width={400} style={{backgroundColor: \"#fff\"}}>\r\n              <Route path={routes.admin_register} component={AdminRegister}/>\r\n            </Sider>\r\n            <Layout className={\"background-sider\"}>\r\n              <Content className={\"background-picture-login\"}>\r\n                <img src={second_background} alt=\"shopping_cart\" className=\"shop\"/>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>     \r\n        }\r\n        {\r\n          (this.props.pathname === routes.customer_register) && \r\n          <Layout>\r\n            <Route path={routes.customer_register} component={CustomerRegister}/>\r\n          </Layout>          \r\n        }\r\n        {\r\n          (this.props.pathname !== routes.customer_register && this.props.pathname !== routes.company_register && this.props.pathname !== routes.admin_register && this.props.pathname !== routes.home) && \r\n          <Layout>\r\n            <Sider width={400} style={{backgroundColor: \"#fff\"}}>\r\n                <Switch>            \r\n                  <Route path={routes.login} component={WrappedNormalLoginStandard} />\r\n                  <Route path={routes.forgot_password} component={WrappedForgotPassword} />\r\n                  <Route path={routes.confirm_password} component={WrappedConfirmPassword} />\r\n                  <Route path={routes.confirm_account} component={WrappedConfirmAccount} />\r\n                  <Route render = {()=><Redirect to={routes.home}/>}/>\r\n                </Switch>\r\n            </Sider>\r\n            <Layout className={\"background-sider\"}>\r\n              <Content className={\"background-picture-login\"}>\r\n                <img src={second_background} alt=\"shopping_cart\" className=\"shop\"/>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        }        \r\n      </div>\r\n     );\r\n  }\r\n}\r\n\r\nexport default withRouter(Login);","//Libraries\r\n\r\nimport React, {Component} from 'react';\r\nimport {Row, Col} from 'antd';\r\nimport Clock from 'react-live-clock';\r\n\r\n//Styles\r\nimport '../../styles/general/information.css';\r\n\r\nclass Information extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: false,\r\n    };\r\n\r\n  };\r\n\r\n  render(){\r\n\r\n    return(\r\n      <Row className={\"general-row\"}>\r\n        <Row className={\"row-information\"}>\r\n          <Col  xxl={4} lg={4} md={8} sm={8} xs={10} className={\"name-col\"}>\r\n          <span className=\"information-name\">Hola, {localStorage.user_name}</span>\r\n          </Col>\r\n          <Col xxl={16} lg={16} md={8} sm={8} xs={4} className={\"page-col\"}>\r\n          <span className=\"information-page\"><a className={\"page-link\"} href=\"http://www.avanzo.co\" target=\"_blank\" rel=\"noopener noreferrer\">www.avanzo.co</a></span>\r\n          </Col>\r\n          <Col xxl={4} lg={4} md={8} sm={8} xs={10} className={\"clock-col\"}>\r\n           <span><Clock format={'DD/MM/YYYY-HH:mm:ss'} ticking={true} timezone={'America/Bogota'} className={\"information-clock\"}/></span>\r\n          </Col>\r\n        </Row>\r\n      </Row>\r\n         \r\n    );\r\n  };\r\n  \r\n}\r\n  \r\nexport default Information;","//Subcomponents\r\nimport request from '../requestWrapper';\r\n\r\nfunction integrationRegistration(data){\r\n\r\n  return request({\r\n    url: '/Integration/Register',\r\n    method: 'POST',\r\n    data: data\r\n  });\r\n};\r\n\r\nconst integrationService = {\r\n  integrationRegistration\r\n};\r\n\r\nexport default integrationService;","///Types\r\nimport {integrationTypes as C} from '../../types';\r\n\r\n//Subcomponents\r\nimport { WARNING_MODAL } from '../../../../ui/components/subcomponents/modalMessages';\r\n\r\n//Services\r\nimport integrationService from '../../../../services/integration/integrationServices'; \r\nimport { initializeClient } from '../../../../services/requestWrapper';\r\n\r\nfunction saveLocalStorage(access_token, expires_on, user_name, roleId, email, userId){\r\n\r\n  //localStorage.setItem('access_token', access_token);\r\n  localStorage.setItem('expires_on', expires_on);\r\n  localStorage.setItem('user_name', user_name);\r\n  localStorage.setItem('role_id', roleId);\r\n  localStorage.setItem('email', email);  \r\n  localStorage.setItem('user_id', userId);\r\n\r\n  initializeClient();\r\n};\r\n\r\nexport const integrationRegister = (data) => {\r\n  return dispatch => {\r\n    return integrationService.integrationRegistration(data)\r\n      .then(response => {\r\n        localStorage.setItem('access_token', response.data.data.access_token);\r\n        let data = response.data.data;\r\n        let user_info = data.user_info;\r\n        saveLocalStorage(data.access_token, data.expires_on, user_info.name, user_info.Role_idRole, user_info.email, user_info.idUser);\r\n        dispatch({\r\n          type: C.INTEGRATION_REGISTER,\r\n          token: data.access_token,\r\n          payload: true,\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.INTEGRATION_REGISTER,\r\n          payload: false,\r\n        });\r\n        WARNING_MODAL('Advertencia',  'Por favor, regístrate en nuestro portal');\r\n      });\r\n  }\r\n};\r\n\r\n","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport { Form, Spin} from 'antd';\r\n\r\n//Subcomponents\r\nimport routes from '../../../configuration/routing/Routes';\r\n\r\n//Actions\r\nimport { integrationRegister } from \"../../../store/redux/actions/integration/integrationActions\";\r\n\r\n//Styles\r\nimport '../../styles/customer/request-form.css';\r\n\r\n\r\nclass IFormRequest extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      sliderValue: 300000,\r\n      fee: null,\r\n      loan: null,\r\n      money_wallet: false,\r\n      wallet_type: null,\r\n      wallet_number: null,\r\n      bank_account: false,\r\n      bank_name: null,\r\n      bank_number: null,\r\n      bank_type: null,\r\n      signatureDone: false,\r\n      trimmedDataURL: null\r\n    };    \r\n\r\n    this.props.integrationRegister(this.props.match.params);\r\n\r\n  };\r\n\r\n  render(){\r\n\r\n    //console.log(\"IR\", this.props.location.pathname);    \r\n\r\n    if(this.props.integrationRegisterResponse){   \r\n      return (\r\n        <div>\r\n          <Redirect to={{pathname: routes.customer_form_request}}/>\r\n        </div>\r\n      );\r\n    }else{\r\n      if(this.props.integrationRegisterResponse === false){\r\n        return (\r\n          <div>\r\n            <Redirect to={{pathname: routes.customer_register}}/>\r\n          </div>\r\n        );\r\n      }else{\r\n        return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                Cargando ...\r\n                <br/>\r\n                <br/>\r\n                <Spin size=\"large\" />\r\n              </div>);\r\n      }\r\n      \r\n    }\r\n\r\n  };\r\n  \r\n}\r\n\r\nlet IRequestForm = Form.create()(IFormRequest);\r\n\r\nIRequestForm.propTypes = {\r\n  integrationRegisterResponse: PropTypes.bool,\r\n  integrationToken: PropTypes.string,\r\n  correct: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    integrationRegisterResponse: state.integration.integrationRegisterResponse,\r\n    integrationToken: state.integration.integrationToken,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    integrationRegister: (data) => dispatch(integrationRegister(data)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(IRequestForm);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\n\r\n//Stylesh\r\nimport \"../../styles/subcomponents/loadings.css\"\r\n\r\nclass MiniLoading extends Component {\r\n  render() {\r\n    return (\r\n        <div className={\"mini-loading\"}>\r\n          <div className={\"spinner\"}>\r\n            <div className={\"bounce1\"}/>\r\n            <div className={\"bounce2\"}/>\r\n            <div className={\"bounce3\"}/>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MiniLoading;","//Libraries\r\nimport {Layout, Menu} from 'antd';\r\nimport React, {Component} from 'react';\r\n//import { Redirect } from \"react-router\";\r\nimport {withRouter, NavLink} from 'react-router-dom';\r\n\r\n//Subcomponents\r\nimport routes from \"../../../configuration/routing/Routes\";\r\n//import icon from \"../../assets/authentication/avanzoMenu.jpg\";\r\n\r\n//Styles\r\nimport '../../styles/integration/integrationmenu.css';\r\n\r\n//Constants\r\nconst { Header } = Layout;\r\n\r\nclass IMainMenu extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      log_out: 0,\r\n      visible: false,\r\n      redirectTo: \"\",\r\n      //loggedIn: this.isSignedIn()\r\n    };\r\n\r\n    /*this.logOut = this.logOut.bind(this);\r\n    this.handleCancelModal = this.handleCancelModal.bind(this);\r\n    this.isSignedIn=this.isSignedIn.bind(this);*/\r\n\r\n  };\r\n\r\n  /*logOut(){\r\n    //this.props.logout();\r\n    localStorage.clear();\r\n    this.setState({loggedIn: false})\r\n  };\r\n\r\n  handleCancelModal(){\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n  \r\n  isSignedIn(){\r\n    if (localStorage.access_token !== undefined && localStorage.access_token !== null &&\r\n        localStorage.access_token !== 'null' && localStorage.access_token){\r\n      return true;\r\n    } else {\r\n      localStorage.clear();\r\n      return false;\r\n    }\r\n  };*/\r\n  render(){\r\n    \r\n    return(\r\n      <Layout className=\"layout\" >\r\n        <Header className={\"header-menu1\"} >         \r\n          <Menu\r\n            mode=\"horizontal\"\r\n            className={\"menu-style\"}>\r\n              <Menu.Item>\r\n                <NavLink to={routes.integration_form}>\r\n                  Solicitar préstamo\r\n                </NavLink>\r\n              </Menu.Item>\r\n              <Menu.Item>\r\n                <NavLink to={routes.integration_transactions}>\r\n                  Transacciones\r\n                </NavLink>\r\n              </Menu.Item>\r\n              <Menu.Item>\r\n                <NavLink to={routes.integrations_requests}>\r\n                  Revisar solicitudes\r\n                </NavLink>\r\n              </Menu.Item>\r\n            </Menu>\r\n        </Header>\r\n      </Layout>\r\n    );\r\n  };\r\n  \r\n}\r\n\r\nexport default (withRouter(IMainMenu));","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Divider, Card, Input, Table} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport MiniLoading from '../subcomponents/MiniLoading';\r\nimport IMenu from \"./IMenu\";\r\n\r\n//Actions\r\nimport {getAllTransactions} from \"../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../styles/customer/transactions.css'\r\n\r\n//Constants\r\nconst table = [\r\n  {\r\n    title: <div>Tipo Transacción</div>,\r\n    dataIndex: 'name',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.transaction.localeCompare(b.transaction)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad</div>,\r\n    dataIndex: 'quantity',\r\n    width: \"100px\",\r\n    align: \"right\",\r\n    render: text => <div className={\"table-p\"}>{\"$\"+text}</div>,\r\n    sorter: (a, b) =>{ return a.quantity.toString().localeCompare(b.quantity.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Solicitud</div>,\r\n    dataIndex: 'date',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text.split(\"-\")[0]}</div>,\r\n    sorter: (a, b) =>{ return a.date.localeCompare(b.date)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Transacción</div>,\r\n    dataIndex: 'date2',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text.split(\"-\")[0]}</div>,\r\n    sorter: (a, b) =>{ return a.date.localeCompare(b.date)},\r\n  }\r\n];\r\n\r\n//Functions\r\nfunction itemRender(current, type, originalElement) {\r\n  if (type === 'prev' || type === 'Previous Page') {\r\n    return <span title={'Anterior'} className={\"item-renderer\"}>{\"<\"}</span>;\r\n  } if (type === 'next') {\r\n    return <span title={'Siguiente'} className={\"item-renderer\"}>{\">\"}</span>;\r\n  }\r\n  return originalElement;\r\n};\r\n\r\nclass ITransactions extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      text: null,\r\n      firstText: null,\r\n      firstTextLength: 0,\r\n      linkName: null,\r\n      linkUrl: null,\r\n    };\r\n\r\n    this.setData = this.setData.bind(this);\r\n    this.inputLinkName = this.inputLinkName.bind(this);\r\n\r\n    //this.props.getAllTransactions(8, 10);\r\n\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          name: item.name,\r\n          link: item.url,\r\n        };\r\n        rows.push(row);\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  inputLinkName(e){\r\n    this.setState({\r\n      linkName: e.target.value,\r\n    });    \r\n  };\r\n\r\n  render() {\r\n\r\n    let tableData = [\r\n      {\r\n        key: 1,\r\n        transaction: \"Retiro\",\r\n        quantity: 150000,\r\n        date: \"20-06-19\",\r\n        date2: \"21-06-19\"\r\n      },\r\n      {\r\n        key: 2,\r\n        transaction: \"Pago\",\r\n        quantity: 250000,\r\n        date: \"21-06-19\",\r\n        date2: \"22-06-19\"\r\n      },\r\n      {\r\n        key: 3,\r\n        transaction: \"Cuota de manejo\",\r\n        quantity: 8500,\r\n        date: \"23-06-19\",\r\n        date2: \"24-06-19\"\r\n      },\r\n      {\r\n        key: 4,\r\n        transaction: \"Pago\",\r\n        quantity: 120000,\r\n        date: \"25-06-19\",\r\n        date2: \"26-06-19\"\r\n      },\r\n      {\r\n        key: 5,\r\n        transaction: \"Retiro\",\r\n        quantity: 275000,\r\n        date: \"26-06-19\",\r\n        date2: \"27-06-19\"\r\n      },\r\n      {\r\n        key: 6,\r\n        transaction: \"Intereses\",\r\n        quantity: 4870,\r\n        date: \"27-06-19\",\r\n        date2: \"28-06-19\"\r\n      }     \r\n    ];\r\n  \r\n    if(JSON.stringify(tableData) === '{}'){\r\n      return (\r\n        <MiniLoading visible={true}/> \r\n      );\r\n    }else{\r\n      return (\r\n        <div>\r\n          <IMenu/>\r\n          <div className={\"transactions-div\"}>\r\n            <Row>\r\n              <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n                <h2 className={'header-terms-title'}>Histórico de transacciones</h2>\r\n              </Col>\r\n            </Row>\r\n            <Row className={\"social-row-content\"}>\r\n              <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n                <Card className={\"transactions-card\"}>\r\n                  <h3>Filtros</h3>\r\n                  <Row gutter={8}>\r\n                    <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                      <p className=\"field-title-visible\">Tipo Transacción: </p>\r\n                      <Input placeholder={\"Tipo Transacción\"}/>\r\n                    </Col>\r\n\r\n                    <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                      <p className=\"field-title-visible\">Cantidad</p>\r\n                      <Input placeholder={\"Cantidad\"}/>\r\n                    </Col>\r\n\r\n                    <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                      <p className=\"field-title-visible\">Fecha Solicitud</p>\r\n                      <Input placeholder={\"Fecha Solicitud\"}/>\r\n                    </Col>\r\n\r\n                    <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                      <p className=\"field-title-visible\">Fecha Transacción</p>\r\n                      <Input placeholder={\"Fecha Transacción\"}/>\r\n                    </Col>\r\n                  </Row>\r\n                  <Divider className={\"second-divider\"}/>\r\n                    <Table className={\"new-table\"} dataSource={tableData} columns={table} rowKey={'id'}\r\n                      locale={{ emptyText: 'No hay transacciones todavía' }} pagination={{ itemRender: itemRender, showSizeChanger: true,\r\n                      pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"] }} size={'small'} scroll={{x:'500px'|true}}/>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n}\r\n\r\nITransactions.propTypes = {\r\n  transactionList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    transactionList: state.customer.transactionList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllTransactions: (customerId) => dispatch(getAllTransactions(customerId)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ITransactions);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Redirect, Link} from 'react-router-dom';\r\nimport {Form, Input, Button, Icon, Layout} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Subcomponents\r\nimport routes from \"../../../../configuration/routing/Routes\";\r\nimport { ERROR_MODAL } from '../../subcomponents/modalMessages';\r\n\r\n//Actions\r\nimport {changePassword} from \"../../../../store/redux/actions/general/loginActions\";\r\n\r\n//Assets\r\nimport secondIcon from \"../../../assets/authentication/avanzo.jpg\";\r\nimport second_background from \"../../../assets/authentication/background2.png\";\r\n\r\n//Constants\r\nconst { Content, Sider } = Layout;\r\n\r\nclass ResetPassword extends Component{\r\n  \r\n  constructor(props) {\r\n    \r\n    super(props);\r\n    \r\n    this.state = {\r\n      requestSent: false,\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.compareToFirstPassword = this.compareToFirstPassword.bind(this);\r\n\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if(!err){\r\n        //console.log(\"Values\", values, \"Params\", this.props.match.params);\r\n        this.props.changePassword(values, this.props.match.params.token);\r\n        this.setState({\r\n          burstingKey: this.state.burstingKey+1 \r\n        });\r\n      }else{\r\n        ERROR_MODAL(\"Ingrese los datos correctos, por favor.\");\r\n      }\r\n    });\r\n  }\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Las dos contraseñas no coinciden');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  render(){\r\n  \r\n    const {getFieldDecorator} = this.props.form;  \r\n    const {requestSent} = this.state;\r\n    //let { resetPasswordResponse } = this.props;\r\n\r\n    //console.log(\"RP\", resetPasswordResponse);\r\n  \r\n      return(\r\n        <Layout>\r\n            <Sider width={400} style={{backgroundColor: \"#fff\"}}>\r\n            <div>\r\n                {requestSent === true &&\r\n                  <Redirect to={routes.login}/>\r\n                }\r\n                <div className=\"div-logo\">\r\n                  <img src={secondIcon} alt=\"icon\" className={\"logo-reset\"} />\r\n                </div>\r\n                <div className={\"login-card\"}>\r\n                  <div className=\"login-form\">\r\n                  <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <Form.Item>\r\n                        {getFieldDecorator('password',{\r\n                          rules: [{ required: true, message: 'Por favor, ingrese su contraseña' }, {min: 6, message: \"Mínimo 6 caracteres.\"}, {pattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)^(?=.*[!@#\\\\$%\\\\^&.,\\\\*])', message: \"La contraseña debe contener al menos una mayúscula, una minúscula, un número y un caracter especial\"}],\r\n                        })( <Input key={this.state.burstingKey} className={\"form-content\"} prefix={<Icon type=\"lock\" className={\"field-icon\"} />} type=\"password\" \r\n                              placeholder=\"Contraseña\"/> )}\r\n                      </Form.Item>\r\n                    <Form.Item>\r\n                      {getFieldDecorator('confirmPassword', {\r\n                        rules: [\r\n                          {required: true, message: 'Confirme la contraseña'},\r\n                          {validator: this.compareToFirstPassword}\r\n                        ]\r\n                      })( <Input key={this.state.burstingKey} prefix={<Icon type=\"lock\" className={\"field-icon\"} />} type=\"password\" \r\n                                placeholder=\"Confirmar contraseña\"/>  )\r\n                      }\r\n                    </Form.Item>\r\n                    <Form.Item className={\"submit\"}>\r\n                      <Button type=\"primary\" htmlType=\"submit\" className=\"my-button login-form-button\">\r\n                        Cambiar\r\n                      </Button>\r\n                    </Form.Item>\r\n                    <Form.Item className={\"submit\"}>\r\n                      <div>\r\n                          <Link to={routes.login}>\r\n                              <p className={\"url-form\"}>Iniciar Sesión</p>\r\n                          </Link>\r\n                          <Link to={routes.customer_register}>\r\n                              <p className={\"url-form\"}>¿Desea Registrarse?</p>\r\n                          </Link>\r\n                      </div>\r\n                    </Form.Item>\r\n                  </Form>\r\n                  </div>\r\n                </div>\r\n                <div className={\"bottom-title\"}>\r\n                  Avanzo © 2019\r\n                </div>           \r\n                {\r\n                  (this.props.correct === true) &&\r\n                  <Redirect to={routes.login}/>\r\n                }\r\n              </div>  \r\n            </Sider>\r\n          <Layout className={\"background-sider\"}>\r\n            <Content className={\"background-picture-login\"}>\r\n              <img src={second_background} alt=\"shopping_cart\" className=\"shop\"/>\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nResetPassword.propTypes = {\r\n  resetPasswordResponse: PropTypes.string,\r\n  correct: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    resetPasswordResponse: state.login.resetPasswordResponse,\r\n    correct: state.login.correct,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changePassword: (data, token) => dispatch(changePassword(data, token))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Styles\r\nimport \"../../styles/subcomponents/special-fields.css\"\r\n\r\n\r\nclass FieldTitle extends Component {\r\n\r\n    render() {\r\n\r\n        let visibility = this.props.title===\"b\" ? \"field-title-hidden\" : \"field-title-visible\";\r\n\r\n        return (\r\n            <p className={visibility}>{this.props.title}:</p>\r\n        );\r\n    }\r\n}\r\n\r\nFieldTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FieldTitle;","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { Form, Select, Button, Col, Row, Collapse, InputNumber, Input, Tooltip, Icon, Table} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\n//Subcomponents\r\nimport FieldTitle from '../../subcomponents/FieldTitle';\r\nimport routes from '../../../../configuration/routing/Routes';\r\n\r\n//Styles\r\nimport '../../../styles/admin/create-company.css';\r\nimport { SUCCESS_MODAL, ERROR_MODAL, WARNING_MODAL } from '../../subcomponents/modalMessages';\r\n\r\n//Actions\r\nimport {createCompany, resetValue}  from \"../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Constants\r\n//import {Roles} from \"../../../lib/generalUtils/constants\";\r\nconst FormItem = Form.Item;\r\nconst { Panel } = Collapse;\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Tipo de ciclo',\r\n    dataIndex: 'companyRate',\r\n  },\r\n  {\r\n    title: 'Fecha de reporte',\r\n    dataIndex: 'companyReportDate',\r\n  },\r\n  {\r\n    title: 'Fecha de pago 1',\r\n    dataIndex: 'companyFirstDate',\r\n  },\r\n  {\r\n    title: 'Fecha de pago 2',\r\n    dataIndex: 'companySecondDate',\r\n  },\r\n];\r\n\r\nclass CreateCompany extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      isLoading: false,\r\n      captchaSolved: true,\r\n      email: null,\r\n      meeting: null,\r\n      moyen: false,\r\n      report: null,\r\n      loan: null,\r\n      upload: null,\r\n      salary_rate: null,\r\n      salariesArray: [0],\r\n      companyRateName: null,\r\n      companyPaymentNumber: null,\r\n      companyRate: null,\r\n      companyReportDate: null,\r\n      companyFirstDate: null,\r\n      companySecondDate: null,\r\n      companySalaries: [],\r\n      burstingKey: 1,\r\n      clearSelect: false,\r\n      burstingFormKey: 0,\r\n      defaultPaymentRate: null,\r\n      defaultReportDate: null,\r\n      defaultSalaryDate: null,\r\n    };\r\n\r\n    this.props.resetValue();\r\n\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if(nextProps.companyResponse === true){\r\n      if(prevState.burstingFormKey === 0){\r\n        return {\r\n          burstingFormKey: 1,\r\n        };\r\n      }\r\n    }\r\n  };\r\n  \r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"La empresa ha sido creada correctamente.\");\r\n  };\r\n\r\n  handleSalaryRate = () => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if(values.companyRate === \"Mensual\"){\r\n        this.setState({\r\n          salary_rate: false,\r\n        });\r\n      }else{\r\n        this.setState({\r\n          salary_rate: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  createCompany = () => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (err){\r\n        ERROR_MODAL(\"Error al realizar la acción\", \" Ingresa datos válidos dentro del formulario.\");\r\n      }else{\r\n        if(values.password !== values.confirmPassword){\r\n          WARNING_MODAL(\"Las contraseñas no coinciden\");\r\n        }else if(values.phoneNumber.toString()[0] !== \"3\" || values.phoneNumber.toString().length !== 10 ){\r\n          ERROR_MODAL(\"Error al realizar la acción\", \" ingresa un número de teléfono válido.\");\r\n        }else{\r\n          let newSalary = [{\r\n            companyRate: values.companyRate,\r\n            companyReportDate: values.companyReportDate,\r\n            companyFirstDate: values.companyFirstDate,\r\n            companySecondDate: values.companySecondDate,\r\n          }];\r\n          let data = {\r\n            address: values.address,\r\n            approveHumanResources: values.approveHumanResources,\r\n            companySalaries: this.state.companySalaries.length === 0 ? newSalary : this.state.companySalaries,\r\n            defaultAmount: values.defaultAmount,\r\n            economyActivity: values.economyActivity,\r\n            email: values.email,\r\n            maximumSplit: values.maximumSplit,\r\n            nit: values.nit,\r\n            socialReason: values.socialReason,\r\n            password: values.password,\r\n            companyMembers: [\r\n              {\r\n                memberName: values.memberName + \"-\" + values.memberLastName,\r\n                memberId: values.memberId,\r\n                profession: values.profession,\r\n                phoneNumber: values.phoneNumber,\r\n                memberEmail: values.memberEmail,\r\n              },\r\n              {\r\n                memberName: values.representantName + \"-\" + values.representantLastName,\r\n                memberId: values.representantId,\r\n                profession: values.representantProfession,\r\n                phoneNumber: values.representantPhone,\r\n                memberEmail: values.representantEmail,\r\n              }\r\n            ],               \r\n          };\r\n          this.props.createCompany(data);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  addNewSalary = () => {\r\n    \r\n    let {companyRate, companyReportDate, companyFirstDate, companySecondDate, burstingKey, defaultPaymentRate,\r\n         defaultSalaryDate, defaultReportDate } = this.state;\r\n\r\n    let datesArray = this.state.companySalaries;\r\n\r\n    if(defaultPaymentRate === null){\r\n      WARNING_MODAL(\"Advertencia\", 'Ingresa un tipo de ciclo de pagos');\r\n    }else if(defaultSalaryDate === null){\r\n      WARNING_MODAL(\"Advertencia\", 'Ingresa las fechas de salario separadas por comas');\r\n    }else if(defaultSalaryDate === null){\r\n      WARNING_MODAL(\"Advertencia\", 'Ingresa las fechas de reporte separadas por comas');\r\n    }\r\n\r\n    let newSalary = {\r\n      companyRate: companyRate,\r\n      companyReportDate: companyReportDate,\r\n      companyFirstDate: companyFirstDate,\r\n      companySecondDate: companySecondDate,\r\n    };\r\n\r\n    if(companyRate === null && companyReportDate=== null && companyFirstDate === null){\r\n      WARNING_MODAL(\"Advertencia\", \"Los campos de ciclos de pagos no son válidos.\")\r\n    }else{\r\n      this.setState({\r\n        companySalaries: datesArray,\r\n        burstingKey: this.state.burstingKey+1,\r\n        clearSelect: !this.state.clearSelect,\r\n        companyRate: null,\r\n        companyReportDate: null,\r\n        companyFirstDate: null,\r\n        companySecondDate: null,\r\n        defaultPaymentRate: null,\r\n        defaultReportDate: null,\r\n        defaultSalaryDate: null,\r\n      });\r\n      datesArray.push(newSalary);\r\n    }\r\n    console.log(\"Salió\", this.state.burstingKey);\r\n  };\r\n\r\n  changeRatesValues = (e, param) => {\r\n    this.setState({\r\n      [param]: e,\r\n      defaultPaymentRate: e,\r\n    });\r\n  };\r\n\r\n  changeSalariesValues = (e, param) => {\r\n    let setter = e.target.value;\r\n    e.target.value = setter.replace(/[^0-9,]/g, '');\r\n    let setterValue = e.target.value.split(',');\r\n    if(setterValue.length < 5){\r\n      this.setState({\r\n        [param]: e.target.value,\r\n        defaultReportDate: e.target.value\r\n      });\r\n    }else{\r\n      WARNING_MODAL(\"Advertencia\", \"Ingresa máximo cuatro días para los reportes.\");\r\n    }\r\n  };\r\n\r\n  changeDateValues = (e, param) => {\r\n    let setter = e.target.value;\r\n    e.target.value = setter.replace(/[^0-9,]/g, '');\r\n    let {companyRate} = this.state;\r\n    //setter = e.target.value.replace(/ /g, \"\");\r\n    let setterValue = setter.replace(/[^0-9,]/g, '').split(',');\r\n\r\n    if(companyRate === \"Mensual\"){\r\n      if(setterValue.length === 1){\r\n        this.setState({\r\n          companyFirstDate: setterValue[0],\r\n          defaultSalaryDate: setterValue[0],\r\n        });\r\n      }else{\r\n        WARNING_MODAL(\"Advertencia\", \"Ingresa solo un día para el tipo de recurrencia mensual\");\r\n      }    \r\n    }else if(companyRate === \"Quincenal\"){\r\n      if(setterValue.length < 3){\r\n        this.setState({\r\n          companyFirstDate: setterValue[0],\r\n          companySecondDate: setterValue[1],\r\n          defaultSalaryDate: setterValue[1] !== undefined ? setterValue[0]+\",\"+setterValue[1] : setterValue[0],\r\n        });\r\n      }else{\r\n        WARNING_MODAL(\"Advertencia\", \"Ingresa solo dos días para el tipo de recurrencia quincenal\");\r\n      }\r\n    }else{\r\n      WARNING_MODAL(\"Advertencia\", \"Primero, Ingresa un tipo de ciclo para esta empresa\");\r\n    }\r\n    \r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Las dos contraseñas no coinciden');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validationNumbersFee = (e) => {\r\n    console.log()\r\n    const input = e.toString();\r\n    e = input.replace(/[^0-9]/g, '');\r\n  };\r\n\r\n  validationNumbers = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^0-9]/g, '');\r\n  };\r\n\r\n  validationNITNumbers = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^0-9 /-]/g, '');\r\n  };\r\n\r\n  validationNumbersNumber = (e) => {\r\n    if(e !== null){\r\n      const input = e.toString();\r\n      e = input.replace(/[^0-9]/g, '');\r\n    }\r\n    \r\n  };\r\n\r\n  cleanValues = () => {\r\n    this.setState({\r\n      defaultPaymentRate: null,\r\n      defaultReportDate: null,\r\n      defaultSalaryDate: null,\r\n    })\r\n  };\r\n\r\n\r\n  render(){\r\n    \r\n    let {getFieldDecorator} = this.props.form;\r\n    let {companySalaries, burstingFormKey, clearSelect, defaultPaymentRate, defaultReportDate, defaultSalaryDate} = this.state;\r\n    //console.log(\"CS\", clearSelect);\r\n    console.log(\"UP\", this.state.burstingKey);\r\n    \r\n    return (\r\n      <div className={\"company-div\"}>\r\n          <Row className={\"request-row-content\"}>\r\n            <div>  \r\n              <Form>\r\n                <Collapse defaultActiveKey={['1']} bordered={false}>\r\n                  <Panel header=\"Información general\" key=\"1\">\r\n                    <Row gutter={20} className={\"form-request-rows\"}>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Razón social\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('socialReason',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa una razón social'}\r\n                            ]})(\r\n                              <Input key={burstingFormKey} className={\"form-input-number\"} placeholder={\"Razón social\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      \r\n                      <Col xs={12} sm={12} md={8} lg={6}>\r\n                        <FieldTitle title={\"NIT\"}/>\r\n                        <FormItem >\r\n                          {getFieldDecorator('nit',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa un NIT válido' }\r\n                            ]})(\r\n                              <Input onChange={(e) => this.validationNITNumbers(e)} key={burstingFormKey} className={\"form-input-number\"} placeholder={\"NIT\"}/>\r\n                            )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Correo Electrónico\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('email',\r\n                            {rules: [\r\n                              {type: 'email', message: 'Ingresa un correo electrónico válido.'},\r\n                              {required: true, message: 'Ingresa un correo electrónico'}\r\n                            ]})(\r\n                              <Input key={burstingFormKey} className={\"form-input-number\"} placeholder={\"Correo electrónico\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={5} lg={6}>\r\n                        <FieldTitle title={\"Actividad económica\"}/>\r\n                        <FormItem >\r\n                          {getFieldDecorator('economyActivity',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa una actividad económica'}\r\n                            ]})(\r\n                              <Input key={burstingFormKey} className={\"form-input-number\"} placeholder={\"Actividad económica\"}/>\r\n                            )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={5} lg={6}>\r\n                        <FieldTitle title={\"Dirección empresa\"}/>\r\n                        <FormItem >\r\n                          {getFieldDecorator('address',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa una dirección'}\r\n                            ]})(\r\n                              <Input key={burstingFormKey} className={\"form-input-number\"} placeholder={\"Dirección\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Contraseña por defecto\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('password',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa una contraseña por defecto'}\r\n                            ]})(\r\n                              <Input key={burstingFormKey} type=\"password\"  className={\"form-input-number\"} placeholder={\"Contraseña por defecto\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Confirmar contraseña\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('confirmPassword',\r\n                            {rules: [\r\n                              {required: true, message: 'Confirma la contraseña ingresada'},\r\n                              {validator: this.compareToFirstPassword}\r\n                            ]})(\r\n                              <Input key={burstingFormKey} type=\"password\" className={\"form-input-number\"} placeholder={\"Confirmar contraseña\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                    </Row>\r\n                  </Panel>\r\n                  <Panel header=\"Información de créditos\" key=\"2\">\r\n                    <Row gutter={8} className={\"form-request-rows\"}>\r\n                      <Col xs={12} sm={12} md={5} lg={8}>\r\n                          <FieldTitle title={\"¿Aprueba Recursos Humanos?\"}/>\r\n                          <FormItem >\r\n                            {getFieldDecorator('approveHumanResources',\r\n                              {rules: [\r\n                                {required: true, message: 'Ingresa si se aprueba desde recursos humanos'}\r\n                              ]})(\r\n                                <Select placeholder={\"¿Aprueba Recursos Humanos?\"} showSearch={true} allowClear={true} autoClearSearchValue={true}>\r\n                                  <Select.Option value={\"Sí\"}>Sí</Select.Option>\r\n                                  <Select.Option value={\"No\"}>No</Select.Option>\r\n                                </Select>\r\n                              )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={5} lg={8}>\r\n                          <FieldTitle title={\"Máxima cantidad a prestar\"}/>\r\n                          <FormItem >\r\n                            {getFieldDecorator('defaultAmount',\r\n                              {rules: [\r\n                                {required: true, message: 'Ingresa una monto particular'}\r\n                              ]})(\r\n                                <InputNumber min={80000} onChange={(e) => this.validationNumbersNumber(e)}  formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} \r\n                                className={\"form-input-number\"} placeholder={\"Máxima cantidad a prestar\"}/>\r\n                              )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={5} lg={8}>\r\n                        <FieldTitle title={\"Cantidad de cuotas máxima\"}/>\r\n                        <FormItem >\r\n                          {getFieldDecorator('maximumSplit',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa un máximo de cuotas'}\r\n                            ]})(\r\n                              <Input onChange={(e) => this.validationNumbers(e)} className={\"form-input-number\"} \r\n                              placeholder={\"No. máximo de cuotas\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                    </Row>\r\n                    <Row className={\"form-request-rows\"}>\r\n                      {\r\n                        this.state.companySalaries.length>0 && \r\n                        <Table columns={columns} dataSource={companySalaries} size=\"small\" bordered={false} locale={{emptyText: 'No hay registros'}}/>\r\n                      }\r\n                      <Row gutter={8} key={this.state.burstingKey}>\r\n                        <Col xs={12} sm={12} md={6} lg={6} key={this.state.burstingKey}>\r\n                          <FieldTitle title={\"Ciclo de pagos\"}/>\r\n                            <Select value={defaultPaymentRate === null ? undefined : defaultPaymentRate} key={this.state.burstingKey} placeholder={\"Tipo de salario\"} showSearch={true} onSelect={(e) => this.changeRatesValues(e, 'companyRate')} onChange={this.handleSalaryRate} allowClear={true} >\r\n                              <Select.Option value={\"Quincenal\"}>Quincenal</Select.Option>\r\n                              <Select.Option value={\"Mensual\"}>Mensual</Select.Option>\r\n                            </Select>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={6} lg={6}>\r\n                          <FieldTitle title={\"Fechas de salario\"}/>\r\n                            <Input value={defaultSalaryDate} max={31} min={1} key={this.state.burstingKey} className={\"form-input-number\"} placeholder={\"Fechas de salario\"} onChange={(e) => this.changeDateValues(e, 'companyFirstDate')}/>\r\n                        </Col>\r\n                        \r\n                        <Col xs={12} sm={12} md={6} lg={6}>\r\n                          <FieldTitle title={\"Fecha de reportes\"}/>\r\n                            <Input value={defaultReportDate} max={31} min={1} key={this.state.burstingKey} className={\"form-input-number\"} placeholder={\"(3, 13, 14, ... ) \"} onChange={(e) => this.changeSalariesValues(e, 'companyReportDate')}/>\r\n                        </Col>\r\n                        <Col xs={12} sm={8} md={3} lg={3}>\r\n                          <FieldTitle title={\" \"}/>\r\n                          <Button onClick={() => this.cleanValues()}>Limpiar</Button>\r\n                        </Col>\r\n                        <Col>\r\n                          <FieldTitle title={\" \"}/>\r\n                          <Tooltip title=\"Agregar nuevo ciclo de pagos\">\r\n                            <Button className={\"request-form-add\"} onClick={() => this.addNewSalary()}>Agregar</Button> \r\n                          </Tooltip>\r\n                        </Col>\r\n                      </Row>\r\n                    </Row>\r\n                  </Panel>\r\n                  <Panel header=\"Información de la persona encargada\" key=\"4\">\r\n                    <Row gutter={20} className={\"form-request-rows\"}>\r\n                      <Col xs={12} sm={12} md={6} lg={6}>\r\n                        <FieldTitle title={\"Nombres\"}/>\r\n                        <FormItem >\r\n                          {getFieldDecorator('memberName',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa el nombre del encargado.'}\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Nombres\"}/>\r\n                            )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={6} lg={6}>\r\n                        <FieldTitle title={\"Apellidos\"}/>\r\n                        <FormItem >\r\n                          {getFieldDecorator('memberLastName',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa el apellido del encargado'}\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Apellidos\"}/>\r\n                            )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>     \r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"No. Identificación\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('memberId',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa un número de identificación'}\r\n                            ]})(\r\n                              <Input onChange={(e) => this.validationNumbers(e)} className={\"form-input-number\"} placeholder={\"No. de Identificación\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Teléfono celular\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('phoneNumber',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa un teléfono celular'}\r\n                            ]})(\r\n                              <InputNumber maxLength={10} minLength={10} className={\"form-input-number\"} placeholder={\"Teléfono celular\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Correo electrónico\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('memberEmail',\r\n                            {rules: [\r\n                              {type: 'email', message: 'Ingresa un correo electrónico válido.'},\r\n                              {required: true, message: 'Ingresa un correo electrónico'}\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Correo electrónico\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6}>\r\n                        <FieldTitle title={\"Cargo\"}/>\r\n                        <FormItem >\r\n                          {getFieldDecorator('profession',\r\n                            {rules: [\r\n                              {required: true, message: 'Ingresa un cargo' }\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Cargo\"}/>\r\n                            )\r\n                          }\r\n                        </FormItem>  \r\n                      </Col>\r\n                    </Row>\r\n                  \r\n                  </Panel>\r\n                  <Panel header=\"Información del representante legal\" key=\"3\">\r\n                    <Row gutter={20} className={\"form-request-rows\"} >\r\n\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Nombres\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('representantName',\r\n                            {rules: [\r\n                              {required: false, message: ' ingresa un nombre'}\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Nombres\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Apellidos\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('representantLastName',\r\n                            {rules: [\r\n                              {required: false, message: ' ingresa un apellido'}\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Apellidos\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"No. de identificación\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('representantId',\r\n                            {rules: [\r\n                              {required: false, message: ' ingresa un número de identificación'}\r\n                            ]})(\r\n                              <Input onChange={(e) => this.validationNumbers(e)} className={\"form-input-number\"} placeholder={\"No. de Identificación\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Teléfono celular\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('representantPhone',\r\n                            {rules: [\r\n                              {required: false, message: ' ingresa un teléfono celular'}\r\n                            ]})(\r\n                              <InputNumber maxLength={10} minLength={10} className={\"form-input-number\"} placeholder={\"Teléfono celular\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Cargo\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('representantProfession',\r\n                            {rules: [\r\n                              {required: false, message: ' ingresa un cargo para el representante'}\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Cargo\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={8} lg={6} >\r\n                        <FieldTitle title={\"Correo electrónico\"}/>\r\n                        <FormItem>\r\n                          {getFieldDecorator('representantEmail',\r\n                            {rules: [\r\n                              {type: 'email', message: 'Ingresa un correo electrónico válido.'},\r\n                              {required: false, message: 'Ingresa un correo electrónico'}\r\n                            ]})(\r\n                              <Input className={\"form-input-number\"} placeholder={\"Correo electrónico\"} />\r\n                            )\r\n                          }\r\n                        </FormItem>\r\n                      </Col>\r\n                    </Row>\r\n                  </Panel>  \r\n                  \r\n                </Collapse>\r\n                <Col xs={24} sm={12} md={18} lg={19}/>\r\n                <Col xs={24} sm={12} md={6} lg={5}>\r\n                  <Button className={\"request-confirm-button\"} icon=\"plus-circle\" \r\n                          onClick={() => this.createCompany()}>\r\n                        Crear empresa\r\n                  </Button> \r\n                </Col>\r\n              </Form>\r\n            </div>\r\n        </Row>\r\n      </div>\r\n    );\r\n  \r\n  };\r\n  \r\n}\r\n\r\nlet CreateCompanyForm = Form.create()(CreateCompany);\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createCompany: (data) => dispatch(createCompany(data)),\r\n    resetValue: () => dispatch(resetValue()),\r\n  }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    companyResponse: state.admin.companyResponse,\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCompanyForm);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Icon, Tooltip, Modal, Input, InputNumber, Select, Table } from 'antd';\r\nimport PropTypes from \"prop-types\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\n//Actions\r\nimport {updateCompany, getCompanyWithSalary} from \"../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Columns\r\nconst columns = [\r\n  {\r\n    title: 'Tipo de ciclo',\r\n    dataIndex: 'companyRate',\r\n  },\r\n  {\r\n    title: 'Fecha de reporte',\r\n    dataIndex: 'companyReportDate',\r\n  },\r\n  {\r\n    title: 'Fecha de pago 1',\r\n    dataIndex: 'companyFirstDate',\r\n  },\r\n  {\r\n    title: 'Fecha de pago 2',\r\n    dataIndex: 'companySecondDate',\r\n  },\r\n  {\r\n    title: 'Acciones',\r\n    dataIndex: 'actions'\r\n  }\r\n];\r\n\r\n//Styles\r\nclass SalariesTable extends Component {\r\n  \r\n  constructor(props){\r\n    \r\n    super(props);\r\n    \r\n    this.state = {\r\n      nit: null,\r\n      address: null, \r\n      socialReason: null, \r\n      economyActivity: null,\r\n      maximumSplit: null,\r\n      defaultAmount: null, \r\n      approveHumanResources: null,\r\n      email: null,\r\n      loading: false,\r\n      companySalaries: [], \r\n      visible: null\r\n    };\r\n\r\n    this.props.getCompanyWithSalary(this.props.item.idCompany);\r\n    \r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if(nextProps.visible !== prevState.visible){\r\n      if(prevState.visible === null){\r\n        return {\r\n          visible: nextProps.visible,\r\n        };\r\n      }\r\n      return{\r\n        loading: true\r\n      }\r\n    }\r\n    if(nextProps.companySalaryResponse.length > 0){\r\n        return {\r\n          companySalaries: nextProps.companySalaryResponse,\r\n        };\r\n    }\r\n  };\r\n\r\n  \r\n  inputServiceNumber(e, service){\r\n    this.setState({\r\n      [service]: e,\r\n    });\r\n  };\r\n\r\n  inputServiceName(e, service){\r\n    this.setState({\r\n      [service]: e.target.value,\r\n    });    \r\n  };\r\n\r\n  inputServiceTime(e){\r\n    this.setState({\r\n      time: e,\r\n    });    \r\n  };\r\n\r\n  handleEdit(item){\r\n    let data = {\r\n      nit: this.state.nit===null ? item.nit : this.state.nit,\r\n      address: this.state.address===null ? item.address : this.state.address,\r\n      socialReason: this.state.socialReason===null ? item.socialReason : this.state.socialReason,\r\n      economyActivity: this.state.economyActivity===null ? item.economyActivity : this.state.economyActivity,\r\n      maximumSplit: this.state.maximumSplit===null ? item.maximumSplit : this.state.maximumSplit,\r\n      defaultAmount: this.state.defaultAmount===null ? item.defaultAmount : this.state.defaultAmount, \r\n      approveHumanResources: this.state.approveHumanResources===null ? item.approveHumanResources : this.state.approveHumanResources,\r\n      email: this.state.email===null ? item.email : this.state.email,\r\n      companySalaries: this.state.companySalaries.length>0 ? this.state.companySalaries : this.props.companySalaryResponse,\r\n      idCompany: item.idCompany,\r\n      idUser: item.idUser\r\n    };\r\n    this.props.updateCompany(data);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  removeRow(id){\r\n    let array = this.state.companySalaries;\r\n    for(let i in array){\r\n      if(array[i].idCompanySalaries === id){\r\n        array.pop(i);\r\n      }\r\n    };\r\n    this.setState({\r\n      companySalaries: array\r\n    });\r\n  }\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          companyFirstDate: item.companyFirstDate,\r\n          companyPaymentNumber: item.companyPaymentNumber,\r\n          companyRate: item.companyRate,\r\n          companyRateName: item.companyRateName,\r\n          companyReportDate: item.companyReportDate,\r\n          companySecondDate: item.companySecondDate,\r\n          idCompanySalaries: item.idCompanySalaries,  \r\n          actions:  <Row gutter={16}>\r\n                      <Col span={3}/>\r\n                      <Col span={3}>\r\n                        <Tooltip title={\"Eliminar ciclo\"}>\r\n                          <Icon className={{style: {color:\"#ff0000\"}}} onClick={() => this.removeRow(item.idCompanySalaries)}\r\n                            type={\"close-circle\"} style={{ fontSize: '16px'}}/>\r\n                        </Tooltip>\r\n                      </Col>\r\n                    </Row>\r\n        };\r\n        rows.push(row); \r\n      }\r\n    }\r\n    return rows;\r\n  };\r\n\r\n  render() {\r\n\r\n    //console.log(\"Visible\", this.props.visible);\r\n    //console.log(\"State\", this.state.visible);\r\n    //console.log(\"Props\", this.props.companySalaryResponse);\r\n    let tableData = this.setData(this.state.companySalaries);\r\n\r\n    return (\r\n      <div>\r\n        <Modal\r\n            title={\"Editar empresa\"}\r\n            visible={this.state.visible === null || (!this.state.visible && !this.props.visible) ? this.props.visible : this.state.visible}\r\n            okText={\"Guardar\"}\r\n            cancelText={\"Cancelar\"}\r\n            width={700}\r\n            onOk={() => this.handleEdit(this.props.item)}\r\n            onCancel={() => this.setState({visible: false})}\r\n            keyboard={!this.state.loading}\r\n            closable={!this.state.loading}>\r\n            <Row gutter={12}>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Razón social:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.socialReason} placeholder={\"Razón social\"} onChange={(e) => this.inputServiceName(e, 'socialReason')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                NIT:\r\n                <br/>\r\n                <InputNumber className={\"company-edit-nit\"} defaultValue={this.props.item.nit} onChange={(e) => this.inputServiceNumber(e, 'nit')} placeholder={\"NIT\"}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Correo electrónico:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.email} placeholder={\"Correo electrónico\"} onChange={(e) => this.inputServiceName(e, 'email')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Actividad económica:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.economyActivity} placeholder={\"Actividad económica\"} onChange={(e) => this.inputServiceName(e, 'economyActivity')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Dirección Empresa:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.address} placeholder={\"Dirección\"} onChange={(e) => this.inputServiceName(e, 'address')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                ¿Aprueba RR.HH.?\r\n                <br/>\r\n                <Select className={\"company-edit-nit\"} defaultValue={this.props.item.approveHumanResources ? \"Sí\" : \"No\"} placeholder={\"¿Aprueba Recursos Humanos?\"} showSearch={true} allowClear={true} autoClearSearchValue={true}>\r\n                  <Select.Option value={\"Sí\"}>Sí</Select.Option>\r\n                  <Select.Option value={\"No\"}>No</Select.Option>\r\n                </Select>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Máxima cantidad a prestar:\r\n                <br/>\r\n                <InputNumber className={\"company-edit-nit\"} defaultValue={this.props.item.defaultAmount} placeholder={\"Máximo préstamo\"} onChange={(e) => this.inputServiceNumber(e, 'defaultAmount')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Cantidad de cuotas máxima:\r\n                <br/>\r\n                <InputNumber className={\"company-edit-nit\"} defaultValue={this.props.item.maximumSplit} placeholder={\"Cantidad de cuotas\"} onChange={(e) => this.inputServiceNumber(e, 'maximumSplit')}/>\r\n              </Col>\r\n            </Row>\r\n            <br/>\r\n            \r\n            <br/>\r\n            <Row>\r\n              {\r\n                this.props.companySalaryResponse && \r\n                <Table columns={columns} dataSource={tableData} key={'idCompanySalaries'} size=\"small\" bordered={false} locale={{emptyText: 'No hay registros'}}/>\r\n              }\r\n            </Row>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nSalariesTable.propTypes = {\r\n  companySalaryResponse: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    companySalaryResponse: state.admin.companySalaryResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateCompany: (data) => dispatch(updateCompany(data)),\r\n    getCompanyWithSalary: (data) => dispatch(getCompanyWithSalary(data)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SalariesTable);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Icon, Tooltip} from 'antd';\r\nimport PropTypes from \"prop-types\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport EditModal from \"./EditModal\";\r\n\r\n//Actions\r\nimport {updateCompany, getCompanyWithSalary, activateCompany} from \"../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Columns\r\n/*const columns = [\r\n  {\r\n    title: 'Tipo de ciclo',\r\n    dataIndex: 'companyRate',\r\n  },\r\n  {\r\n    title: 'Fecha de reporte',\r\n    dataIndex: 'companyReportDate',\r\n  },\r\n  {\r\n    title: 'Fecha de pago 1',\r\n    dataIndex: 'companyFirstDate',\r\n  },\r\n  {\r\n    title: 'Fecha de pago 2',\r\n    dataIndex: 'companySecondDate',\r\n  }\r\n];*/\r\n\r\n//Styles\r\nclass TableButtons extends Component {\r\n  \r\n  constructor(props){\r\n    \r\n    super(props);\r\n    \r\n    this.state = {\r\n      nit: null,\r\n      address: null, \r\n      socialReason: null, \r\n      economyActivity: null,\r\n      maximumSplit: null,\r\n      defaultAmount: null, \r\n      approveHumanResources: null,\r\n      email: null,\r\n      loading: false,\r\n      companySalaries: [],\r\n      visible: false,\r\n    };\r\n\r\n    //this.inputServiceName = this.inputServiceName.bind(this);\r\n    //this.inputServiceTime = this.inputServiceTime.bind(this);\r\n    //this.inputServiceNumber = this.inputServiceNumber.bind(this);\r\n    //this.handleEdit = this.handleEdit.bind(this);\r\n\r\n    \r\n    \r\n  };\r\n\r\n  /*static getDerivedStateFromProps(nextProps, prevState) {\r\n    if(JSON.stringify(nextProps.companySalaryResponse) !== '{}'){\r\n      if(prevState.companySalaries.length === 0){\r\n        return {\r\n          companySalaries: nextProps.companySalaryResponse\r\n        };\r\n      }else{\r\n        return{\r\n          flagState: true\r\n        }\r\n      }\r\n    }\r\n   }*/\r\n\r\n   inputServiceTime = (e) => {\r\n    let item = e;\r\n    this.props.activateCompany(item.idCompany, parseInt(item.status) === 1 ? false : true);    \r\n  }; \r\n\r\n  render() {\r\n\r\n    //let tableData = this.setData(this.props.companySalaryResponse);\r\n\r\n    return (\r\n      <div>\r\n        <Row gutter={10}>\r\n          <Col span={3}  className={\"delete-col\"}>\r\n            <Tooltip title={\"Editar empresa\"}>\r\n              <Icon className={\"icon-button delete-icon\"} onClick={() => this.setState({visible: !this.state.visible})}\r\n                type={\"edit\"} style={{ fontSize: '16px'}}/>\r\n            </Tooltip>\r\n          </Col>\r\n          <Col span={3}/>\r\n          <Col span={3}  className={\"delete-col\"}>\r\n            <Tooltip title={\"Activar/Desactivar empresa\"}>\r\n              <Icon className={\"icon-button delete-icon\"} onClick={() => this.inputServiceTime(this.props.item)}\r\n                type={\"poweroff\"} style={{ fontSize: '16px'}}/>\r\n            </Tooltip>\r\n          </Col>   \r\n        </Row>\r\n        {\r\n          this.state.visible && \r\n          <EditModal item={this.props.item} visible={this.state.visible}/>  \r\n        }     \r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nTableButtons.propTypes = {\r\n  updateServices: PropTypes.func,\r\n  companySalaryResponse: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    companySalaryResponse: state.admin.companySalaryResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateCompany: (data) => dispatch(updateCompany(data)),\r\n    getCompanyWithSalary: (data) => dispatch(getCompanyWithSalary(data)),\r\n    activateCompany: (company, status) => dispatch(activateCompany(company, status)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableButtons);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Divider, Card, Input, Table, Spin} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Components\r\nimport TableButtons from './ServiceTableButtons';\r\n\r\n//Actions\r\nimport {getAllCompanies} from \"../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Styles\r\n//import '../../styles/customer/transactions.css'\r\n\r\n//Constants\r\nconst table = [\r\n  {\r\n    title: <div>Razón Social</div>,\r\n    dataIndex: 'socialReason',\r\n    width: \"120px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.socialReason.localeCompare(b.socialReason)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>NIT</div>,\r\n    dataIndex: 'nit',\r\n    width: \"90px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.nit.toString().localeCompare(b.nit.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad Préstamo</div>,\r\n    dataIndex: 'quantity',\r\n    width: \"80px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{\"$\"+text}</div>,\r\n    sorter: (a, b) =>{ return a.quantity.toString().localeCompare(b.quantity.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad Cuotas</div>,\r\n    dataIndex: 'split',\r\n    width: \"80px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.split.toString().localeCompare(b.split.toString())},\r\n  },\r\n  \r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Creación</div>,\r\n    dataIndex: 'registeredDate',\r\n    width: \"110px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text.split(\"T\")[0]}</div>,\r\n    sorter: (a, b) =>{ return a.registeredDate.localeCompare(b.registeredDate)},\r\n  },\r\n  {\r\n    title: \" \",\r\n    dataIndex: 'actions',\r\n    width: \"50px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-div\"}>{text}</div>,\r\n  }\r\n];\r\n\r\n//Functions\r\nfunction itemRender(current, type, originalElement) {\r\n  if (type === 'prev' || type === 'Previous Page') {\r\n    return <span title={'Anterior'} className={\"item-renderer\"}>{\"<\"}</span>;\r\n  } if (type === 'next') {\r\n    return <span title={'Siguiente'} className={\"item-renderer\"}>{\">\"}</span>;\r\n  }\r\n  return originalElement;\r\n};\r\n\r\nclass CompanyTable extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      socialReason: null,\r\n      nit: null,\r\n      quantity: null,\r\n      split: null,\r\n      date: null\r\n\r\n    };\r\n\r\n    this.setData = this.setData.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n    this.inputLinkName = this.inputLinkName.bind(this);\r\n\r\n    this.props.getAllCompanies();\r\n\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          socialReason: item.socialReason,\r\n          nit: item.nit,\r\n          registeredDate: item.registeredDate,\r\n          split: item.maximumSplit,\r\n          quantity: item.defaultAmount,\r\n          approveHumanResources: item.approveHumanResources,\r\n          email: item.email,\r\n          status: item.status,\r\n          actions: <TableButtons item={item}/>\r\n        };\r\n\r\n        if(this.filterData(row)) {\r\n          rows.push(row);\r\n        };\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  filterData(toCompare){\r\n    let {socialReason, nit, quantity, split} = this.state;\r\n\r\n    if(socialReason === null && nit === null && quantity === null && split === null){\r\n      return true;\r\n    }\r\n\r\n    if(socialReason !== null && !toCompare.socialReason.toString().toUpperCase().includes(socialReason.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(nit !== null && !toCompare.nit.toString().toUpperCase().includes(nit.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(quantity !== null && !toCompare.quantity.toString().toUpperCase().includes(quantity.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(split !== null && !toCompare.split.toString().toUpperCase().includes(split.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  inputLinkName(e){\r\n    this.setState({\r\n      linkName: e.target.value,\r\n    });    \r\n  };\r\n\r\n  render() {\r\n\r\n    let {socialReason, nit, quantity, split} = this.state;\r\n    let tableData = this.setData(this.props.companyList);\r\n  \r\n    if(this.props.companyList === null){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                  Cargando ...\r\n                  <br/>\r\n                  <br/>\r\n                  <Spin size=\"large\" />\r\n                </div>);\r\n    }else{\r\n      return (\r\n        <div >\r\n          <Row>\r\n            <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n              <Card className={\"transactions-card\"}>\r\n                <Row gutter={6}>\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={7}>\r\n                    <p className=\"field-title-visible\">Razón Social: </p>\r\n                    <Input placeholder={\"Razón Social\"} value={socialReason} onChange={(e) => this.setState({socialReason: e.target.value})}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\" >NIT</p>\r\n                    <Input placeholder={\"NIT\"} value={nit} onChange={(e) => this.setState({nit: e.target.value})}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\" >Cantidad Préstamo</p>\r\n                    <Input placeholder={\"Cantidad Préstamo\"} value={quantity} onChange={(e) => this.setState({quantity: e.target.value})}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                    <p className=\"field-title-visible\" >Cantidad Cuotas</p>\r\n                    <Input placeholder={\"Cantidad Cuotas\"} value={split} onChange={(e) => this.setState({split: e.target.value})}/>\r\n                  </Col>\r\n\r\n                </Row>\r\n                <Divider/>\r\n                  <Table className={\"new-table\"} dataSource={tableData} columns={table} rowKey={'key'}\r\n                    locale={{ emptyText: 'No hay coincidencias' }} pagination={{ itemRender: itemRender, showSizeChanger: true,\r\n                    pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"] }} size={'small'} scroll={{x:'500px'|true}}/>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n}\r\n\r\nCompanyTable.propTypes = {\r\n  companyList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    companyList: state.admin.companyList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllCompanies: ( ) => dispatch(getAllCompanies( )),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanyTable);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Tabs, Icon} from 'antd';\r\n\r\n//Components\r\nimport CreateCompanyForm from './CreateCompany';\r\nimport CompanyTable from './CompanyTable';\r\n//import CustomerManagement from '../customer_management/CreateCustomer';\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\n\r\n//Assets\r\n\r\n//Constants\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass Administrator extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n    \r\n    this.next = this.next.bind(this);\r\n    this.previous = this.previous.bind(this);\r\n    this.carousel = React.createRef();\r\n\r\n  };\r\n\r\n  next() {\r\n    this.carousel.next();\r\n  };\r\n\r\n  previous() {\r\n    this.carousel.prev();\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"admin-div\"}>\r\n        <Row>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <h2 className={'header-terms-title'}>Gestionar empresas</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className={\"admin-row-content\"}>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane tab={<span> <Icon type=\"unordered-list\" /> Lista de empresas </span>} key=\"1\">\r\n              <CompanyTable/>\r\n            </TabPane>\r\n            <TabPane tab={<span> <Icon type=\"plus-circle\" /> Crear empresa </span>} key=\"2\">\r\n              <CreateCompanyForm/>\r\n            </TabPane>\r\n          </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Administrator;","//Libraries\r\nimport React, { Component } from 'react';\r\nimport { Form, Select, Button, Col, Row, Collapse, InputNumber,\r\n         Input, DatePicker, Modal, Upload, message, Icon, Switch, Spin} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\n//Subcomponents\r\nimport FieldTitle from '../../../subcomponents/FieldTitle';\r\nimport { SUCCESS_MODAL, ERROR_MODAL } from '../../../subcomponents/modalMessages';\r\nimport { allowEmergingWindows, WARNING_MODAL } from '../../../subcomponents/modalMessages';\r\n\r\n//Actions\r\nimport {getCompanies} from \"../../../../../store/redux/actions/general/loginActions\";\r\nimport {createCustomer} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\nimport { getOutlayData } from \"../../../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../../../styles/admin/create-company.css';\r\nimport BaseURL from '../../../../../services/BaseURL';\r\n\r\n//Constants\r\nconst FormItem = Form.Item;\r\nconst { Panel } = Collapse;\r\n\r\nclass CustomerManagement extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      isLoading: false,\r\n      captchaSolved: true,\r\n      email: null,\r\n      meeting: null,\r\n      moyen: false,\r\n      report: null,\r\n      loan: null,\r\n      upload: null,\r\n      particular_modal: null,\r\n      bank_account: true,\r\n      money_wallet: false      \r\n    };\r\n\r\n    this.props.getCompanies();\r\n    this.props.getOutlayData(parseInt(localStorage.user_id, 10), undefined);\r\n\r\n\r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (err){\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingrese datos válidos dentro del formulario.\");\r\n      }else{  \r\n        if(values.phoneNumber.toString()[0] !== \"3\" || values.phoneNumber.toString().length !== 10 ){\r\n          ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingresa un número de teléfono válido.\");\r\n        }else if (values.fixedNumber.toString().length !== 7) {\r\n          ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingresa un número de teléfono fijo válido.\");\r\n        }else{  \r\n          values.birthDate = values.birthDate !== undefined ? new Date(values.birthDate._d) : null;\r\n          values.customer_initDate = values.customer_initDate !== undefined ? new Date(values.customer_initDate._d) : null;\r\n          values.expeditionDate = values.expeditionDate !== undefined ? new Date(values.expeditionDate._d) : null;\r\n\r\n          this.props.createCustomer(values);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleWallet = (e) => {\r\n    this.setState({\r\n      money_wallet: e,\r\n      bank_account: !e,\r\n    });\r\n  };\r\n\r\n  onLoadFile = () => {\r\n    this.setState({\r\n      particular_modal: false,\r\n    });\r\n    //SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El cliente ha sido creado correctamente.\");\r\n  };\r\n\r\n  onChangeFile = () => {\r\n\r\n  }\r\n\r\n  validationNumbers = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^0-9]/g, '');\r\n  };\r\n\r\n  onChangeNames = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^a-zA-Z\\s]$/g, '');\r\n  };\r\n\r\n  seeDocument = () => {\r\n\r\n    let file = \"https://drive.google.com/open?id=1P8dg2A08Sb7iZIGLKRsE4xFa_pG1CeTP\";\r\n\r\n    if (file !== null ) {\r\n      let newWindow = window.open(file, \"_blank\");\r\n      if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined') {\r\n        allowEmergingWindows();\r\n      }\r\n    } else {\r\n      WARNING_MODAL('Advertencia', 'El reporte no está disponible');\r\n    }\r\n\r\n  };\r\n\r\n  render(){\r\n\r\n    let { companyList } = this.props;\r\n    let {getFieldDecorator} = this.props.form;\r\n    let { outlayDataResponse } = this.props;\r\n    let { bankInfo, bankTypeAccountInfo, walletInfo } = outlayDataResponse;\r\n    let {bank_account, money_wallet} = this.state;\r\n    const props = {\r\n      name: 'file',\r\n      action: BaseURL + 'Customer/MultipleCreate',\r\n      headers: {\r\n        authorization: 'Bearer '+ localStorage.access_token,\r\n        \r\n      },\r\n      onChange(info) {\r\n        /*if (info.file.status !== 'uploading') {\r\n          //console.log(info.file, info.fileList);\r\n        }]*/\r\n        if (info.file.status === 'done') {\r\n          /*this.setState({\r\n            particular_modal: false\r\n          });*/\r\n          SUCCESS_MODAL(\"Acción realizada exitosamente\", \"Los clientes han sido creados exitosamente.\");\r\n        } else if (info.file.status === 'error') {\r\n          message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n      },\r\n    \r\n    };\r\n\r\n    if(JSON.stringify(this.props.outlayDataResponse) === '{}'){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                  Cargando ...\r\n                  <br/>\r\n                  <br/>\r\n                  <Spin size=\"large\" />\r\n                </div>);\r\n    }else{\r\n      return (\r\n        <div className={\"company-div\"}>\r\n            <Row gutter={8}>\r\n              <Col xs={24} sm={24} md={8} lg={14}/>\r\n              <Col xs={24} sm={12} md={8} lg={5}>\r\n                <Button icon=\"download\" \r\n                        onClick={() => this.seeDocument()}>\r\n                        Descargar formato\r\n                </Button> \r\n              </Col>\r\n              <Col xs={24} sm={12} md={8} lg={5}>\r\n                <Button className={\"create-customer-button\"} icon=\"file-excel\" \r\n                        onClick={() => this.setState({particular_modal: true})}>\r\n                        Crear múltiples clientes\r\n                </Button> \r\n              </Col>\r\n              <Modal \r\n                title=\"Crear clientes\"\r\n                visible={this.state.particular_modal}\r\n                okText={\"Cerrar\"}\r\n                cancelText={\"Cancelar\"}\r\n                width={450}\r\n                onOk={() => this.onLoadFile()}\r\n                onCancel={() => this.setState({particular_modal: false})}>\r\n                  <div>\r\n                    <div>\r\n                      Suba el archivo de Excel con los campos correspondientes para crear clientes.\r\n                      <i> Recuerde que el archivo debe tener unas condiciones y especificaciones obligatorias.</i>\r\n                      <b> Cuando agregue el archivo, será cargado instatáneamente.</b>\r\n                    </div>\r\n                      \r\n                    <br/>           \r\n                    <Upload {...props}>\r\n                      <Button>\r\n                        <Icon type=\"upload\" /> Seleccionar y cargar archivo Excel\r\n                      </Button>\r\n                    </Upload>\r\n                    <br/>\r\n                  \r\n                  </div>\r\n\r\n              </Modal>\r\n            </Row>\r\n            <Row className={\"request-row-content\"}>\r\n              <div>  \r\n                <Form>\r\n                  <Collapse defaultActiveKey={['1']} bordered={false}>\r\n                    <Panel header=\"Información personal\" key=\"1\">\r\n                      <Row gutter={20} className={\"form-request-rows\"} >\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Nombres completos\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('name',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa un nombre'}\r\n                              ]})(\r\n                                <Input onChange={(e) => this.onChangeNames(e)} className={\"form-input-number\"} placeholder={\"Nombres completos\"} />\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Apellidos completos\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('lastName',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa un apellido'}\r\n                              ]})(\r\n                                <Input  onChange={(e) => this.onChangeNames(e)} className={\"form-input-number\"} placeholder={\"Apellidos completos\"} />\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Tipo de Identificación\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('documentType',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa un tipo de identificación'}\r\n                              ]})(\r\n                                <Select placeholder={\"Tipo de documento\"} showSearch={true} allowClear={true} autoClearSearchValue={true}>\r\n                                  <Select.Option value={\"Cédula\"}>Cédula</Select.Option>\r\n                                  <Select.Option value={\"Pasaporte\"}>Pasaporte</Select.Option>\r\n                                  <Select.Option value={\"Otro\"}>Otro</Select.Option>\r\n                                </Select>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"No. de Identificación\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('identificationId',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa un número de identificación'}\r\n                              ]})(\r\n                                <Input onChange={(e) => this.validationNumbers(e)} maxLength={12} prefix={<Icon type=\"idcard\" className={'icon-prefix'} />}\r\n                                              placeholder=\"Número de documento\" className={\"input-number\"}/>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col> \r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Teléfono fijo\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('fixedNumber',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa un teléfono fijo'}\r\n                              ]})(\r\n                                <Input onChange={(e) => this.validationNumbers(e)} className={\"form-input-number\"} placeholder={\"Teléfono fijo\"} />\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Teléfono celular\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('phoneNumber',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa un teléfono celular'}\r\n                              ]})(\r\n                                <Input onChange={(e) => this.validationNumbers(e)} className={\"form-input-number\"} placeholder={\"Teléfono celular\"} />\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Correo electrónico\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('email',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa un correo electrónico'}\r\n                              ]})(\r\n                                <Input className={\"form-input-number\"} placeholder={\"Correo electrónico\"} />\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Género\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('genus',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa un correo electrónico'}\r\n                              ]})(\r\n                                <Select placeholder={\"Género\"} showSearch={true}>\r\n                                  <Select.Option value={\"Masculino\"}>Masculino</Select.Option>\r\n                                  <Select.Option value={\"Femenino\"}>Femenino</Select.Option>\r\n                                  <Select.Option value={\"Otro\"}>Otro</Select.Option>\r\n                                </Select>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Fecha de nacimiento\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('birthDate',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa un correo electrónico'}\r\n                              ]})(\r\n                                <DatePicker placeholder={\"Fecha de nacimiento\"}/>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={7} >\r\n                          <FieldTitle title={\"Fecha de expedición del documento\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('expeditionDate',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa un correo electrónico'}\r\n                              ]})(\r\n                                <DatePicker placeholder={\"Fecha de expedición\"} className={\"date-picker-expedition\"}/>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Cantidad máxima de préstamo\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('maximumAmount',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa una cantidad de préstamo'}\r\n                              ]})(\r\n                                <Input onChange={(e) => this.validationNumbers(e)} placeholder={\"Cantidad de prestámo\"} style={{width: \"100% !important\"}}/>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={5}>\r\n                          <FieldTitle title={\"Empresa\"}/>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('idCompany', {\r\n                              rules: [ \r\n                                {required: true, message: 'Por favor, ingrese su empresa.' }],\r\n                            })(\r\n                              <Select placeholder=\"Selecciona tu empresa\" allowClear={true} showSearch={true}\r\n                                notFoundContent={\"No hay empresas disponibles\"}>\r\n                                {companyList.map((type, i) => (\r\n                                  <Select.Option key={i} value={type.idCompany}>\r\n                                    {type.socialReason}\r\n                                  </Select.Option>))\r\n                                }\r\n                              </Select>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Máximo número de cuotas\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('split',\r\n                              {rules: [\r\n                                {required: true, message: 'Por favor ingresa un número de cuotas'}\r\n                              ]})(\r\n                                <Input onChange={(e) => this.validationNumbers(e)} placeholder={\"Número de cuotas\"} style={{width: \"100% !important\"}}/>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        \r\n                        <Col lg={6} md={8} sm={12} xs={12}>\r\n                          <FieldTitle title={\"Ciclo de pagos\"}/>\r\n                          <FormItem className='home-form-item'>\r\n                            {getFieldDecorator('companyPayment', {\r\n                              rules: [ \r\n                                {required: true, message: 'Por favor, ingrese su ciclo de pagos.' }],\r\n                            })(\r\n                              <Select placeholder=\"Selecciona tu ciclo de pagos\" allowClear={true} showSearch={true}>\r\n                                \r\n                                  <Select.Option key={1} value={1}>\r\n                                    {\"Ciclo de pagos 1\"}\r\n                                  </Select.Option>\r\n                                  <Select.Option key={2} value={2}>\r\n                                    {\"Ciclo de pagos 2\"}\r\n                                  </Select.Option>\r\n                                \r\n                              </Select>\r\n                            )}\r\n                          </FormItem>\r\n                        </Col>\r\n                      </Row>\r\n                    </Panel>  \r\n                    <Panel header=\"Información bancaria\" key=\"2\">\r\n                      <Row className={\"form-request-rows\"}>\r\n                        <Col xs={12} sm={12} md={8} lg={7}>\r\n                          <span className={\"type-account\"}>{\"Banco \"}<Switch onChange={this.handleWallet}/>{\" Billetera virtual\"}</span>  \r\n                        </Col>\r\n                      </Row>\r\n                      <br/>\r\n                    {\r\n                      bank_account && \r\n                        <Row gutter={12} className={\"form-request-rows\"}>\r\n                          <Col xs={12} sm={12} md={7} lg={7} >\r\n                            <FieldTitle title={\"Cuenta\"}/>\r\n                            <FormItem>\r\n                              {getFieldDecorator('accountBank',\r\n                                {\r\n                                  rules: [\r\n                                  {required: false, message: 'Por favor selecciona una cuenta'}\r\n                                ]})(\r\n                                  <Select onChange={this.changeBankName}  placeholder={\"Cuenta\"} showSearch={true} allowClear={true} autoClearSearchValue={true}>\r\n                                    {bankInfo.map((bank, i) =>(\r\n                                      <Select.Option value={bank.bankName} key={i}>\r\n                                        {bank.bankName}\r\n                                      </Select.Option>\r\n                                    ))\r\n                                    }\r\n                                  </Select>\r\n                                )\r\n                              }\r\n                            </FormItem>\r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={7} lg={7} >\r\n                            <FieldTitle title={\"Tipo de cuenta\"}/>\r\n                            <FormItem>\r\n                              {getFieldDecorator('accountType',\r\n                                { rules: [\r\n                                  {required: false, message: 'Por favor ingresa un tipo de cuenta'}\r\n                                ]})(\r\n                                  <Select placeholder={\"Tipo de cuenta\"}  showSearch={true} onChange={this.changeBankType}>\r\n                                    {bankTypeAccountInfo.map((accountType, i) =>(\r\n                                      <Select.Option value={accountType.accountTypeName} key={i}>\r\n                                        {accountType.accountTypeName}\r\n                                      </Select.Option>\r\n                                    ))\r\n                                    }\r\n                                  </Select>\r\n                                )\r\n                              }\r\n                            </FormItem>\r\n                          </Col>\r\n                          <Col xs={24} sm={24} md={10} lg={10}>\r\n                          <FieldTitle title={\"Número de cuenta\"}/>\r\n                            <FormItem >\r\n                              {getFieldDecorator('accountNumber',\r\n                                { rules: [\r\n                                  {required: false, message: 'Por favor ingresa un número de cuenta' }\r\n                                ]})(\r\n                                  <Input onChange={(e) => this.validationNumbers(e)} className={\"form-input-number\"} placeholder={\"Número de cuenta\"} \r\n                                  />\r\n                                )\r\n                              }\r\n                            </FormItem>  \r\n                          </Col>\r\n                        </Row>\r\n                      }\r\n                      {\r\n                        money_wallet &&\r\n                        <Row  gutter={12} className={\"form-request-rows\"}>\r\n                          <Col xs={12} sm={12} md={7} lg={7} >\r\n                            <FieldTitle title={\"Billetera virtual\"}/>\r\n                            <FormItem>\r\n                              {getFieldDecorator('accountBank',\r\n                                { rules: [\r\n                                  {required: false, message: 'Por favor ingresa un tipo de billetera'}\r\n                                ]})(\r\n                                  <Select placeholder={\"Tipo de billetera\"} showSearch={true} onChange={this.changeWalletType}>\r\n                                    {walletInfo.map((wallet, i) =>(\r\n                                      <Select.Option value={wallet.walletName} key={i}>\r\n                                        {wallet.walletName}\r\n                                      </Select.Option>\r\n                                    ))\r\n                                    }\r\n                                  </Select>\r\n                                )\r\n                              }\r\n                            </FormItem>\r\n                          </Col>\r\n                          <Col xs={24} sm={24} md={10} lg={10}>\r\n                          <FieldTitle title={\"Número de celular\"}/>\r\n                            <FormItem >\r\n                              {getFieldDecorator('accountNumber',\r\n                                { rules: [\r\n                                  {required: false, message: 'Por favor ingresa un número de celular' }\r\n                                ]})(\r\n                                  <InputNumber className={\"form-input-number\"} placeholder={\"Número de celular\"} \r\n                                  onChange={this.changeWalletNumber} />\r\n                                )\r\n                              }\r\n                            </FormItem>  \r\n                          </Col>\r\n                        </Row>\r\n                      }\r\n                      <Row gutter={20} className={\"form-request-rows\"}>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Tipo Contrato\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('contractType',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa un tipo de contrato'}\r\n                              ]})(\r\n                                <Select placeholder={\"Tipo de contrato\"} showSearch={true}>\r\n                                  <Select.Option value={\"Término definido\"}>Término definido</Select.Option>\r\n                                  <Select.Option value={\"Término indefinido\"}>Término indefinido</Select.Option>\r\n                                  <Select.Option value={\"Otro\"}>Otro</Select.Option>\r\n                                </Select>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Salario\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('salary',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa un salario'}\r\n                              ]})(\r\n                                <Input onChange={(e) => this.validationNumbers(e)} className={\"form-input-number\"} placeholder={\"Salario\"} formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} />\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6} >\r\n                          <FieldTitle title={\"Fecha ingreso\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('entryDate',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa una fecha'}\r\n                              ]})(\r\n                                <DatePicker className={\"form-input-number\"} placeholder={\"Fecha ingreso\"} />\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={8} lg={6}>\r\n                          <FieldTitle title={\"Cargo\"}/>\r\n                          <FormItem >\r\n                            {getFieldDecorator('profession',\r\n                              {rules: [\r\n                                {required: false, message: 'Por favor ingresa un cargo' }\r\n                              ]})(\r\n                                <Input className={\"form-input-number\"} placeholder={\"Cargo\"}/>\r\n                              )\r\n                            }\r\n                          </FormItem>  \r\n                        </Col>\r\n                      </Row>    \r\n                    </Panel>\r\n                  </Collapse>\r\n                  <Col xs={24} sm={12} md={18} lg={20}/>\r\n                  <Col xs={24} sm={12} md={6} lg={4}>\r\n                    <Button className={\"request-confirm-button\"} icon=\"plus-circle\" \r\n                            onClick={() => this.onConfirmRequest()}>\r\n                          Crear cliente\r\n                    </Button> \r\n                  </Col>\r\n                </Form>\r\n              </div>\r\n          </Row>\r\n        </div>\r\n      );\r\n    } \r\n    \r\n  };\r\n  \r\n};\r\n\r\nCustomerManagement.propTypes = {\r\n  companyList: PropTypes.array,\r\n  outlayDataResponse: PropTypes.object,\r\n  createCustomerResponse: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    companyList: state.login.companyList,\r\n    outlayDataResponse: state.customer.outlayDataResponse,\r\n    createCustomerResponse: state.admin.createCustomerResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getCompanies: ( ) => dispatch(getCompanies( )),\r\n    createCustomer: (data) => dispatch(createCustomer(data)),\r\n    getOutlayData: (customerId, token) => dispatch(getOutlayData(customerId, token)),\r\n  }\r\n};\r\n\r\nlet CustomerManagementForm = Form.create()(CustomerManagement);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerManagementForm);\r\n\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Tooltip, Icon, Button, Modal, Select, InputNumber} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport { allowEmergingWindows, WARNING_MODAL } from '../../../subcomponents/modalMessages';\r\n\r\n//Actions\r\nimport {approveCustomers} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\n\r\n//Constants\r\n//const Step = Steps.Step;\r\n\r\nclass RequestModalCard extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: null,\r\n      approve_modal: null,\r\n      card_style_requested: \"requested\",\r\n      card_style_analysis: \"analysis\",\r\n      card_style_approved: \"approved\",\r\n      card_style_rejected: \"rejected\",\r\n      reject_modal: null,\r\n    };\r\n   \r\n  };\r\n\r\n  defineBadgeName = (id) => {\r\n    if(id === 1){\r\n      return \"Solicitada\";\r\n    }else if(id === 2){\r\n      return \"Evaluada\";\r\n    }else if(id === 4){\r\n      return \"Aprobada RR.HH.\";\r\n    }else if(id === 3){\r\n      return \"Aprobada Admon.\";\r\n    }else if(id === 5){\r\n      return \"Desembolsada\";\r\n    }else if(id=== 6){\r\n      return \"Rechazada\"\r\n    }else if(id=== 7){\r\n      return \"Finalizada\"\r\n    }else if(id=== 8){\r\n      return \"Devolución bancaria\"\r\n    }\r\n  };\r\n\r\n  defineButtonClass = (id) => {\r\n    if(id === 1){\r\n      return \"#c1c1c1\";\r\n    }else if(id === 2){\r\n      return \"yellow\";\r\n    }else if(id === 3){\r\n      return \"#ffa962\";\r\n    }else if(id === 4){\r\n      return \"#62ffb5\";\r\n    }else if(id === 5){\r\n      return \"#6cff55\";\r\n    }else{\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  seeDocument = (file1, file2, file3) => {\r\n\r\n    //let url = filePath;\r\n    let baseURL = \"http://3.133.128.42:4000/\";\r\n\r\n    if (file1 !== null && file2 !== null && file3 !== null) {\r\n      let newWindow = window.open(baseURL + file1, \"_blank\");\r\n      let newWindow1 = window.open(baseURL + file2, \"_blank\");\r\n      let newWindow2 = window.open(baseURL + file3, \"_blank\");\r\n      if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined' || \r\n          !newWindow1 || newWindow1.closed || typeof newWindow1.closed === 'undefined' ||\r\n          !newWindow2 || newWindow2.closed || typeof newWindow2.closed === 'undefined') {\r\n        allowEmergingWindows();\r\n      }\r\n    } else {\r\n      WARNING_MODAL('Advertencia', 'El reporte no está disponible');\r\n    }\r\n\r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    this.props.approveCustomers(this.props.item.idNewClient, true);\r\n    this.setState({approve_modal: false});\r\n  };\r\n\r\n  onRejectRequest = () => {\r\n    this.props.approveCustomers(this.props.item.idNewClient, false);\r\n    this.setState({reject_modal: false});\r\n  };\r\n\r\n  validationInputNumbers = (e) => {\r\n    console.log(\"E\", e);\r\n    const input = e.toString();\r\n    e = input.replace(/[^0-9]/g, '');\r\n  };\r\n\r\n  render(){\r\n\r\n    let item = this.props.item;\r\n    console.log(\"DA\", item);\r\n\r\n    return (\r\n          <div key={item.key} className={\"request-state-item-requested\"}>\r\n            <Row>\r\n              <Col xs={24} sm={12} md={2} lg={2}>\r\n                  <Tooltip title=\"Detallar solicitud\">\r\n                    <Icon type={\"plus-circle\"} className={\"request-item-icon\"} onClick={() => this.setState({visible: !this.state.visible})}/> \r\n                  </Tooltip>\r\n                </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\">\r\n                <b>Nombres</b> <br/> {item.name} \r\n              </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\" >\r\n                <b>Apellidos</b> <br/>  {item.lastName}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                <b>Empresa</b><br/> {item.socialReason}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                  <b>Número Documento</b> <br/> {item.identificationId}\r\n              </Col>\r\n              <Col xs={24} sm={12} md={2} lg={1}>\r\n                <Tooltip title=\"Aprobar usuario\">\r\n                  <Icon type={\"check-circle\"} className={\"request-item-icon-approve\"} onClick={() => this.setState({approve_modal: true})}/> \r\n                </Tooltip>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={2} lg={1}>\r\n                <Tooltip title=\"Rechazar usuario\">\r\n                  <Icon type={\"close-circle\"} className={\"request-item-icon-reject\"} onClick={() => this.setState({reject_modal: true})}/> \r\n                </Tooltip>\r\n              </Col> \r\n            </Row>\r\n          \r\n          {\r\n            this.state.visible && \r\n            <div>\r\n              \r\n              <Row style={{marginTop: \"15px\", marginBottom: \"15px\"}}>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Información adicional</b>\r\n                </Col>  \r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Nombres</b><br/>\r\n                  {item.name} \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Apellidos</b><br/>\r\n                  {item.lastName}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                  <b>Empresa</b><br/>\r\n                  {item.socialReason}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                  <b>Cargo</b><br/>\r\n                  {item.profession === null || item.profession === undefined ? \"-\" : item.profession}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                  <b>Dirección</b><br/>\r\n                  {item.address}\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={8} lg={5} >\r\n                  <b>Monto</b><br/>\r\n                  <InputNumber onChange={(e) => this.validationInputNumbers(e)} min={80000} formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} className={\"amount-inputs\"} defaultValue={item.defaultAmount} placeholder=\"Monto máximo\"/>\r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={6}>\r\n                  <b>Ciclo de pagos</b><br/>\r\n                  <Select className={\"payments-select\"} defaultValue={\"Ciclo 1 - Mensual\"} placeholder=\"Selecciona el ciclo de pagos\" allowClear={true} showSearch={true}>    \r\n                    <Select.Option key={1} value={1}>\r\n                      {\"Ciclo 1 - Mensual\" }\r\n                    </Select.Option>\r\n                    <Select.Option key={2} value={2}>\r\n                      {\"Ciclo 2 - Quincenal\"}\r\n                    </Select.Option>\r\n                  </Select>\r\n                </Col>\r\n                \r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                    <b>Cuotas</b><br/>\r\n                    {item.maximumSplit}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                    <b>Cuenta</b><br/>\r\n                    {item.accountBank === null || item.profession === undefined ? \"-\" : item.accountBank}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={5}>\r\n                    <b>Número de cuenta</b><br/>\r\n                    {item.accountNumber === null || item.profession === undefined  ? \"-\" : item.accountNumber}\r\n                </Col>\r\n              </Row>\r\n              <Row style={{marginTop: \"5px\", marginBottom: \"15px\"}} gutter={4}>\r\n                <Col xs={24} sm={12} md={18} lg={16} className={\"document-col\"}>\r\n                  <Button className={\"request-document-button\"} icon=\"file\" onClick={() => this.seeDocument(item.file1, item.file2, item.file3)} >\r\n                        Ver documento\r\n                  </Button> \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={4}>\r\n                  <Button className={\"request-confirm-button\"} icon=\"check-circle\" \r\n                          onClick={() => this.setState({approve_modal: true})}>\r\n                        Aprobar\r\n                  </Button> \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={4}>\r\n                  <Button className={\"request-reject-button\"} icon=\"close-circle\" \r\n                          onClick={() => this.setState({reject_modal: true})}>\r\n                        Rechazar\r\n                  </Button> \r\n                </Col>\r\n                \r\n              </Row>\r\n            </div>\r\n          }\r\n          <Modal \r\n            title=\"Aprobar usuario\"\r\n            visible={this.state.approve_modal}\r\n            okText={\"Aprobar\"}\r\n            cancelText={\"Cancelar\"}\r\n            width={450}\r\n            onOk={() => this.onConfirmRequest()}\r\n            onCancel={() => this.setState({approve_modal: false})}>\r\n              <div>\r\n                ¿Está seguro de realizar la aprobación del cliente? Esta acción será irreversible.                  \r\n              </div>\r\n          </Modal>\r\n          <Modal \r\n            title=\"Rechazar usuario\"\r\n            visible={this.state.reject_modal}\r\n            okText={\"Rechazar\"}\r\n            cancelText={\"Cancelar\"}\r\n            width={450}\r\n            onOk={() => this.onRejectRequest()}\r\n            onCancel={() => this.setState({approve_modal: false})}>\r\n              <div>\r\n                ¿Está seguro de realizar el rechazo del cliente?. El usuario será envíado a un estado de rechazado o pendiente de evaluación particular.               \r\n              </div>\r\n          </Modal>\r\n        </div>\r\n    );\r\n  };\r\n\r\n}\r\n\r\nRequestModalCard.propTypes = {\r\n  customerList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customerList: state.admin.customerList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    approveCustomers: (client, approve) => dispatch(approveCustomers(client, approve)), \r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestModalCard);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, List, Spin, Col, Input} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Components\r\nimport RequestModalCard from \"./RequestModalCard\";\r\n\r\n//Actions\r\nimport {getAllCustomersToApprove} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\nclass ApproveCustomer extends Component{\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      name: null,\r\n      lastName: null,\r\n      socialReason: null,\r\n      identificationId: null,\r\n      email: null,\r\n    };\r\n\r\n    this.props.getAllCustomersToApprove();\r\n    this.setData = this.setData.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n  \r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          createdDate: item.createdDate,\r\n          email: item.email,\r\n          fixedNumber: item.fixedNumber,\r\n          idAccount: item.idAccount,\r\n          idNewClient: item.idNewClient,\r\n          idUser: item.idUser,\r\n          identificationId: item.identificationId,\r\n          lastName: item.lastName,\r\n          defaultAmount: item.defaultAmount,\r\n          maximumAmount: item.maximumAmount,\r\n          montlyFee: item.montlyFee,\r\n          phoneNumber: item.phoneNumber,\r\n          name: item.name,\r\n          platformState: item.platformState,\r\n          profession: item.profession,\r\n          socialReason: item.socialReason,\r\n          totalRemainder: item.totalRemainder,\r\n\r\n        };\r\n\r\n        if(this.filterData(row)) {\r\n          rows.push(row);\r\n        };\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  filterData(toCompare){\r\n    let {name, identificationId, lastName, socialReason, email} = this.state;\r\n\r\n    if(name === null && identificationId === null && lastName === null && socialReason === null && email === null){\r\n      return true;\r\n    }\r\n\r\n    if(name !== null && !toCompare.name.toString().toUpperCase().includes(name.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(identificationId !== null && !toCompare.identificationId.toString().toUpperCase().includes(identificationId.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(lastName !== null && !toCompare.lastName.toString().toUpperCase().includes(lastName.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(socialReason !== null && !toCompare.socialReason.toString().toUpperCase().includes(socialReason.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(email !== null && !toCompare.email.toString().toUpperCase().includes(email.toUpperCase())) {\r\n      return false;\r\n    }   \r\n\r\n    return true;\r\n  };\r\n\r\n  render(){\r\n    \r\n    let {name, identificationId, lastName, socialReason, email} = this.state;\r\n    let tableData = this.setData(this.props.customerListToApprove);\r\n\r\n    if(tableData === null || JSON.stringify(tableData) === '[]'){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                Cargando ...\r\n                <br/>\r\n                <br/>\r\n                <Spin size=\"large\" />\r\n              </div>);\r\n    }else{\r\n      return(\r\n        <div>\r\n          <Row gutter={8} className={\"approve-request-filter\"}>\r\n            <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n              <p className=\"field-title-visible\">Nombres </p>\r\n              <Input placeholder={\"Nombres\"} value={name} onChange={(e) => this.setState({name: e.target.value})}/>\r\n            </Col>\r\n            <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n              <p className=\"field-title-visible\">Apellidos</p>\r\n              <Input placeholder={\"Apellidos\"} value={lastName} onChange={(e) => this.setState({lastName: e.target.value})}/>\r\n            </Col>\r\n\r\n            <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n              <p className=\"field-title-visible\">No. Identificación</p>\r\n              <Input placeholder={\"No. Identificación\"} value={identificationId} onChange={(e) => this.setState({identificationId: e.target.value})}/>\r\n            </Col>\r\n\r\n            <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n              <p className=\"field-title-visible\">Empresa</p>\r\n              <Input placeholder={\"Empresa\"} value={socialReason} onChange={(e) => this.setState({socialReason: e.target.value})}/>\r\n            </Col>\r\n\r\n            <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n              <p className=\"field-title-visible\">Email</p>\r\n              <Input placeholder={\"Email\"} value={email} onChange={(e) => this.setState({email: e.target.value})}/>\r\n            </Col>\r\n          </Row>\r\n          <br/>\r\n          <Row>\r\n            <List\r\n              dataSource={tableData}\r\n              renderItem={(item, k) => (\r\n                <List.Item className={\"request-state-list-item\"}>\r\n                    <RequestModalCard item={item} key={k}/>\r\n                </List.Item>\r\n              )}\r\n              locale={{emptyText: \"No hay clientes para aprobar.\"}}\r\n              />\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\nApproveCustomer.propTypes = {\r\n  customerListToApprove: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customerListToApprove: state.admin.customerListToApprove,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllCustomersToApprove: ( ) => dispatch(getAllCustomersToApprove( )),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ApproveCustomer);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Icon, Tooltip, Modal, Input, InputNumber} from 'antd';\r\nimport PropTypes from \"prop-types\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\n//Actions\r\nimport {activateCustomer, updateCustomer} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Styles\r\n\r\nclass TableButtons extends Component {\r\n  \r\n  constructor(props){\r\n    \r\n    super(props);\r\n    \r\n    this.state = {\r\n      name: null,\r\n      lastName: null,\r\n      identificationId: null, \r\n      profession: null,\r\n      socialReason: null, \r\n      montlyFee: null,\r\n      maximumAmount: null, \r\n      email: null,\r\n      phoneNumber: null,\r\n      loading: false,\r\n    };\r\n\r\n    this.inputServiceName = this.inputServiceName.bind(this);\r\n    this.inputServiceTime = this.inputServiceTime.bind(this);\r\n    this.inputService = this.inputService.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    \r\n  };\r\n\r\n  inputServiceName(e, service){\r\n    this.setState({\r\n      [service]: e.target.value,\r\n    });    \r\n  };\r\n\r\n  inputService(e, service){\r\n    this.setState({\r\n      [service]: e,\r\n    });\r\n  };\r\n\r\n  inputServiceTime(e){\r\n    let item = e;\r\n    this.props.activateCustomer(item.idClient, parseInt(item.platformState, 10) === 1 ? false : true);    \r\n  };\r\n\r\n  handleEdit(item){\r\n    let data = {\r\n      name: this.state.name===null ? item.name : this.state.name,\r\n      lastName: this.state.lastName===null ? item.lastName : this.state.lastName,\r\n      identificationId: this.state.identificationId===null ? item.identificationId : this.state.identificationId,\r\n      profession: this.state.profession===null ? item.profession : this.state.profession,\r\n      montlyFee: this.state.montlyFee===null ? item.montlyFee : this.state.montlyFee,\r\n      maximumAmount: this.state.maximumAmount===null ? item.maximumAmount : this.state.maximumAmount, \r\n      email: this.state.email===null ? item.email : this.state.email,\r\n      phoneNumber: this.state.phoneNumber===null ? item.phoneNumber : this.state.phoneNumber,\r\n      idClient: item.idClient,\r\n      idUser: item.idUser,\r\n      idAccount: item.idAccount,\r\n    };\r\n    this.props.updateCustomer(data);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Row gutter={12}>\r\n          <Col span={6}  className={\"delete-col\"}>\r\n            <Tooltip title={\"Editar cliente\"}>\r\n              <Icon className={\"icon-button delete-icon\"} onClick={() => this.setState({visible: true})}\r\n                type={\"edit\"} style={{ fontSize: '16px'}}/>\r\n            </Tooltip>\r\n          </Col>\r\n          <Col span={2}/>\r\n          <Col span={6}  className={\"delete-col\"}>\r\n            <Tooltip title={\"Activar/Desactivar cliente\"}>\r\n              <Icon className={\"icon-button delete-icon\"} onClick={() => this.inputServiceTime(this.props.item)}\r\n                type={\"poweroff\"} style={{ fontSize: '16px'}}/>\r\n            </Tooltip>\r\n          </Col>          \r\n        </Row>\r\n        <Modal\r\n            title={\"Editar cliente\"}\r\n            visible={this.state.visible}\r\n            okText={\"Guardar\"}\r\n            cancelText={\"Cancelar\"}\r\n            width={700}\r\n            onOk={() => this.handleEdit(this.props.item)}\r\n            onCancel={() => this.setState({visible: false})}\r\n            keyboard={!this.state.loading}\r\n            closable={!this.state.loading}>\r\n            <Row gutter={12}>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Nombres:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.name} placeholder={\"Nombres\"} onChange={(e) => this.inputServiceName(e, 'name')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Apellidos:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.lastName} placeholder={\"Apellidos\"} onChange={(e) => this.inputServiceName(e, 'lastName')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                No. Identificación:\r\n                <br/>\r\n                <InputNumber disabled={parseInt(localStorage.role_id, 10) === 2} className={\"company-edit-nit\"} defaultValue={this.props.item.identificationId} onChange={(e) => this.inputService(e, 'identificationId')} placeholder={\"No. Identificación\"}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Correo electrónico:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.email} placeholder={\"Correo electrónico\"} onChange={(e) => this.inputServiceName(e, 'email')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Profesión:\r\n                <br/>\r\n                <Input defaultValue={this.props.item.profession} placeholder={\"Profesión\"} onChange={(e) => this.inputServiceName(e, 'profession')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Teléfono celular:\r\n                <br/>\r\n                <InputNumber className={\"company-edit-nit\"} defaultValue={this.props.item.phoneNumber} placeholder={\"Número celular\"} onChange={(e) => this.inputService(e, 'phoneNumber')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Máxima cantidad a prestar:\r\n                <br/>\r\n                <InputNumber className={\"company-edit-nit\"} defaultValue={this.props.item.maximumAmount} placeholder={\"Máximo préstamo\"} onChange={(e) => this.inputService(e, 'maximumAmount')}/>\r\n              </Col>\r\n              <Col xxl={12} lg={8} md={12} sm={12} xs={12}>\r\n                Cantidad de cuotas máxima:\r\n                <br/>\r\n                <InputNumber className={\"company-edit-nit\"} defaultValue={this.props.item.montlyFee} placeholder={\"Cantidad de cuotas\"} onChange={(e) => this.inputService(e, 'montlyFee')}/>\r\n              </Col>\r\n              \r\n            </Row>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nTableButtons.propTypes = {\r\n  updateServices: PropTypes.func,\r\n  deleteServices: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    activateCustomer: (clientId, status) => dispatch(activateCustomer(clientId, status)),\r\n    updateCustomer: (data) => dispatch(updateCustomer(data)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableButtons);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Divider, Card, Input, Table, Spin} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Components\r\nimport TableButtons from './ServiceTableButtons';\r\n\r\n//Actions\r\nimport {getAllCustomers} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Constants\r\nconst table = [\r\n  {\r\n    title: <div>Nombres</div>,\r\n    dataIndex: 'name',\r\n    width: \"120px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.name.localeCompare(b.name)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>No. Identificación</div>,\r\n    dataIndex: 'identificationId',\r\n    width: \"80px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.identificationId.toString().localeCompare(b.identificationId.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Correo Electrónico</div>,\r\n    dataIndex: 'email',\r\n    width: \"100px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.email.localeCompare(b.email)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Creación</div>,\r\n    dataIndex: 'createdDate',\r\n    width: \"80px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text.split(\"T\")[0]}</div>,\r\n    sorter: (a, b) =>{ return a.createdDate.localeCompare(b.createdDate)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Estado</div>,\r\n    dataIndex: 'platformState',\r\n    width: \"50px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.platformState.localeCompare(b.platformState)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Empresa</div>,\r\n    dataIndex: 'socialReason',\r\n    width: \"80px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.socialReason.localeCompare(b.socialReason)},\r\n  },\r\n  {\r\n    title: \" \",\r\n    dataIndex: 'actions',\r\n    width: \"50px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-div\"}>{text}</div>,\r\n  } \r\n];\r\n\r\n//Functions\r\nfunction itemRender(current, type, originalElement) {\r\n  if (type === 'prev' || type === 'Previous Page') {\r\n    return <span title={'Anterior'} className={\"item-renderer\"}>{\"<\"}</span>;\r\n  } if (type === 'next') {\r\n    return <span title={'Siguiente'} className={\"item-renderer\"}>{\">\"}</span>;\r\n  }\r\n  return originalElement;\r\n};\r\n\r\nclass CustomerTable extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      name: null, \r\n      identificationId: null,\r\n      email: null, \r\n      createdDate: null,\r\n      totalRemainder: null,\r\n      socialReason: null\r\n    };\r\n\r\n    this.setData = this.setData.bind(this);\r\n    this.inputLinkName = this.inputLinkName.bind(this);\r\n\r\n    this.props.getAllCustomers();\r\n\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          name: item.name + \" \" + item.lastName,\r\n          identificationId: item.identificationId,\r\n          email: item.email,\r\n          createdDate: item.createdDate,\r\n          totalRemainder: item.totalRemainder,\r\n          socialReason: item.socialReason,\r\n          platformState: parseInt(item.platformState, 10) === 1 ? \"Activo\" : \"Inactivo\",\r\n          actions: <TableButtons item={item}/>\r\n        };\r\n\r\n        if(this.filterData(row)) {\r\n          rows.push(row);\r\n        };\r\n\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  filterData(toCompare){\r\n    let {name, identificationId, email, totalRemainder, socialReason} = this.state;\r\n\r\n    if(name === null && identificationId === null && email === null && totalRemainder === null && socialReason === null){\r\n      return true;\r\n    }\r\n\r\n    if(socialReason !== null && !toCompare.socialReason.toString().toUpperCase().includes(socialReason.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(name !== null && !toCompare.name.toString().toUpperCase().includes(name.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(identificationId !== null && !toCompare.identificationId.toString().toUpperCase().includes(identificationId.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(email !== null && !toCompare.email.toString().toUpperCase().includes(email.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(totalRemainder !== null && !toCompare.totalRemainder.toString().toUpperCase().includes(totalRemainder.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  inputLinkName(e){\r\n    this.setState({\r\n      linkName: e.target.value,\r\n    });    \r\n  };\r\n\r\n  render() {\r\n\r\n    let {name, identificationId, email, socialReason} = this.state;\r\n    let tableData = this.setData(this.props.customerList);\r\n  \r\n    if(this.props.customerList === null){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                  Cargando ...\r\n                  <br/>\r\n                  <br/>\r\n                  <Spin size=\"large\" />\r\n                </div>);\r\n    }else{\r\n      return (\r\n        <div >\r\n          <Row className={\"social-row-content\"}>\r\n            <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n              <Card className={\"transactions-card\"}>\r\n                <Row gutter={6}>\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={7}>\r\n                    <p className=\"field-title-visible\">Nombres: </p>\r\n                    <Input placeholder={\"Nombres\"} value={name} onChange={(e) => this.setState({name: e.target.value})}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                    <p className=\"field-title-visible\">No. Identificación</p>\r\n                    <Input placeholder={\"No. Identificación\"} value={identificationId} onChange={(e) => this.setState({identificationId: e.target.value})}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\">Correo electrónico</p>\r\n                    <Input placeholder={\"Correo electrónico\"} value={email} onChange={(e) => this.setState({email: e.target.value})}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\">Empresa</p>\r\n                    <Input placeholder={\"Empresa\"} value={socialReason} onChange={(e) => this.setState({socialReason: e.target.value})}/>\r\n                  </Col>\r\n\r\n                </Row>\r\n                <Divider className={\"second-divider\"}/>\r\n                  <Table className={\"new-table\"} dataSource={tableData} columns={table} rowKey={'key'}\r\n                    locale={{ emptyText: 'No hay clientes todavía' }} pagination={{ itemRender: itemRender, showSizeChanger: true,\r\n                    pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"] }} size={'small'} scroll={{x:'500px'|true}}/>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n}\r\n\r\nCustomerTable.propTypes = {\r\n  customerList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customerList: state.admin.customerList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllCustomers: ( ) => dispatch(getAllCustomers( )),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerTable);","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Tabs, Icon} from 'antd';\r\n\r\n//Components\r\nimport CustomerManagement from './create/CreateCustomer';\r\nimport ApproveCustomer from './approve/ApproveCustomer';\r\nimport CustomerTable from './list/CustomerTable';\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\n\r\n//Assets\r\n\r\n//Constants\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass Customer_Management extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"admin-div\"}>\r\n        <Row>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <h2 className={'header-terms-title'}>Gestionar clientes</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className={\"admin-row-content\"}>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane tab={<span> <Icon type=\"unordered-list\" />Ver clientes</span>} key=\"1\">\r\n              <CustomerTable/>\r\n            </TabPane>            \r\n            <TabPane tab={<span> <Icon type=\"usergroup-add\" /> Crear cliente </span>} key=\"2\">\r\n              <CustomerManagement/>\r\n            </TabPane>\r\n            <TabPane tab={<span> <Icon type=\"check-circle\" /> Aprobar cliente </span>} key=\"3\">\r\n              <ApproveCustomer/>\r\n            </TabPane>\r\n          </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Customer_Management;","//Subcomponents\r\nimport request from '../requestWrapper';\r\n\r\nfunction approveorRejectRequest(data){\r\n  return request({\r\n    url: '/Request/ApproveorReject',\r\n    method: 'PUT',\r\n    headers:{\r\n      requestid: data.requestId,\r\n      approve: data.approve,\r\n      transactionCode: data.transactionCode,\r\n      text: data.text,\r\n    }\r\n  });\r\n};\r\n\r\nfunction getAllCustomer(companyId){\r\n  return request({\r\n    url: '/Customer/GetAll',\r\n    method: 'GET',\r\n    headers:{\r\n      companyId: companyId\r\n    }\r\n  });\r\n};\r\n\r\nfunction getReportByCustomer(customerId){\r\n  return request({\r\n    url: '/Report/GetReportByCustomer',\r\n    method: 'GET',\r\n    headers:{\r\n      customerId: customerId\r\n    }\r\n  });\r\n};\r\n\r\nfunction getReportByCompany(companyId){\r\n  return request({\r\n    url: '/Report/GetReportByCompany',\r\n    method: 'GET',\r\n    headers:{\r\n      companyId: companyId\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst generalService = {\r\n  approveorRejectRequest, getAllCustomer, getReportByCustomer, \r\n  getReportByCompany\r\n};\r\n\r\nexport default generalService;","///Types\r\nimport {generalTypes as C} from '../../types';\r\n\r\n//Services\r\nimport generalServices from '../../../../services/general/generalServices';\r\n\r\n//Subcomponents\r\nimport { ERROR_MODAL, SUCCESS_MODAL } from '../../../../ui/components/subcomponents/modalMessages';\r\n\r\n//Actions\r\nimport {getAllRequestToOutLay, getAllRequestToApprove} from '../admin/adminActions';\r\n\r\nexport const approveorRejectRequest = (data, userId) => {\r\n  return dispatch => {\r\n    return generalServices.approveorRejectRequest(data)\r\n      .then(response => {\r\n        dispatch(getAllRequestToOutLay(userId));\r\n        dispatch(getAllRequestToApprove());\r\n        dispatch({\r\n          type: C.APPROVE_REJECT_REQUEST,\r\n          payload: response.data\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada exitosamente\", response.data.message)\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.APPROVE_REJECT_REQUEST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al aprobar o rechazar la solicitud', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const approveorRejectRequestByCompany = (data, userId) => {\r\n  return dispatch => {\r\n    return generalServices.approveorRejectRequest(data)\r\n      .then(response => {\r\n        dispatch(getAllRequestToApprove());\r\n        dispatch({\r\n          type: C.APPROVE_REJECT_REQUEST,\r\n          payload: response.data\r\n        });\r\n        SUCCESS_MODAL(\"Acción realizada exitosamente\", \"La solicitud ha sido aprobada exitosamente.\")\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.APPROVE_REJECT_REQUEST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al aprobar o rechazar la solicitud', err.data.message);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getAllCustomer = (companyId) => {\r\n  return dispatch => {\r\n    return generalServices.getAllCustomer(companyId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_CUSTOMER_LIST,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_CUSTOMER_LIST,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer la lista de clientes', err);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getReportByCustomer = (customerId) => {\r\n  return dispatch => {\r\n    return generalServices.getReportByCustomer(customerId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_CUSTOMER_REPORT,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_CUSTOMER_REPORT,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer el reporte del cliente', err);\r\n      });\r\n  }\r\n};\r\n\r\nexport const getReportByCompany = (companyId) => {\r\n  return dispatch => {\r\n    return generalServices.getReportByCompany(companyId)\r\n      .then(response => {\r\n        dispatch({\r\n          type: C.GET_COMPANY_REPORT,\r\n          payload: response.data\r\n        });\r\n      }).catch(err => {\r\n        dispatch({\r\n          type: C.GET_COMPANY_REPORT,\r\n          payload: err,\r\n        });\r\n        ERROR_MODAL('Error al traer el reporte de la empresa', err);\r\n      });\r\n  }\r\n};\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Tooltip, Icon, Divider, Steps, Badge, Button, Modal, Form, Select} from 'antd';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\nimport { allowEmergingWindows, WARNING_MODAL} from '../../../subcomponents/modalMessages';\r\n\r\n//Actions\r\nimport {approveorRejectRequest} from \"../../../../../store/redux/actions/general/generalActions\";\r\n\r\n//Constants\r\nconst Step = Steps.Step;\r\n//const TextArea = Input.TextArea;\r\n\r\nclass RequestStateModal extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: null,\r\n      approve_modal: null,\r\n      card_style_requested: \"requested\",\r\n      card_style_analysis: \"analysis\",\r\n      card_style_approved: \"approved\",\r\n      card_style_rejected: \"rejected\",\r\n      reject_modal: null,\r\n      text: \"\",\r\n    };\r\n    \r\n  };\r\n\r\n  defineBadgeName = (id) => {\r\n    if(id === 1){\r\n      return \"Solicitada\";\r\n    }else if(id === 2){\r\n      return \"Evaluada\";\r\n    }else if(id === 3){\r\n      return \"Aprobada RR.HH.\";\r\n    }else if(id === 4){\r\n      return \"Aprobada Admon.\";\r\n    }else if(id === 5){\r\n      return \"Desembolsada\";\r\n    }else if(id=== 6){\r\n      return \"Rechazada\"\r\n    }\r\n  };\r\n\r\n  defineButtonClass = (id) => {\r\n    if(id === 1){\r\n      return \"#c1c1c1\";\r\n    }else if(id === 2){\r\n      return \"yellow\";\r\n    }else if(id === 3){\r\n      return \"#ffa962\";\r\n    }else if(id === 4){\r\n      return \"#62ffb5\";\r\n    }else if(id === 5){\r\n      return \"#6cff55 \";\r\n    }else if(id === 6){\r\n      return \"#ff4747\";\r\n    }else{\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  seeDocument = (filePath) => {\r\n\r\n    let url = filePath;\r\n\r\n    let baseURL = \"http://3.133.128.42:4000\";\r\n\r\n    if (url !== null) {\r\n      let newWindow = window.open(baseURL + filePath, \"blank\");\r\n      if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined') {\r\n        allowEmergingWindows();\r\n      }\r\n    } else {\r\n      WARNING_MODAL('Advertencia', 'El reporte no está disponible');\r\n    }\r\n\r\n  };\r\n\r\n  onConfirmRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: true,\r\n    };\r\n    this.props.approveorRejectRequest(data, localStorage.user_id);\r\n    this.setState({approve_modal: false});\r\n  };\r\n\r\n  onRejectRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: false,\r\n      text: this.state.text\r\n    };\r\n    //console.log(\"D\", data);\r\n    this.props.approveorRejectRequest(data, localStorage.user_id);\r\n    this.setState({reject_modal: false});\r\n  };\r\n\r\n  inputChange = (e) => {\r\n\r\n    let value = e;\r\n    this.setState({\r\n      text: value,\r\n    });\r\n};\r\n\r\n  render(){\r\n\r\n    let item = this.props.item;\r\n    //let {text} = this.state;\r\n    \r\n    return (\r\n        <Badge count={this.defineBadgeName(item.requestStateId)} style={{backgroundColor: this.defineButtonClass(item.idRequestState), color: \"black\"} }>\r\n          <div key={item.key} className={\"request-state-item-requested\"}>\r\n            <Row>\r\n              <Col xs={24} sm={12} md={2} lg={2}>\r\n                  <Tooltip title=\"Detallar solicitud\">\r\n                    <Icon type={\"plus-circle\"} className={\"request-item-icon\"} onClick={() => this.setState({visible: !this.state.visible})}/> \r\n                  </Tooltip>\r\n                </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\">\r\n                <b>Número de Solicitud</b> <br/><br/>\r\n                {\"Solicitud No. \" + item.idRequest} \r\n              </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\" >\r\n                  <b>Estado</b> <br/><br/>  {this.defineBadgeName(item.idRequestState)}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                  <b>Fecha de Solicitud</b> <br/><br/> {(item.createdDate).split(\"T\")[0]}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                  <b>Monto</b> <br/><br/>\r\n                  <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                      value={item.quantity} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={2} lg={1}>\r\n                <Tooltip title=\"Aprobar solicitud\">\r\n                  <Icon type={\"check-circle\"} className={\"request-item-icon-approve\"} onClick={() => this.setState({approve_modal: true})}/> \r\n                </Tooltip>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={2} lg={1}>\r\n                <Tooltip title=\"Rechazar solicitud\">\r\n                  <Icon type={\"close-circle\"} className={\"request-item-icon-reject\"} onClick={() => this.setState({reject_modal: true})}/> \r\n                </Tooltip>\r\n              </Col> \r\n            </Row>\r\n          \r\n          {\r\n            this.state.visible && \r\n            <div>\r\n              <Row>\r\n                <Divider/>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Flujo de aprobación</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Steps current={item.idRequestState-1} size=\"small\" className={\"request-state-steps\"}>\r\n                  <Step title=\"Solicitada\"/>\r\n                  <Step title=\"Evaluada\"/>\r\n                  <Step title=\"Aprobar RR.H H.\"/>\r\n                  <Step title=\"Aprobar Admon.\"/>                 \r\n                  <Step title=\"Desembolsada\"/>\r\n                  \r\n                </Steps>\r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Información adicional</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={8} lg={6} >\r\n                  <b>Nombres</b><br/><br/>\r\n                  {item.name + \" \" + item.lastName} \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Cédula</b><br/><br/>\r\n                  {item.identificationId}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                  <b>Empresa</b><br/><br/>\r\n                  {item.socialReason}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                  <b>Saldo Usuario</b><br/><br/>\r\n                    <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                    value={item.totalRemainder} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/> \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Valor total</b><br/><br/>\r\n                  <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                      value={item.quantity+item.interestValue+item.administrationValue} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/> \r\n                </Col>\r\n                \r\n              </Row>\r\n              <br/>\r\n              <br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={7} lg={5}>\r\n                    <b>Teléfono</b><br/><br/>\r\n                    {item.phoneNumber}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={3} >\r\n                    <b>Cuotas</b><br/><br/>\r\n                    {item.split}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={5}>\r\n                    <b>Cuenta</b><br/><br/>\r\n                    {item.account}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                    <b>Tipo de Cuenta</b><br/><br/>\r\n                    {item.accountType === \"null\" ? \"-\" : item.accountType}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                    <b>Número de cuenta</b><br/><br/>\r\n                    {item.accountNumber}\r\n                </Col>\r\n              </Row>\r\n              <br/><br/>\r\n              <Row gutter={4}>\r\n                <Col xs={24} sm={12} md={18} lg={14} className={\"document-col\"}>\r\n                  <Button className={\"request-document-button\"} icon=\"file\" onClick={() => this.seeDocument(item.filePath)} >\r\n                        Ver documento\r\n                  </Button> \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={5}>\r\n                  <Button className={\"request-reject-button\"} icon=\"close-circle\" \r\n                          onClick={() => this.setState({reject_modal: true})}>\r\n                        Rechazar crédito\r\n                  </Button> \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={5}>\r\n                  <Button className={\"request-confirm-button\"} icon=\"check-circle\" \r\n                          onClick={() => this.setState({approve_modal: true})}>\r\n                        Aprobar crédito\r\n                  </Button> \r\n                </Col>\r\n                \r\n              </Row>\r\n            </div>\r\n          }\r\n\r\n          <Modal \r\n            title=\"Aprobar crédito\"\r\n            visible={this.state.approve_modal}\r\n            okText={\"Aprobar\"}\r\n            cancelText={\"Cancelar\"}\r\n            width={450}\r\n            onOk={() => this.onConfirmRequest(item.idRequest)}\r\n            onCancel={() => this.setState({approve_modal: false})}>\r\n              <div>\r\n                ¿Está seguro de realizar la aprobación del crédito? Esta acción será irreversible.                  \r\n              </div>\r\n\r\n          </Modal>\r\n          \r\n          <Modal \r\n            title=\"Rechazar crédito\"\r\n            visible={this.state.reject_modal}\r\n            okText={\"Rechazar\"}\r\n            cancelText={\"Atrás\"}\r\n            width={450}\r\n            onOk={() => this.onRejectRequest(item.idRequest)}\r\n            onCancel={() => this.setState({reject_modal: false})}\r\n            okButtonProps={{ disabled: !(this.state.text.length >= 20) }}>\r\n              <Form>\r\n                <p>¿Está seguro de realizar el rechazo del crédito? Esta acción será irreversible.\r\n                Si es así, especifique a continuación la razón por la cual desea rechazar la solicitud.</p>\r\n                <br/>\r\n                <Select placeholder={\"Elija una opción de rechazo\"} onChange={e => this.inputChange(e)} onshowSearch={true} allowClear={true} autoClearSearchValue={true}>\r\n                  <Select.Option value={\"Documentos Alterados\"}>Documentos Alterados</Select.Option>\r\n                  <Select.Option value={\"No se encuentra en base de datos de la empresa\"}>No se encuentra en base de datos de la empresa</Select.Option>\r\n                  <Select.Option value={\"No cuenta con capacidad de endeudamiento\"}>No cuenta con capacidad de endeudamiento</Select.Option>\r\n                </Select>\r\n              </Form>\r\n\r\n\r\n          </Modal>\r\n        </div>\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n}\r\n\r\nRequestStateModal.propTypes = {\r\n  customerList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customerList: state.admin.customerList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //getAllRequestToApprove: () => dispatch(getAllRequestToApprove( )),\r\n    approveorRejectRequest: (data, userId) => dispatch(approveorRejectRequest(data, userId)),    \r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestStateModal);","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Row, List, Spin, Col, Input} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport RequestModal from \"./RequestStateModal\";\r\n\r\n//Actions\r\nimport {getAllRequestToApprove} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\nimport { SUCCESS_MODAL } from '../../../subcomponents/modalMessages';\r\n\r\nclass ApproveRequest extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      visible: null,\r\n      idRequest: null,\r\n      idRequestState: null,\r\n      createdDate: null,\r\n      quantity: null,\r\n      identificationId: null,\r\n      requestStateName: null\r\n    };\r\n\r\n    this.props.getAllRequestToApprove();\r\n    this.setData = this.setData.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n\r\n  };\r\n\r\n  onChangeMoyen = (e) => {\r\n    this.setState({\r\n      moyen: true\r\n    }); \r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El préstamo ha sido solicitado correctamente.\");\r\n    this.setState({\r\n      loan: true\r\n    });\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          idRequest: item.idRequest,\r\n          idRequestState: item.idRequestState,\r\n          createdDate: item.createdDate,\r\n          quantity: item.quantity,\r\n          interestValue: item.interestValue,\r\n          administrationValue: item.administrationValue,\r\n          totalRemainder: item.totalRemainder,\r\n          identificationId: item.identificationId,\r\n          requestStateName: item.requestStateName,\r\n          lastName: item.lastName,\r\n          name: item.name,\r\n          Company_idCompany: item.Company_idCompany,\r\n          socialReason: item.socialReason,\r\n          profession: item.profession,\r\n          split: item.split,\r\n          account: item.account,\r\n          accountType: item.accountType,\r\n          accountNumber: item.accountNumber,\r\n          phoneNumber: item.phoneNumber,\r\n          filePath: item.filePath,\r\n        };\r\n\r\n        if(this.filterData(row)) {\r\n          rows.push(row);\r\n        };\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  filterData(toCompare){\r\n    let {idRequest, identificationId, requestStateName, quantity, createdDate} = this.state;\r\n\r\n    if(idRequest === null && identificationId === null && quantity === null && requestStateName === null && createdDate === null){\r\n      return true;\r\n    }\r\n\r\n    if(idRequest !== null && !toCompare.idRequest.toString().toUpperCase().includes(idRequest.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(identificationId !== null && !toCompare.identificationId.toString().toUpperCase().includes(identificationId.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(requestStateName !== null && !toCompare.requestStateName.toString().toUpperCase().includes(requestStateName.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(quantity !== null && !toCompare.quantity.toString().toUpperCase().includes(quantity.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(createdDate !== null && !toCompare.createdDate.toString().toUpperCase().includes(createdDate.toUpperCase())) {\r\n      return false;\r\n    }   \r\n\r\n    return true;\r\n  };\r\n\r\n  render(){\r\n\r\n    let {idRequest, identificationId, requestStateName, quantity, createdDate} = this.state;\r\n    let tableData = this.setData(this.props.requestResponse);\r\n    console.log(\"JSON\", tableData, JSON.stringify(tableData));\r\n    \r\n    if(tableData === null || tableData === undefined || JSON.stringify(tableData) === '[]'){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                Cargando ...\r\n                <br/>\r\n                <br/>\r\n                <Spin size=\"large\" />\r\n              </div>);\r\n    }else{\r\n      return (\r\n        <div className={\"approve-request-state-div\"}>\r\n          \r\n          <Row gutter={8} className={\"approve-request-filter\"}>\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n                  <p className=\"field-title-visible\">Número solicitud </p>\r\n                  <Input placeholder={\"Número solicitud\"} value={idRequest} onChange={(e) => this.setState({idRequest: e.target.value})}/>\r\n                </Col>\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                  <p className=\"field-title-visible\">No. Cédula</p>\r\n                  <Input placeholder={\"No. de cédula\"} value={identificationId} onChange={(e) => this.setState({identificationId: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                  <p className=\"field-title-visible\">Estado</p>\r\n                  <Input placeholder={\"Estado\"} value={requestStateName} onChange={(e) => this.setState({requestStateName: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n                  <p className=\"field-title-visible\">Cantidad</p>\r\n                  <Input placeholder={\"Cantidad\"} value={quantity} onChange={(e) => this.setState({quantity: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                  <p className=\"field-title-visible\">Fecha Solicitud</p>\r\n                  <Input placeholder={\"Fecha Solicitud\"} value={createdDate} onChange={(e) => this.setState({createdDate: e.target.value})}/>\r\n                </Col>\r\n              </Row>\r\n                <br/>\r\n            <Row>\r\n            <List dataSource={tableData}\r\n                  renderItem={(item, k) => (\r\n                    <List.Item className={\"request-state-list-item\"}>\r\n                        <RequestModal item={item} key={k}/>\r\n                    </List.Item>\r\n                  )}\r\n                  locale={{emptyText: \"No hay solicitudes para aprobar\"}}/>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  }; \r\n}\r\n\r\nApproveRequest.propTypes = {\r\n  requestResponse: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    requestResponse: state.admin.requestResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllRequestToApprove: () => dispatch(getAllRequestToApprove()),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ApproveRequest);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Tooltip, Icon, Divider, Steps, Badge, Button, Modal, Input} from 'antd';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport FieldTitle from '../../../subcomponents/FieldTitle';\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\n//import { SUCCESS_MODAL } from '../../../subcomponents/modalMessages';\r\n\r\nimport {approveorRejectRequest} from \"../../../../../store/redux/actions/general/generalActions\";\r\n\r\n//Constants\r\nconst Step = Steps.Step;\r\n\r\nclass RequestOutLayState extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: null,\r\n      approve_modal: null,\r\n      transactionCode: null,\r\n      card_style_requested: \"requested\",\r\n      card_style_analysis: \"analysis\",\r\n      card_style_approved: \"approved\",\r\n      card_style_rejected: \"rejected\",\r\n    };\r\n    \r\n  };\r\n\r\n  defineBadgeName = (id) => {\r\n    if(id === 1){\r\n      return \"Solicitada\";\r\n    }else if(id === 2){\r\n      return \"Evaluada\";\r\n    }else if(id === 3){\r\n      return \"Aprobada RR.HH.\";\r\n    }else if(id === 4){\r\n      return \"Aprobada Admon.\";\r\n    }else if(id === 5){\r\n      return \"Desembolsada\";\r\n    }else if(id=== 6){\r\n      return \"Rechazada\"\r\n    }\r\n  };\r\n\r\n  defineButtonClass = (id) => {\r\n    if(id === 1){\r\n      return \"#c1c1c1\";\r\n    }else if(id === 2){\r\n      return \"yellow\";\r\n    }else if(id === 3){\r\n      return \"#ffa962\";\r\n    }else if(id === 4){\r\n      return \"#62ffb5\";\r\n    }else if(id === 5){\r\n      return \"#6cff55 \";\r\n    }else if(id === 6){\r\n      return \"#83ff62 \";\r\n    }else{\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  onConfirmRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: true,\r\n      transactionCode: this.state.transactionCode\r\n    };\r\n    this.props.approveorRejectRequest(data, localStorage.user_id);\r\n    this.setState({approve_modal: false});\r\n  };\r\n\r\n  onChangeTransactionCode = (e) => {\r\n    this.setState({\r\n      transactionCode: e.target.value\r\n    });\r\n  };\r\n\r\n  onRejectRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: false,\r\n      transactionCode: this.state.transactionCode\r\n    };\r\n    //console.log(\"D\", data);\r\n    this.props.approveorRejectRequest(data, localStorage.user_id);\r\n    this.setState({approve_modal: false});\r\n  };\r\n\r\n  render(){\r\n\r\n    let item = this.props.item;\r\n    let {transactionCode} = this.state;\r\n    //console.log(transactionCode);\r\n\r\n    return (\r\n      <Badge count={this.defineBadgeName(item.requestStateId)} style={{backgroundColor: this.defineButtonClass(item.requestStateId), color: \"black\"} }>\r\n            <div key={item.key} className={\"request-state-item-requested\"}>\r\n              <Row>\r\n                <Col xs={24} sm={12} md={2} lg={2}>\r\n                    <Tooltip title=\"Detallar solicitud\">\r\n                      <Icon type={\"plus-circle\"} className={\"request-item-icon\"} onClick={() => this.setState({visible: !this.state.visible})}/> \r\n                    </Tooltip>\r\n                  </Col>\r\n                <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\">\r\n                  <b>Número de Solicitud</b> <br/><br/>\r\n                  {\"Solicitud No. \" + item.idRequest} \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\" >\r\n                    <b>Estado</b> <br/><br/>  {this.defineBadgeName(item.idRequestState)}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                    <b>Fecha de Solicitud</b> <br/><br/> {(item.createdDate).split(\"T\")[0]}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                    <b>Valor Total</b> <br/><br/>\r\n                    <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                        value={item.quantity} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={2} lg={1}>\r\n                  <Tooltip title=\"Desembolsar solicitud\">\r\n                    <Icon type={\"check-circle\"} className={\"request-item-icon-approve\"} onClick={() => this.setState({approve_modal: true})}/> \r\n                  </Tooltip>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={2} lg={1}>\r\n                  <Tooltip title=\"Rechazar solicitud\">\r\n                    <Icon type={\"close-circle\"} className={\"request-item-icon-reject\"} onClick={() => this.setState({reject_modal: true})}/> \r\n                  </Tooltip>\r\n                </Col> \r\n              </Row>\r\n            \r\n            {\r\n              this.state.visible && \r\n              <div>\r\n                <Row>\r\n                  <Divider/>\r\n                  <Col xs={24} sm={12} md={8} lg={6} >\r\n                    <b>Flujo de aprobación</b>\r\n                  </Col>  \r\n                </Row>\r\n                <br/><br/>\r\n                <Row>\r\n                  <Steps current={item.idRequestState-1} size=\"small\" className={\"request-state-steps\"}>\r\n                    <Step title=\"Solicitada\"/>\r\n                    <Step title=\"Evaluada\"/>\r\n                    <Step title=\"Aprobar RR.H H.\"/>\r\n                    <Step title=\"Aprobar Admon.\"/>                 \r\n                    <Step title=\"Desembolsada\"/>                    \r\n                  </Steps>\r\n                </Row>\r\n                <br/><br/>\r\n                <Row>\r\n                  <Col xs={24} sm={12} md={8} lg={6} >\r\n                    <b>Información adicional</b>\r\n                  </Col>  \r\n                </Row>\r\n                <br/><br/>\r\n                <Row>\r\n                  <Col xs={12} sm={12} md={8} lg={4} >\r\n                    <b>Nombres</b><br/><br/>\r\n                    {item.lastName} \r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={8} lg={4} >\r\n                    <b>Apellidos</b><br/><br/>\r\n                    {item.lastName}\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={7} lg={4}>\r\n                      <b>Empresa</b><br/><br/>\r\n                      {\"Emtelco\"}\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={7} lg={6}>\r\n                      <b>Cargo</b><br/><br/>\r\n                      {item.profession}\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={7} lg={6}>\r\n                      <b>Dirección</b><br/><br/>\r\n                      {\"Calle 54 No. 18 - 12\"}\r\n                  </Col>\r\n                </Row>\r\n                <br/>\r\n                <br/>\r\n                <Row>\r\n                  <Col xs={12} sm={12} md={8} lg={4} >\r\n                    <b>Monto</b><br/><br/>\r\n                    {item.quantity} \r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={8} lg={4} >\r\n                      <b>Cuotas</b><br/><br/>\r\n                      {item.split}\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={7} lg={4}>\r\n                      <b>Cuenta</b><br/><br/>\r\n                      {item.account}\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={7} lg={6}>\r\n                      <b>Tipo de Cuenta</b><br/><br/>\r\n                      {item.accountType}\r\n                  </Col>\r\n                  <Col xs={12} sm={12} md={7} lg={6}>\r\n                      <b>Número de cuenta</b><br/><br/>\r\n                      {item.accountNumber}\r\n                  </Col>\r\n                </Row>\r\n                <br/><br/>\r\n                <Row gutter={4}>\r\n                  <Col xs={24} sm={12} md={18} lg={14} className={\"document-col\"}>\r\n                    <Button className={\"request-document-button\"} icon=\"file\" >\r\n                          Ver documento\r\n                    </Button> \r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={6} lg={5}>\r\n                    <Button className={\"request-reject-button\"} icon=\"close-circle\" \r\n                            onClick={() => this.setState({reject_modal: true})}>\r\n                          Rechazar crédito\r\n                    </Button> \r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={6} lg={5}>\r\n                    <Button className={\"request-confirm-button\"} icon=\"check-circle\" \r\n                            onClick={() => this.setState({approve_modal: true})}>\r\n                          Desembolsar crédito\r\n                    </Button> \r\n                  </Col>\r\n                  \r\n                </Row>\r\n              </div>\r\n            }\r\n\r\n            <Modal \r\n              title=\"Aprobar crédito\"\r\n              visible={this.state.approve_modal}\r\n              okText={\"Aprobar\"}\r\n              cancelText={\"Cancelar\"}\r\n              width={450}\r\n              okButtonProps={{disabled: transactionCode === null || transactionCode === \"\" ? true : false}}\r\n              onOk={() => this.onConfirmRequest(item.idRequest)}\r\n              onCancel={() => this.setState({approve_modal: false})}>\r\n                <div>\r\n                  ¿Está seguro de realizar el desembolso del crédito? Esta acción será irreversible. Si la respuesta es correcta, ingrese el código de la transacción, sino de clic en el botón \"Cancelar\".                 \r\n                  <br/>\r\n                  <br/>\r\n                  <FieldTitle title={\"Código de la transacción bancaria\"}/>\r\n                  <Row>\r\n                    <Col lg={16} md={12} sm={12} xs={12}>\r\n                      <Input placeholder={\"Ejemplo: 0005873288712761\"} onChange={(e) => this.onChangeTransactionCode(e)} value={transactionCode}/>\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n            </Modal>\r\n            <Modal \r\n              title=\"Rechazar crédito\"\r\n              visible={this.state.reject_modal}\r\n              okText={\"Rechazar\"}\r\n              cancelText={\"Atrás\"}\r\n              width={450}\r\n              onOk={() => this.onRejectRequest(item.idRequest)}\r\n              onCancel={() => this.setState({reject_modal: false})}>\r\n                <div>\r\n                  ¿Está seguro de realizar el rechazo del crédito? Esta acción será irreversible.                  \r\n                </div>\r\n            </Modal>\r\n        </div>\r\n      </Badge>\r\n    );\r\n  };\r\n}\r\n\r\nRequestOutLayState.propTypes = {\r\n  customerList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customerList: state.admin.customerList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //getAllRequestToApprove: () => dispatch(getAllRequestToApprove( )),\r\n    approveorRejectRequest: (data, userId) => dispatch(approveorRejectRequest(data, userId)),    \r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestOutLayState);\r\n\r\n","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Row, List, Spin} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport RequestModal from \"./RequestStateModal\";\r\n\r\n//Actions\r\nimport {getAllRequestToOutLay} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\nimport { SUCCESS_MODAL } from '../../../subcomponents/modalMessages';\r\n\r\nclass MakeOutlayProcess extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      visible: null,\r\n    };\r\n\r\n    this.props.getAllRequestToOutLay(localStorage.user_id);\r\n\r\n  };\r\n\r\n  onChangeMoyen = (e) => {\r\n    this.setState({\r\n      moyen: true\r\n    }); \r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El préstamo ha sido solicitado correctamente.\");\r\n    this.setState({\r\n      loan: true\r\n    });\r\n  };\r\n\r\n  render(){\r\n\r\n    let tableData = this.props.requestOutLayResponse;\r\n\r\n    if(tableData === null){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                Cargando ...\r\n                <br/>\r\n                <br/>\r\n                <Spin size=\"large\" />\r\n              </div>);\r\n    }else{\r\n      return (\r\n        <div className={\"approve-request-state-div\"}>\r\n          <Row>\r\n            <List\r\n                dataSource={tableData}\r\n                renderItem={(item, k) => (\r\n                  <List.Item className={\"request-state-list-item\"}>\r\n                      <RequestModal item={item} key={k}/>\r\n                  </List.Item>\r\n                )}\r\n                locale={{emptyText: \"No hay solicitudes para desembolsar\"}}\r\n              />\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n}\r\n\r\nMakeOutlayProcess.propTypes = {\r\n  requestOutLayResponse: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    requestOutLayResponse: state.admin.requestOutLayResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllRequestToOutLay: (user_id) => dispatch(getAllRequestToOutLay(user_id)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MakeOutlayProcess);\r\n\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Tabs, Icon} from 'antd';\r\n\r\n//Components\r\nimport ApproveRequest from './approve_requests/ApproveRequest';\r\nimport MakeOutlay from './make_outlay/MakeOutlay';\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\n\r\n//Assets\r\n\r\n//Constants\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass Customer_Management extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n    \r\n    this.next = this.next.bind(this);\r\n    this.previous = this.previous.bind(this);\r\n    this.carousel = React.createRef();\r\n\r\n  };\r\n\r\n  next() {\r\n    this.carousel.next();\r\n  };\r\n\r\n  previous() {\r\n    this.carousel.prev();\r\n  };\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"admin-div\"}>\r\n        <Row>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <h2 className={'header-terms-title'}>Gestionar solicitudes</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row style={{width: \"80% !important\", margin: \"auto\"}}>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n          <Tabs defaultActiveKey={parseInt(localStorage.role_id, 10) === 2 ? \"1\" : \"2\"}>\r\n            {\r\n              parseInt(localStorage.role_id, 10) === 2 &&\r\n              <TabPane tab={<span> <Icon type=\"check-circle\" />Aprobar solicitudes </span>} key=\"1\">\r\n                <ApproveRequest/>\r\n              </TabPane>\r\n            }\r\n            {\r\n              parseInt(localStorage.role_id, 10) === 1 &&\r\n              <TabPane tab={<span> <Icon type=\"dollar\" />Desembolsar solicitudes </span>} key=\"2\">\r\n                <MakeOutlay/>\r\n              </TabPane>\r\n            }\r\n          </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Customer_Management;","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Button, Divider, Table, Modal, Select} from 'antd';\r\n\r\n//Components\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\nimport { SUCCESS_MODAL } from '../../subcomponents/modalMessages';\r\n\r\n//Assets\r\n\r\n//Functions\r\nfunction itemRender(current, type, originalElement) {\r\n  if (type === 'prev' || type === 'Previous Page') {\r\n    return <span title={'Anterior'} className={\"item-renderer\"}>{\"<\"}</span>;\r\n  } if (type === 'next') {\r\n    return <span title={'Siguiente'} className={\"item-renderer\"}>{\">\"}</span>;\r\n  }\r\n  return originalElement;\r\n};\r\n\r\n//Constants\r\nconst table = [\r\n  {\r\n    title: <div>Empresa</div>,\r\n    dataIndex: 'company',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.company.localeCompare(b.company)},\r\n  },\r\n  {\r\n    title: <div>Cliente</div>,\r\n    dataIndex: 'customer',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.customer.localeCompare(b.customer)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad</div>,\r\n    dataIndex: 'quantity',\r\n    width: \"100px\",\r\n    align: \"right\",\r\n    render: text => <div className={\"table-p\"}>{\"$\"+text}</div>,\r\n    sorter: (a, b) =>{ return a.quantity.toString().localeCompare(b.quantity.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Transacción</div>,\r\n    dataIndex: 'date2',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.date.toString().localeCompare(b.date.toString())},\r\n  }\r\n];\r\n\r\nclass ReceiptManagement extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n    \r\n    this.state = {\r\n      approve_modal: null\r\n    };\r\n\r\n    this.setData = this.setData.bind(this);\r\n\r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El informe ha sido descargado correctamente.\");\r\n    this.setState({\r\n      approve_modal: false,\r\n    });\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          company: item.company,\r\n          customer: item.customer,\r\n          quantity: item.quantity,\r\n          date: item.date2,\r\n        };\r\n        rows.push(row);\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  render() {\r\n\r\n    let tableData = [\r\n      {\r\n        key: 1,\r\n        company: \"Emtelco\",\r\n        customer: \"Juan Rodríguez\",\r\n        quantity: 150000,\r\n        date2: \"21-06-19\"\r\n      },\r\n      {\r\n        key: 2,\r\n        company: \"Movistar\",\r\n        customer: \"David Estrada\",\r\n        quantity: 250000,\r\n        date2: \"22-06-19\"\r\n      },\r\n      {\r\n        key: 3,\r\n        company: \"Seguros L.\",\r\n        customer: \"Camilo Pinto\",\r\n        quantity: 8500,\r\n        date2: \"24-06-19\"\r\n      },\r\n      {\r\n        key: 4,\r\n        company: \"Emtelco\",\r\n        customer: \"Duvan Vergara\",\r\n        quantity: 120000,\r\n        date2: \"26-06-19\"\r\n      },\r\n      {\r\n        key: 5,\r\n        company: \"Claro\",\r\n        customer: \"Alvaro Martinez\",\r\n        quantity: 275000,\r\n        date2: \"27-06-19\"\r\n      },\r\n      {\r\n        key: 6,\r\n        company: \"Alianza Normativa\",\r\n        customer: \"Carlos Vargas\",\r\n        quantity: 4870,\r\n        date2: \"28-06-19\"\r\n      },\r\n      {\r\n        key: 7,\r\n        company: \"Claro\",\r\n        customer: \"Felipe Urrego\",\r\n        quantity: 125870,\r\n        date2: \"28-06-19\"\r\n      },\r\n      {\r\n        key: 8,\r\n        company: \"Seguros L.\",\r\n        customer: \"Julian Osorio\",\r\n        quantity: 92870,\r\n        date2: \"28-06-19\"\r\n      }    \r\n    ];\r\n    //let {approve_modal} = this.state;\r\n\r\n    return (\r\n      <div className={\"company-div\"}>\r\n        <Row gutter={30}>\r\n          <Col xs={24} sm={24} md={12} lg={16}/>\r\n          <Col xs={24} sm={24} md={12} lg={4}> \r\n            <Button icon=\"file\" style={{backgroundColor: \"#005fc5\", color: \"white\", marginLeft: \"20px !important\"}} \r\n                    onClick={() => this.setState({approve_modal: true})}>\r\n                  Informe individual\r\n            </Button> \r\n          </Col>\r\n          <Col xs={24} sm={24} md={12} lg={4}> \r\n            <Button icon=\"file\" style={{backgroundColor: \"#005fc5\", color: \"white\", marginLeft: \"20px !important\"}} \r\n                    onClick={() => this.onConfirmRequest()}>\r\n                  Informe masivo\r\n            </Button> \r\n          </Col>\r\n        </Row>\r\n        <Divider/>\r\n        <Row>\r\n          <Table className={\"new-table\"} dataSource={tableData} columns={table} rowKey={'key'}\r\n            pagination={{ itemRender: itemRender, showSizeChanger: true,\r\n            pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"] }} size={'small'} scroll={{x:'500px'|true}}/>\r\n        </Row>\r\n        <Modal \r\n          title=\"Generar informe\"\r\n          visible={this.state.approve_modal}\r\n          okText={\"Generar\"}\r\n          cancelText={\"Cancelar\"}\r\n          width={450}\r\n          onOk={() => this.onConfirmRequest()}\r\n          onCancel={() => this.setState({approve_modal: false})}>\r\n            <div>\r\n              Seleccionar el cliente para descargar el informe particular.   \r\n              <br/>\r\n              <br/>\r\n              <Select style={{width: \"70%\"}} placeholder={'Cliente'} onChange={this.inputAdviserName}>\r\n                {tableData.map((customer, i) =>(\r\n                  <Select.Option value={customer.key} key={i}>\r\n                    {customer.customer}\r\n                  </Select.Option>\r\n                ))\r\n                }\r\n              </Select>             \r\n            </div>\r\n\r\n        </Modal>\r\n        </div>\r\n      );\r\n  };\r\n}\r\n\r\n\r\nexport default ReceiptManagement;","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Tabs, Icon} from 'antd';\r\n\r\n//Components\r\nimport ReceiptManagement from \"./ReceiptManagement\";\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\n\r\n//Assets\r\n\r\n//Constants\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass GenerateReports extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"admin-div\"}>\r\n        <Row>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <h2 className={'header-terms-title'}>Informes</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className={\"admin-row-content\"}>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <Tabs defaultActiveKey=\"1\">\r\n              <TabPane tab={<span> <Icon type=\"dollar\" />Administrar cobros</span>} key=\"1\">\r\n                <ReceiptManagement/>\r\n              </TabPane>\r\n            </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerateReports;","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Tooltip, Icon, Divider, Steps, Badge, Button, Modal} from 'antd';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\nimport { SUCCESS_MODAL, allowEmergingWindows, WARNING_MODAL} from '../../../subcomponents/modalMessages';\r\n\r\n//Actions\r\nimport {approveorRejectRequestByCompany} from \"../../../../../store/redux/actions/general/generalActions\";\r\n\r\n//Constants\r\nconst Step = Steps.Step;\r\n\r\nclass RequestStateModal extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: null,\r\n      approve_modal: null,\r\n      card_style_requested: \"requested\",\r\n      card_style_analysis: \"analysis\",\r\n      card_style_approved: \"approved\",\r\n      card_style_rejected: \"rejected\",\r\n      reject_modal: null,\r\n    };\r\n    \r\n  };\r\n\r\n  defineBadgeName = (id) => {\r\n    if(id === 1){\r\n      return \"Solicitada\";\r\n    }else if(id === 2){\r\n      return \"Evaluada\";\r\n    }else if(id === 3){\r\n      return \"Aprobada RR.HH.\";\r\n    }else if(id === 4){\r\n      return \"Aprobada Admon.\";\r\n    }else if(id === 5){\r\n      return \"Desembolsada\";\r\n    }else if(id=== 6){\r\n      return \"Rechazada\"\r\n    }else if(id=== 7){\r\n      return \"Finalizada\"\r\n    }else if(id=== 8){\r\n      return \"Devolución bancaria\"\r\n    }\r\n  };\r\n\r\n  defineButtonClass = (id) => {\r\n    if(id === 1){\r\n      return \"#c1c1c1\";\r\n    }else if(id === 2){\r\n      return \"yellow\";\r\n    }else if(id === 3){\r\n      return \"#ffa962\";\r\n    }else if(id === 4){\r\n      return \"#62ffb5\";\r\n    }else if(id === 5){\r\n      return \"#6cff55 \";\r\n    }else if(id === 6){\r\n      return \"#ff4747\";\r\n    }else{\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  seeDocument = (filePath) => {\r\n\r\n    let url = filePath;\r\n    //console.log(url);\r\n    let newUrl = url.split('.');\r\n    //console.log(\"URL\", newUrl, newUrl[1]);\r\n    let baseURL = \"http://3.133.128.42:4000\";\r\n\r\n    if (url !== null) {\r\n      let newWindow = window.open(baseURL + newUrl[1], \"blank\");\r\n      if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined') {\r\n        allowEmergingWindows();\r\n      }\r\n    } else {\r\n      WARNING_MODAL('Advertencia', 'El reporte no está disponible');\r\n    }\r\n\r\n\r\n  };\r\n\r\n  onConfirmRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: true,\r\n    };\r\n    //console.log(\"D\", data);\r\n    this.props.approveorRejectRequestByCompany(data, localStorage.user_id);\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"La solicitud ha sido aprobada correctamente.\");\r\n    this.setState({approve_modal: false});\r\n  \r\n  };\r\n\r\n  onConfirmRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: true,\r\n    };\r\n    //console.log(\"D\", data);\r\n    this.props.approveorRejectRequestByCompany(data, localStorage.user_id);\r\n    this.setState({approve_modal: false});\r\n  };\r\n\r\n  onRejectRequest = (idRequest) => {\r\n    let data = {\r\n      requestId: idRequest,\r\n      approve: false,\r\n    };\r\n    //console.log(\"D\", data);\r\n    this.props.approveorRejectRequest(data, localStorage.user_id);\r\n    this.setState({approve_modal: false});\r\n  };\r\n\r\n  render(){\r\n\r\n    let item = this.props.item;\r\n\r\n    return (\r\n        <Badge count={this.defineBadgeName(item.requestStateId)} style={{backgroundColor: this.defineButtonClass(item.idRequestState), color: \"black\"} }>\r\n          <div key={item.key} className={\"request-state-item-requested\"}>\r\n            <Row>\r\n              <Col xs={24} sm={12} md={2} lg={2}>\r\n                  <Tooltip title=\"Detallar solicitud\">\r\n                    <Icon type={\"plus-circle\"} className={\"request-item-icon\"} onClick={() => this.setState({visible: !this.state.visible})}/> \r\n                  </Tooltip>\r\n                </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\">\r\n                <b>Número de Solicitud</b> <br/><br/>\r\n                {\"Solicitud No. \" + item.idRequest} \r\n              </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\" >\r\n                  <b>Estado</b> <br/><br/>  {this.defineBadgeName(item.idRequestState)}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                  <b>Fecha de Solicitud</b> <br/><br/> {(item.createdDate).split(\"T\")[0]}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                  <b>Valor Total</b> <br/><br/>\r\n                  <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                      value={item.quantity} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={2} lg={1}>\r\n                <Tooltip title=\"Aprobar solicitud\">\r\n                  <Icon type={\"check-circle\"} className={\"request-item-icon-approve\"} onClick={() => this.setState({approve_modal: true})}/> \r\n                </Tooltip>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={2} lg={1}>\r\n                <Tooltip title=\"Rechazar solicitud\">\r\n                  <Icon type={\"close-circle\"} className={\"request-item-icon-reject\"} onClick={() => this.setState({reject_modal: true})}/> \r\n                </Tooltip>\r\n              </Col> \r\n            </Row>\r\n          \r\n          {\r\n            this.state.visible && \r\n            <div>\r\n              <Row>\r\n                <Divider/>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Flujo de aprobación</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Steps current={item.idRequestState-1} size=\"small\" className={\"request-state-steps\"}>\r\n                  <Step title=\"Solicitada\"/>\r\n                  <Step title=\"Evaluada\"/>\r\n                  <Step title=\"Aprobar RR.H H.\"/>\r\n                  <Step title=\"Aprobar Admon.\"/>                 \r\n                  <Step title=\"Desembolsada\"/>\r\n                  <Step title=\"Finalizada\"/>\r\n                  \r\n                </Steps>\r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Información adicional</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={8} lg={6} >\r\n                  <b>Nombres</b><br/><br/>\r\n                  {item.name + \" \" + item.lastName} \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Cédula</b><br/><br/>\r\n                  {item.identificationId}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                    <b>Empresa</b><br/><br/>\r\n                    {item.Company_idCompany}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                    <b>Cargo</b><br/><br/>\r\n                    {item.profession}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                    <b>Teléfono</b><br/><br/>\r\n                    {item.phoneNumber}\r\n                </Col>\r\n              </Row>\r\n              <br/>\r\n              <br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Monto</b><br/><br/>\r\n                  {item.quantity} \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                    <b>Cuotas</b><br/><br/>\r\n                    {item.split}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                    <b>Cuenta</b><br/><br/>\r\n                    {item.account}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                    <b>Tipo de Cuenta</b><br/><br/>\r\n                    {item.accountType}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                    <b>Número de cuenta</b><br/><br/>\r\n                    {item.accountNumber}\r\n                </Col>\r\n              </Row>\r\n              <br/><br/>\r\n              <Row gutter={4}>\r\n                <Col xs={24} sm={12} md={18} lg={14} className={\"document-col\"}>\r\n                  <Button className={\"request-document-button\"} icon=\"file\" onClick={() => this.seeDocument(item.filePath)} >\r\n                        Ver documento\r\n                  </Button> \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={5}>\r\n                  <Button className={\"request-reject-button\"} icon=\"close-circle\" \r\n                          onClick={() => this.setState({approve_modal: true})}>\r\n                        Rechazar crédito\r\n                  </Button> \r\n                </Col>\r\n                <Col xs={24} sm={12} md={6} lg={5}>\r\n                  <Button className={\"request-confirm-button\"} icon=\"check-circle\" \r\n                          onClick={() => this.setState({approve_modal: true})}>\r\n                        Aprobar crédito\r\n                  </Button> \r\n                </Col>\r\n                \r\n              </Row>\r\n            </div>\r\n          }\r\n\r\n          <Modal \r\n            title=\"Aprobar crédito\"\r\n            visible={this.state.approve_modal}\r\n            okText={\"Aprobar\"}\r\n            cancelText={\"Cancelar\"}\r\n            width={450}\r\n            onOk={() => this.onConfirmRequest(item.idRequest)}\r\n            onCancel={() => this.setState({approve_modal: false})}>\r\n              <div>\r\n                ¿Está seguro de realizar la aprobación del crédito? Esta acción será irreversible.                  \r\n              </div>\r\n\r\n          </Modal>\r\n          \r\n          <Modal \r\n            title=\"Rechazar crédito\"\r\n            visible={this.state.reject_modal}\r\n            okText={\"Rechazar\"}\r\n            cancelText={\"Atrás\"}\r\n            width={450}\r\n            onOk={() => this.onRejectRequest(item.idRequest)}\r\n            onCancel={() => this.setState({reject_modal: false})}>\r\n              <div>\r\n                ¿Está seguro de realizar el rechazo del crédito? Esta acción será irreversible.                  \r\n              </div>\r\n\r\n          </Modal>\r\n        </div>\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n}\r\n\r\nRequestStateModal.propTypes = {\r\n  customerList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customerList: state.admin.customerList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    //getAllRequestToApprove: () => dispatch(getAllRequestToApprove( )),\r\n    approveorRejectRequestByCompany: (data, userId) => dispatch(approveorRejectRequestByCompany(data, userId)),    \r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestStateModal);","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Row, List, Spin, Col, Input} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport RequestModal from \"./RequestStateModal\";\r\n\r\n//Actions\r\nimport {getAllRequestToApprove} from \"../../../../../store/redux/actions/admin/adminActions\";\r\n\r\n//Styles\r\nimport '../../../../styles/admin/request_management/request-state.css';\r\nimport { SUCCESS_MODAL } from '../../../subcomponents/modalMessages';\r\n\r\nclass ApproveRequest extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      visible: null,\r\n      idRequest: null,\r\n      idRequestState: null,\r\n      createdDate: null,\r\n      quantity: null,\r\n      identificationId: null,\r\n      requestStateName: null\r\n    };\r\n\r\n    this.props.getAllRequestToApprove();\r\n    this.setData = this.setData.bind(this);\r\n    this.filterData = this.filterData.bind(this);\r\n\r\n  };\r\n\r\n  onChangeMoyen = (e) => {\r\n    this.setState({\r\n      moyen: true\r\n    }); \r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El préstamo ha sido solicitado correctamente.\");\r\n    this.setState({\r\n      loan: true\r\n    });\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          idRequest: item.idRequest,\r\n          idRequestState: item.idRequestState,\r\n          createdDate: item.createdDate,\r\n          quantity: item.quantity,\r\n          identificationId: item.identificationId,\r\n          requestStateName: item.requestStateName,\r\n          lastName: item.lastName,\r\n          name: item.name,\r\n          Company_idCompany: item.Company_idCompany,\r\n          profession: item.profession,\r\n          split: item.split,\r\n          account: item.account,\r\n          accountType: item.accountType,\r\n          accountNumber: item.accountNumber,\r\n          phoneNumber: item.phoneNumber,\r\n          filePath: item.filePath,\r\n        };\r\n\r\n        if(this.filterData(row)) {\r\n          rows.push(row);\r\n        };\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  filterData(toCompare){\r\n    let {idRequest, identificationId, requestStateName, quantity, createdDate} = this.state;\r\n\r\n    if(idRequest === null && identificationId === null && quantity === null && requestStateName === null && createdDate === null){\r\n      return true;\r\n    }\r\n\r\n    if(idRequest !== null && !toCompare.idRequest.toString().toUpperCase().includes(idRequest.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(identificationId !== null && !toCompare.identificationId.toString().toUpperCase().includes(identificationId.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(requestStateName !== null && !toCompare.requestStateName.toString().toUpperCase().includes(requestStateName.toUpperCase())) {\r\n      return false;\r\n    }\r\n    \r\n    if(quantity !== null && !toCompare.quantity.toString().toUpperCase().includes(quantity.toUpperCase())) {\r\n      return false;\r\n    }\r\n\r\n    if(createdDate !== null && !toCompare.createdDate.toString().toUpperCase().includes(createdDate.toUpperCase())) {\r\n      return false;\r\n    }   \r\n\r\n    return true;\r\n  };\r\n\r\n  render(){\r\n\r\n    let {idRequest, identificationId, requestStateName, quantity, createdDate} = this.state;\r\n    let tableData = this.setData(this.props.requestResponse);\r\n    \r\n    if(this.props.requestResponse === null){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                Cargando ...\r\n                <br/>\r\n                <br/>\r\n                <Spin size=\"large\" />\r\n              </div>);\r\n    }else{\r\n      return (\r\n        <div className={\"approve-request-state-div\"}>\r\n          \r\n          <Row gutter={8} className={\"approve-request-filter\"}>\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n                  <p className=\"field-title-visible\">Número solicitud </p>\r\n                  <Input placeholder={\"Número solicitud\"} value={idRequest} onChange={(e) => this.setState({idRequest: e.target.value})}/>\r\n                </Col>\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                  <p className=\"field-title-visible\">No. Cédula</p>\r\n                  <Input placeholder={\"No. de cédula\"} value={identificationId} onChange={(e) => this.setState({identificationId: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={5}>\r\n                  <p className=\"field-title-visible\">Estado</p>\r\n                  <Input placeholder={\"Estado\"} value={requestStateName} onChange={(e) => this.setState({requestStateName: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={4}>\r\n                  <p className=\"field-title-visible\">Cantidad</p>\r\n                  <Input placeholder={\"Cantidad\"} value={quantity} onChange={(e) => this.setState({quantity: e.target.value})}/>\r\n                </Col>\r\n\r\n                <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                  <p className=\"field-title-visible\">Fecha Solicitud</p>\r\n                  <Input placeholder={\"Fecha Solicitud\"} value={createdDate} onChange={(e) => this.setState({createdDate: e.target.value})}/>\r\n                </Col>\r\n              </Row>\r\n                <br/>\r\n            <Row>\r\n            <List dataSource={tableData}\r\n                  renderItem={(item, k) => (\r\n                    <List.Item className={\"request-state-list-item\"}>\r\n                        <RequestModal item={item} key={k}/>\r\n                    </List.Item>\r\n                  )}\r\n                  locale={{emptyText: \"No hay solicitudes para aprobar\"}}/>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  }; \r\n}\r\n\r\nApproveRequest.propTypes = {\r\n  requestResponse: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    requestResponse: state.admin.requestResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllRequestToApprove: () => dispatch(getAllRequestToApprove()),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ApproveRequest);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Tabs, Icon} from 'antd';\r\n\r\n//Components\r\nimport ApproveRequest from './approve_requests/ApproveRequest';\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\n\r\n//Assets\r\n\r\n//Constants\r\nconst { TabPane } = Tabs;\r\n\r\nclass Company extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"admin-div\"}>\r\n        <Row>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <h2 className={'header-terms-title'}>Gestionar solicitudes</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className={\"admin-row-content\"}>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane tab={<span> <Icon type=\"plus-circle\" /> Aprobar solicitudes </span>} key=\"1\">\r\n              <ApproveRequest/>\r\n            </TabPane>\r\n          </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Company;","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Button, Divider, Table, Modal, Select} from 'antd';\r\n\r\n//Components\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\nimport { SUCCESS_MODAL } from '../../subcomponents/modalMessages';\r\n\r\n//Assets\r\n\r\n//Functions\r\nfunction itemRender(current, type, originalElement) {\r\n  if (type === 'prev' || type === 'Previous Page') {\r\n    return <span title={'Anterior'} className={\"item-renderer\"}>{\"<\"}</span>;\r\n  } if (type === 'next') {\r\n    return <span title={'Siguiente'} className={\"item-renderer\"}>{\">\"}</span>;\r\n  }\r\n  return originalElement;\r\n};\r\n\r\n//Constants\r\nconst table = [\r\n  {\r\n    title: <div>Cliente</div>,\r\n    dataIndex: 'customer',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.customer.localeCompare(b.customer)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad total</div>,\r\n    dataIndex: 'quantity',\r\n    width: \"100px\",\r\n    align: \"right\",\r\n    render: text => <div className={\"table-p\"}>{\"$\"+text}</div>,\r\n    sorter: (a, b) =>{ return a.quantity.toString().localeCompare(b.quantity.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Transacción</div>,\r\n    dataIndex: 'date2',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.date.toString().localeCompare(b.date.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Estado</div>,\r\n    dataIndex: 'state',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.state.localeCompare(b.state)},\r\n  }\r\n];\r\n\r\nclass ReceiptManagement extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      approve_modal: null,\r\n    };\r\n\r\n    this.setData = this.setData.bind(this);\r\n\r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El informe ha sido descargado correctamente.\");\r\n    this.setState({\r\n      approve_modal: false,\r\n    });\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          company: item.company,\r\n          customer: item.customer,\r\n          quantity: item.quantity,\r\n          date: item.date2,\r\n        };\r\n        rows.push(row);\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  render() {\r\n\r\n    let tableData = [\r\n      {\r\n        key: 1,\r\n        company: \"Emtelco\",\r\n        customer: \"Juan Rodríguez\",\r\n        quantity: 150000,\r\n        date2: \"21-06-19\",\r\n        state: \"Desembolsado\",\r\n      },\r\n      {\r\n        key: 2,\r\n        company: \"Movistar\",\r\n        customer: \"David Estrada\",\r\n        quantity: 250000,\r\n        date2: \"22-06-19\",\r\n        state: \"Desembolsado\",\r\n      },\r\n      {\r\n        key: 3,\r\n        company: \"Seguros L.\",\r\n        customer: \"Camilo Pinto\",\r\n        quantity: 8500,\r\n        date2: \"24-06-19\",\r\n        state: \"Desembolsado\",\r\n      },\r\n      {\r\n        key: 4,\r\n        company: \"Emtelco\",\r\n        customer: \"Duvan Vergara\",\r\n        quantity: 120000,\r\n        date2: \"26-06-19\",\r\n        state: \"Desembolsado\",\r\n      },\r\n      {\r\n        key: 5,\r\n        company: \"Claro\",\r\n        customer: \"Alvaro Martinez\",\r\n        quantity: 275000,\r\n        date2: \"27-06-19\",\r\n        state: \"Desembolsado\",\r\n      },\r\n      {\r\n        key: 6,\r\n        company: \"Alianza Normativa\",\r\n        customer: \"Carlos Vargas\",\r\n        quantity: 4870,\r\n        date2: \"28-06-19\",\r\n        state: \"Desembolsado\",\r\n      },\r\n      {\r\n        key: 7,\r\n        company: \"Claro\",\r\n        customer: \"Felipe Urrego\",\r\n        quantity: 125870,\r\n        date2: \"28-06-19\",\r\n        state: \"Desembolsado\",\r\n      },\r\n      {\r\n        key: 8,\r\n        company: \"Seguros L.\",\r\n        customer: \"Julian Osorio\",\r\n        quantity: 92870,\r\n        date2: \"28-06-19\",\r\n        state: \"Desembolsado\",\r\n      }    \r\n    ];\r\n    //let {approve_modal} = this.state;\r\n\r\n    return (\r\n      <div className={\"company-div\"}>\r\n        <Row gutter={30}>\r\n          <Col xs={24} sm={24} md={12} lg={16}/>\r\n          <Col xs={24} sm={24} md={12} lg={4}> \r\n            <Button icon=\"file\" style={{backgroundColor: \"#005fc5\", color: \"white\", marginLeft: \"20px !important\"}} \r\n                    onClick={() => this.setState({approve_modal: true})}>\r\n                  Informe individual\r\n            </Button> \r\n          </Col>\r\n          <Col xs={24} sm={24} md={12} lg={4}> \r\n            <Button icon=\"file\" style={{backgroundColor: \"#005fc5\", color: \"white\", marginLeft: \"20px !important\"}} \r\n                    onClick={() => this.onConfirmRequest()}>\r\n                  Informe masivo\r\n            </Button> \r\n          </Col>\r\n        </Row>\r\n        <Divider/>\r\n        <Row>\r\n          <Table className={\"new-table\"} dataSource={tableData} columns={table} rowKey={'key'}\r\n            pagination={{ itemRender: itemRender, showSizeChanger: true,\r\n            pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"] }} size={'small'} scroll={{x:'500px'|true}}/>\r\n        </Row>  \r\n        <Modal \r\n          title=\"Generar informe\"\r\n          visible={this.state.approve_modal}\r\n          okText={\"Generar\"}\r\n          cancelText={\"Cancelar\"}\r\n          width={450}\r\n          onOk={() => this.onConfirmRequest()}\r\n          onCancel={() => this.setState({approve_modal: false})}>\r\n            <div>\r\n              Seleccionar el cliente para descargar el informe particular.   \r\n              <br/>\r\n              <br/>\r\n              <Select style={{width: \"70%\"}} placeholder={'Cliente'} onChange={this.inputAdviserName}>\r\n                {tableData.map((customer, i) =>(\r\n                  <Select.Option value={customer.key} key={i}>\r\n                    {customer.customer}\r\n                  </Select.Option>\r\n                ))\r\n                }\r\n              </Select>             \r\n            </div>\r\n\r\n        </Modal>\r\n        </div>\r\n      );\r\n  };\r\n}\r\n\r\n\r\nexport default ReceiptManagement;","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Tabs, Icon} from 'antd';\r\n\r\n//Components\r\nimport ReceiptManagement from \"./ReceiptManagement\";\r\n\r\n//Styles\r\nimport '../../../styles/admin/index.css';\r\n\r\n//Assets\r\n\r\n//Constants\r\nconst { TabPane } = Tabs;\r\n\r\n\r\nclass GenerateReports extends Component {\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className={\"admin-div\"}>\r\n        <Row>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <h2 className={'header-terms-title'}>Informes</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className={\"admin-row-content\"}>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <Tabs defaultActiveKey=\"1\">\r\n              <TabPane tab={<span> <Icon type=\"dollar\" />Gestionar cobros</span>} key=\"1\">\r\n                <ReceiptManagement/>\r\n              </TabPane>\r\n            </Tabs>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GenerateReports;","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Card, Row, Col, Table, Divider, Statistic, Typography, Icon, Button, Skeleton} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport connect from 'react-redux/es/connect/connect';\r\n\r\n//Subcomponents\r\nimport routes from '../../../configuration/routing/Routes';\r\n//import MiniLoading from '../subcomponents/MiniLoading';\r\n\r\n//Actions\r\nimport {getHomeData} from \"../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../styles/customer/index.css'\r\n\r\n\r\nconst table = [\r\n  {\r\n    title: <div>Tipo Transacción</div>,\r\n    dataIndex: 'transactionType',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.name.localeCompare(b.name)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad</div>,\r\n    dataIndex: 'quantity',\r\n    width: \"100px\",\r\n    align: \"right\",\r\n    render: text => <div className={\"table-p\"}>{\"$\"+text}</div>,\r\n    sorter: (a, b) =>{ return a.quantity.toString().localeCompare(b.quantity.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha de Transacción</div>,\r\n    dataIndex: 'createdDate',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text.split(\"T\")[0]}</div>,\r\n    sorter: (a, b) =>{ return a.createdDate.localeCompare(b.createdDate)},\r\n  }\r\n];\r\n\r\n//Functions\r\n/*function itemRender(current, type, originalElement) {\r\n  if (type === 'prev' || type === 'Previous Page') {\r\n    return <span title={'Anterior'} className={\"item-renderer\"}>{\"<\"}</span>;\r\n  } if (type === 'next') {\r\n    return <span title={'Siguiente'} className={\"item-renderer\"}>{\">\"}</span>;\r\n  }\r\n  return originalElement;\r\n};*/\r\n\r\nclass Customer extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      loan: false,\r\n      request: false,\r\n    };\r\n    \r\n    this.next = this.next.bind(this);\r\n    this.previous = this.previous.bind(this);\r\n    this.carousel = React.createRef();\r\n\r\n    this.props.getHomeData(parseInt(localStorage.user_id, 10));\r\n\r\n  };\r\n\r\n  next() {\r\n    this.carousel.next();\r\n  };\r\n\r\n  previous() {\r\n    this.carousel.prev();\r\n  };\r\n\r\n  render() {\r\n\r\n    let {homeDataResponse} = this.props;\r\n    //console.log(\"HDR\", homeDataResponse);\r\n    let {loan, request} = this.state;\r\n    let maximumAmount = homeDataResponse.maximumAmount;\r\n    let partialQuantity = homeDataResponse.partialCapacity;\r\n    let tableData = homeDataResponse.transactions;\r\n    let pendingRequests = homeDataResponse.request;\r\n\r\n    if(JSON.stringify(homeDataResponse) === '{}' || tableData === undefined){\r\n      return (\r\n        <Skeleton active paragraph={{ rows: 15 }} className={\"main-skeleton\"}/>        \r\n      );\r\n    }else{\r\n      return (\r\n        <div className={\"customer-div\"}>\r\n          <Row>\r\n            <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n              <Card className={\"customer-card\"}>\r\n                <Row className={\"customer-row-card\"}>\r\n                  <Col xxl={13} lg={13} md={13} sm={24} xs={24}>\r\n                    <Typography>\r\n                      <Typography.Title level={3} className={\"customer-title\"}>\r\n                        ¡Bienvenido, {localStorage.getItem('user_name') +\"!\"}\r\n                      </Typography.Title>       \r\n                    </Typography>\r\n                  </Col>      \r\n                  <Col xxl={11} lg={11} md={11} sm={24} xs={24}>\r\n                    <Card className={\"customer-credit-card\"}>\r\n                      <Row gutter={4}>\r\n                        <Col span={8}>\r\n                          <Statistic title={<h3>Cupo disponible</h3>} value={(partialQuantity)} prefix={\"$\"}/>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                          <Statistic title={<h3>Cupo usado</h3>} value={(maximumAmount-partialQuantity)} prefix={\"$\"}/>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                          <Statistic title={<h3>Cupo total</h3>} value={maximumAmount} prefix={\"$\"}/>\r\n                        </Col>\r\n                      </Row>    \r\n                    </Card>\r\n                  </Col>\r\n                </Row>\r\n                <Row className={\"row-table\"}>\r\n                  <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n                    <h3>Recientes transacciones...</h3>\r\n                  </Col>\r\n                  <Col>\r\n                    <Divider className={\"second-divider\"}/>\r\n                    <Table className={\"new-table\"} dataSource={tableData} columns={table} rowKey={'idTransaction'} \r\n                          size={'small'} scroll={{x:'500px'|true}} locale={{emptyText: 'No se han realizado transacciones hasta ahora.'}}\r\n                          />\r\n                  </Col>\r\n                </Row>\r\n                <Row className={\"row-request\"}>\r\n                  <Col xxl={14} lg={14} md={14} sm={12} xs={24}>\r\n                    <Button className={\"request-button-none\"} onClick={() => this.setState({loan: true})}>\r\n                      <h3><Icon type={\"plus-circle\"} className={\"request-button\"}/> \r\n                        <span className={\"request-title\"}> Solicitar préstamo</span>\r\n                      </h3>\r\n                    </Button>\r\n                  </Col>\r\n                  <Col xxl={9} lg={9} md={9} sm={10} xs={24} className={\"request-pending-col\"}>\r\n                    <Button className={\"request-pending-button\"} onClick={() => this.setState({request: true})}>\r\n                      <h3>\r\n                        {\r\n                          pendingRequests !== 0 && \r\n                          <span className={\"request-pendings\"}>Tienes {pendingRequests} solicitud(es) pendientes...</span>\r\n                        }\r\n                        {\r\n                          pendingRequests === 0 && \r\n                          <span className={\"request-pendings\"}>No tienes solicitudes pendientes...</span>\r\n                        }\r\n                      </h3>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          {\r\n            loan &&\r\n            <Redirect to={routes.customer_form_request}/>\r\n          }\r\n          {\r\n            request &&\r\n            <Redirect to={routes.customer_review_requests}/> \r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nCustomer.propTypes = {\r\n  homeDataResponse: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    homeDataResponse: state.customer.homeDataResponse\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getHomeData: (customerId) => dispatch(getHomeData(customerId))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Customer);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Row, Col, Divider, Card, Input, Table} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport MiniLoading from '../subcomponents/MiniLoading';\r\n\r\n//Actions\r\nimport {getAllTransactions} from \"../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../styles/customer/transactions.css'\r\n\r\n//Constants\r\nconst table = [\r\n  {\r\n    title: <div>Tipo Transacción</div>,\r\n    dataIndex: 'transactionType',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.name.localeCompare(b.name)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad</div>,\r\n    dataIndex: 'quantity',\r\n    width: \"100px\",\r\n    align: \"right\",\r\n    render: text => <div className={\"table-p\"}>{\"$\"+text}</div>,\r\n    sorter: (a, b) =>{ return a.quantity.toString().localeCompare(b.quantity.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Solicitud</div>,\r\n    dataIndex: 'createdDate',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text.split(\"T\")[0]}</div>,\r\n    sorter: (a, b) =>{ return a.createdDate.localeCompare(b.createdDate)},\r\n  }\r\n];\r\n\r\n//Functions\r\nfunction itemRender(current, type, originalElement) {\r\n  if (type === 'prev' || type === 'Previous Page') {\r\n    return <span title={'Anterior'} className={\"item-renderer\"}>{\"<\"}</span>;\r\n  } if (type === 'next') {\r\n    return <span title={'Siguiente'} className={\"item-renderer\"}>{\">\"}</span>;\r\n  }\r\n  return originalElement;\r\n};\r\n\r\nclass Transactions extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      text: null,\r\n      firstText: null,\r\n      firstTextLength: 0,\r\n      linkName: null,\r\n      linkUrl: null,\r\n    };\r\n\r\n    this.setData = this.setData.bind(this);\r\n    this.inputLinkName = this.inputLinkName.bind(this);\r\n\r\n    this.props.getAllTransactions(parseInt(localStorage.user_id, 10));\r\n\r\n  };\r\n\r\n  setData(linkList){\r\n    \r\n    let rows = [];\r\n    if(linkList){\r\n      for (let i = 0; i < linkList.length; i++) {\r\n      \r\n        let item = linkList[i];\r\n        let row = {\r\n          key: i,\r\n          name: item.name,\r\n          link: item.url,\r\n        };\r\n        rows.push(row);\r\n      }\r\n    }\r\n    \r\n    return rows;\r\n  };\r\n\r\n  inputLinkName(e){\r\n    this.setState({\r\n      linkName: e.target.value,\r\n    });    \r\n  };\r\n\r\n  render() {\r\n\r\n    let tableData = this.props.transactionList;\r\n  \r\n    if(JSON.stringify(tableData) === '{}'){\r\n      return (\r\n        <MiniLoading visible={true}/> \r\n      );\r\n    }else{\r\n      return (\r\n        <div className={\"transactions-div\"}>\r\n          <Row>\r\n            <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n              <h2 className={'header-terms-title'}>Histórico de transacciones</h2>\r\n            </Col>\r\n          </Row>\r\n          <Row className={\"social-row-content\"}>\r\n            <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n              <Card className={\"transactions-card\"}>\r\n                <h3>Filtros</h3>\r\n                <Row gutter={8}>\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\">Tipo Transacción: </p>\r\n                    <Input placeholder={\"Tipo Transacción\"}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\">Cantidad</p>\r\n                    <Input placeholder={\"Cantidad\"}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\">Fecha Solicitud</p>\r\n                    <Input placeholder={\"Fecha Solicitud\"}/>\r\n                  </Col>\r\n\r\n                  <Col className=\"filter\"  xs={12} sm={12} md={8} lg={6}>\r\n                    <p className=\"field-title-visible\">Fecha Transacción</p>\r\n                    <Input placeholder={\"Fecha Transacción\"}/>\r\n                  </Col>\r\n                </Row>\r\n                <Divider className={\"second-divider\"}/>\r\n                  <Table className={\"new-table\"} dataSource={tableData} columns={table} rowKey={'idTransaction'} \r\n                    locale={{ emptyText: 'No hay transacciones todavía' }} pagination={{ itemRender: itemRender, showSizeChanger: true,\r\n                    pageSizeOptions: [\"5\", \"10\", \"15\", \"20\"] }} size={'small'} scroll={{x:'500px'|true}}/>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n}\r\n\r\nTransactions.propTypes = {\r\n  transactionList: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    transactionList: state.customer.transactionList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllTransactions: (customerId) => dispatch(getAllTransactions(customerId)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Transactions);","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Math from \"math\";\r\nimport PropTypes from 'prop-types';\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport SignaturePad from 'react-signature-canvas';\r\nimport { Divider, Form, Select, Button, Col, Row, InputNumber, Table, Slider,\r\n  Statistic, Typography, Card, Switch, Spin, Input} from 'antd';\r\n\r\n//Subcomponents\r\nimport FieldTitle from '../subcomponents/FieldTitle';\r\nimport routes from '../../../configuration/routing/Routes';\r\n\r\n//Actions\r\nimport { getRequestData, getOutlayData, getOultayDatesList, createRequest } from \"../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../styles/customer/request-form.css';\r\nimport { SUCCESS_MODAL, WARNING_MODAL, allowEmergingWindows, ERROR_MODAL } from '../subcomponents/modalMessages';\r\n\r\n//Constants\r\nconst FormItem = Form.Item;\r\n//const { Panel } = Collapse;\r\n\r\nfunction format(d) {\r\n  var formatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  });\r\n\r\n  return formatter.format(d);\r\n};\r\n\r\nconst table = [\r\n  {\r\n    title: <div>Descuento</div>,\r\n    dataIndex: 'name',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text}</div>,\r\n    sorter: (a, b) =>{ return a.name.localeCompare(b.name)},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Cantidad</div>,\r\n    dataIndex: 'quantity',\r\n    width: \"100px\",\r\n    align: \"right\",\r\n    render: text => <div className={\"table-p\"}>{\"$\"+Math.round(text)}</div>,\r\n    sorter: (a, b) =>{ return a.quantity.toString().localeCompare(b.quantity.toString())},\r\n  },\r\n  {\r\n    title: <div className={\"table-p\"}>Fecha Descuento</div>,\r\n    dataIndex: 'date',\r\n    width: \"150px\",\r\n    align: \"center\",\r\n    render: text => <div className={\"table-p\"}>{text.split(\"T\")[0]}</div>,\r\n    sorter: (a, b) =>{ return a.date.localeCompare(b.date)},\r\n  }\r\n];\r\n\r\nclass LoanRequest extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      sliderValue: null,\r\n      fee: null,\r\n      loan: null,\r\n      money_wallet: false,\r\n      wallet_type: null,\r\n      wallet_number: null,\r\n      bank_account: true,\r\n      bank_name: null,\r\n      bank_number: null,\r\n      bank_type: null,\r\n      signatureDone: false,\r\n      trimmedDataURL: null, \r\n      flagState: null,\r\n    };    \r\n\r\n    this.props.getRequestData(parseInt(localStorage.user_id, 10), this.props.location.state ? this.props.location.state.token : undefined);\r\n    this.props.getOutlayData(parseInt(localStorage.user_id, 10), this.props.location.state ? this.props.location.state.token : undefined);\r\n\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    //console.log(\"PV\", prevState.sliderValue, nextProps.requestDataResponse);\r\n    //console.log(\"RD\", JSON.stringify(nextProps.requestDataResponse) !== '{}');\r\n    if(JSON.stringify(nextProps.requestDataResponse) !== '{}'){\r\n      if(prevState.sliderValue === null){\r\n        return {\r\n          sliderValue: Math.round(nextProps.requestDataResponse.partialCapacity) < 80000 ? 80000 : Math.round(nextProps.requestDataResponse.partialCapacity),\r\n          bank_name: nextProps.requestDataResponse.accountBank,\r\n          bank_number: nextProps.requestDataResponse.accountNumber,\r\n          bank_type: nextProps.requestDataResponse.accountType\r\n        };\r\n      }else{\r\n        return{\r\n          flagState: true\r\n        }\r\n      }\r\n    }\r\n   }\r\n\r\n  sigPad = {};\r\n\r\n  clear = () => {\r\n    this.sigPad.clear();\r\n    this.setState({\r\n      trimmedDataURL: false\r\n    });\r\n  };\r\n\r\n  trim = () => {\r\n    this.setState({\r\n      trimmedDataURL: this.sigPad.getTrimmedCanvas().toDataURL('image/png'),\r\n      signatureDone: true\r\n    });\r\n  };\r\n\r\n  onChangeFee = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^0-9]/g, '');\r\n    if(e.target.value !== ''){\r\n      this.setState({\r\n        fee: e.target.value\r\n      });\r\n    }\r\n\r\n    \r\n  };\r\n\r\n  sendReportInfo = (maximumSplit) => {\r\n    this.props.getOultayDatesList(parseInt(localStorage.user_id, 10), this.state.fee === null ? maximumSplit : this.state.fee, this.state.sliderValue);\r\n  };\r\n\r\n  handleSliderChange = (e) => {\r\n    this.setState({\r\n      sliderValue: Math.round(e),\r\n    });\r\n  };\r\n\r\n  handleQuantity = (e) => {\r\n    const input = e;\r\n    e = input.replace(/[^0-9]/g, '');\r\n    if(e<=300000 && e>=80000){\r\n      this.setState({\r\n        sliderValue: Math.round(e),\r\n      });\r\n    }    \r\n  };\r\n\r\n  handleQuantityBlur = (e) => {\r\n    console.log(\"Valor E\", e);\r\n  };\r\n\r\n  handleWallet = (e) => {\r\n    this.setState({\r\n      money_wallet: e,\r\n      bank_account: !e,\r\n    });\r\n  };\r\n\r\n  handleBankProp = (e) => {\r\n    this.setState({\r\n      bank_account: e,\r\n      money_wallet: false,\r\n    });\r\n  };\r\n\r\n  changeWalletType = (e) => {\r\n    this.setState({\r\n      wallet_type: e\r\n    });\r\n  };\r\n\r\n  changeWalletNumber = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^0-9]/g, '');\r\n    this.setState({\r\n      wallet_number: e.target.value\r\n    });\r\n  };\r\n\r\n  changeBankName = (e) => {\r\n    this.setState({\r\n      bank_name: e\r\n    });\r\n  };\r\n\r\n  changeBankNumber = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^0-9]/g, '');\r\n    this.setState({\r\n      bank_number: e.target.value\r\n    });\r\n  };\r\n\r\n  changeBankType = (e) => {\r\n    this.setState({\r\n      bank_type: e\r\n    });\r\n  };\r\n\r\n  defineDocumentsCondition = () => {\r\n    \r\n    let {bank_account, bank_name, bank_number, bank_type, money_wallet, \r\n         wallet_type, signatureDone} = this.state;\r\n\r\n    //console.log(\"State\", bank_account, bank_name, bank_number, bank_type, money_wallet, \r\n    //wallet_number, wallet_type, signatureDone);\r\n\r\n    if (bank_account){\r\n      if(bank_name !== null && bank_number !== null && bank_type !== null && \r\n         bank_name !== \"\" && bank_number !== \"\" && bank_type !== \"\" && signatureDone !== null){\r\n          return true;\r\n         }\r\n      return false;\r\n    }else if(money_wallet){\r\n      if( wallet_type !== null && signatureDone !== null && wallet_type !== \"\"){\r\n         return true;\r\n        }\r\n      return false;\r\n    }\r\n\r\n    return false;\r\n  \r\n  };\r\n\r\n  generateDocuments = ()=> {\r\n    this.props.generateDocuments(parseInt(localStorage.user_id, 10), this.state.fee, this.state.sliderValue);\r\n  };\r\n\r\n  openDocument = () => {\r\n\r\n    let route = \"https://drive.google.com/open?id=1vlyOU8r-f31ucKc2fvwlcoT570VCtSRi\";\r\n      \r\n    if (route !== null) {\r\n      let newWindow = window.open(route, \"blank\");\r\n      if (!newWindow || newWindow.closed || typeof newWindow.closed === 'undefined') {\r\n        allowEmergingWindows();\r\n\r\n      }\r\n      SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El contrato se ha descargado satisfactoriamente\");\r\n    } else {\r\n      WARNING_MODAL('Advertencia', 'El archivo no se encuentra disponible en estos momentos');\r\n    }\r\n  \r\n  };\r\n\r\n  checkRequest = (interestValue, adminValue) => {\r\n    this.props.form.validateFields((err, values) => {\r\n      if (err){\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n        ERROR_MODAL(\"Error al realizar la acción\", \"Por favor ingrese datos válidos dentro del formulario.\");\r\n      }else{\r\n        let data = {\r\n          file: this.state.trimmedDataURL,\r\n          quantity: values.quantity,\r\n          split: this.state.fee,\r\n          moyen: values.moyen,\r\n          accountType: this.state.money_wallet ? null : values.account_type,\r\n          accountNumber: values.account_number,\r\n          isBank: this.state.money_wallet ? false :  true,\r\n          interest: this.state.sliderValue * interestValue,\r\n          administration: (this.state.fee%2) * adminValue,     \r\n        }\r\n        //console.log(data);\r\n        this.props.createRequest(data, this.props.location.state ? this.props.location.state.token : undefined);\r\n      }     \r\n    });\r\n  };\r\n\r\n  validationLetters = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^a-zA-Z\\s]$/g, '');\r\n  };\r\n\r\n  validationNumbers = (e) => {\r\n    const input = e.target.value;\r\n    e.target.value = input.replace(/[^0-9]/g, '');\r\n  };\r\n\r\n  render(){\r\n\r\n    //console.log( this.props.requestDataResponse);\r\n    //console.log( \"TK\", this.props.location.state.token);\r\n\r\n    let {fee, sliderValue, bank_account, money_wallet} = this.state;\r\n    let feeCondition = fee !== null && this.defineDocumentsCondition();\r\n    const { getFieldDecorator } = this.props.form;\r\n    let { requestDataResponse, outlayDataResponse, outlayDatesList } = this.props;\r\n    let { interestValue, adminValue, partialCapacity, maximumSplit, otherCollectionValue, phoneNumber, accountNumber, accountType, accountBank } = requestDataResponse;\r\n    let { bankInfo, bankTypeAccountInfo, walletInfo } = outlayDataResponse;\r\n    let { trimmedDataURL } = this.state;    \r\n\r\n    //console.log(\"ODL\", this.state.sliderValue);\r\n\r\n\r\n    if(JSON.stringify(this.props.requestDataResponse) === '{}' || JSON.stringify(this.props.outlayDataResponse) === '{}'){\r\n      return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n                  Cargando ...\r\n                  <br/>\r\n                  <br/>\r\n                  <Spin size=\"large\" />\r\n                </div>);\r\n    }else{\r\n      return (\r\n        <div className={\"request-div\"}>\r\n            <Row className={\"request-row-content\"}>\r\n              <Col xxl={19} lg={19} md={19} sm={12} xs={11}>\r\n                <Typography >\r\n                  <Typography.Title level={3} className={\"request-form-title\"}>\r\n                    Solicitar préstamo\r\n                  </Typography.Title>       \r\n                </Typography>\r\n              </Col>\r\n              <Col xxl={5} lg={5} md={5} sm={12} xs={13}>\r\n                <div>\r\n                  <Row gutter={2}>\r\n                    <Col span={24}>\r\n                      <Statistic className={\"customer-credit-card\"} title={<h3>Cupo disponible</h3>} value={partialCapacity} prefix={\"$\"}/>\r\n                    </Col>\r\n                  </Row>    \r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <Row className={\"request-row-content\"}>\r\n              <div className={\"request-initial-step\"}>  \r\n                <Form>\r\n                  <Row>\r\n                    <Col lg={1} md={3} sm={5} xs={4}>\r\n                      <Button className={\"step-one\"}>\r\n                        1.\r\n                      </Button>\r\n                    </Col>\r\n                    <Col lg={23} md={21} sm={19} xs={20}>\r\n                      <div>\r\n                        <h3>Información de la solicitud</h3>\r\n                        <Divider className={\"form-request-divider\"}/>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row className={\"form-request-rows\"} gutter={8}>\r\n                    <Col xs={24} sm={24} md={12} lg={12} >\r\n                      <Card>\r\n                      <FieldTitle title={\"Monto requerido\"}/>\r\n                      <FormItem>\r\n                        {getFieldDecorator('quantity',\r\n                          {initialValue: this.state.sliderValue, \r\n                          rules: [\r\n                            {required: false, message: 'Por favor ingresa una cantidad de dinero específica'}\r\n                          ]})(\r\n                              <InputNumber step={10000} className={\"form-input-number\"} max={partialCapacity < 80000 ? 80000 : partialCapacity} min={partialCapacity < 80000 ? partialCapacity : 80000}\r\n                                    formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')} \r\n                                    placeholder={\"Monto requerido\"} onBlur={(e) => this.handleQuantityBlur(e)} onChange={this.handleQuantity} disabled={this.state.quantityBlur}/>\r\n                          )\r\n                        }\r\n                      </FormItem>\r\n                      <Row className=\"icon-wrapper\">\r\n                        <Col xxl={5} lg={5} md={8} sm={8} xs={5}>\r\n                          <h3>\r\n                          <span className={\"request-title-amount\"}>\r\n                            <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}} value={80000}\r\n                                             thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/></span>\r\n                          </h3>\r\n                        </Col>\r\n                        <Col xxl={14} lg={14} md={8} sm={8} xs={14}>\r\n                          <FormItem>\r\n                            {getFieldDecorator('quantity',\r\n                              {initialValue: this.state.sliderValue, rules: [\r\n                                {required: false, message: 'Por favor ingresa una cantidad de dinero específica'}\r\n                              ]})(\r\n                                <Slider max={partialCapacity <= 80000 ? 80000 : partialCapacity} min={80000} step={10000} className={\"slider-amount\"}\r\n                                        tipFormatter={\r\n                                          function (d) { \r\n                                            return format(d); \r\n                                          }} \r\n                                        onChange={this.handleSliderChange} style={{width: \"90%\"}} />\r\n                                )\r\n                              }  \r\n                            </FormItem>\r\n                        </Col>\r\n                        <Col xxl={5} lg={5} md={8} sm={8} xs={5}>\r\n                          <h3>\r\n                          <span className={\"request-title-amount\"}><CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                                value={partialCapacity < 80000 ? 80000 : partialCapacity} thousandSeparator={'.'}\r\n                                                decimalSeparator={','} prefix={'$'}/></span>\r\n                          </h3>\r\n                        </Col>\r\n                        \r\n                      </Row>\r\n                      <FieldTitle title={\"Número de cuotas\"}/>\r\n                      <span className={\"text-fees\"}>*La cantidad máxima de cuotas de acuerdo con tu empresa es <span className={\"fees-number-text\"}>{maximumSplit}</span>.</span>\r\n                      <FormItem className={\"fees-item\"}>\r\n                        {getFieldDecorator('fees',\r\n                          {rules: [\r\n                            {required: true, message: 'Por favor ingresa un número de cuotas'}\r\n                          ]})(\r\n                            <Row>\r\n                              <Input className={\"form-input-number\"} placeholder={\"Número de cuotas\"} max={maximumSplit}\r\n                              onChange={(e) => this.onChangeFee(e)} onBlur={() => this.sendReportInfo(maximumSplit)}\r\n                              disabled={sliderValue < 80000 ? true : false} />\r\n                            </Row>\r\n                          )\r\n                        }\r\n                      </FormItem>  \r\n                      </Card>\r\n                    </Col>\r\n                    <Col xs={24} sm={24} md={12} lg={12}>\r\n                      <Card>\r\n                        <Row gutter={8} className={\"information-col\"}>\r\n                          <Col xs={12} sm={24} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                            <b>Cantidad solicitada</b>\r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                            <b style={{color: \"#18e000a6\"}}>\r\n                              <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                                value={this.state.sliderValue} thousandSeparator={'.'}\r\n                                                decimalSeparator={','} prefix={'$'}/></b>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                          <b>Interés total</b>\r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                          <b>\r\n                            <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                              value={Math.round(interestValue*sliderValue*30)} thousandSeparator={'.'}\r\n                                              decimalSeparator={','} prefix={'$'}/></b>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                            <b>Administración</b>\r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                            <b><CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                              value={Math.round(adminValue)} thousandSeparator={'.'}\r\n                                              decimalSeparator={','} prefix={'$'}/></b>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Divider className={\"information-divider\"}/>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                            <b>Subtotal</b>\r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                            <b style={{color: \"#cecece\"}}><CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                              value={Math.round((adminValue)+(sliderValue*interestValue*30)+(sliderValue))} thousandSeparator={'.'}\r\n                                              decimalSeparator={','} prefix={'$'}/></b>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                            <b>Otros cobros</b>\r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                            <b><CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                                              value={otherCollectionValue} thousandSeparator={'.'}\r\n                                              decimalSeparator={','} prefix={'$'}/></b>\r\n                          </Col>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Divider className={\"information-divider\"}/>\r\n                        </Row>\r\n                        <Row gutter={8}>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"right\"}}>\r\n                            <b style={{fontSize: \"15px\"}}>Total a pagar</b> \r\n                          </Col>\r\n                          <Col xs={12} sm={12} md={12} lg={12} style={{textAlign: \"left\"}}>\r\n                            <b style={{color: \"#42a4ff\"}}><CurrencyFormat  displayType={'text'} style={{width: \"100%\", fontSize: \"15px\"}}\r\n                                              value={Math.round((adminValue)+(sliderValue*interestValue*30)+sliderValue)} thousandSeparator={'.'}\r\n                                              decimalSeparator={','} prefix={'$'}/></b>\r\n                          </Col>\r\n                        </Row>\r\n                        <span className={\"text-fees\"}>*Al dar click en el botón Solitar préstamo, usted acepta los términos y condiciones descritos aquí.</span>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <br/>\r\n                  {\r\n                    JSON.stringify(outlayDatesList) !== '[]'  && \r\n                    <Row className={\"form-request-rows\"}>\r\n                      <div className=\"upload-text\">\r\n                        De acuerdo a las cuotas que suministraste, tendrás el siguiente informe de descuentos. \r\n                        <br/>\r\n                        <br/>\r\n                        <Table className={\"new-table\"} dataSource={outlayDatesList} columns={table} rowKey={'id'} \r\n                            size={'small'} pagination={false}/>\r\n                      </div>\r\n                    </Row>\r\n                  }\r\n                  <br/>\r\n                  <Row>\r\n                    <Col lg={1} md={3} sm={5} xs={4}>\r\n                      <Button className={\"step-one\"}>\r\n                        2.\r\n                      </Button>\r\n                    </Col>\r\n                    <Col lg={23} md={21} sm={19} xs={20}>\r\n                      <div>\r\n                        <h3>Información de desembolso</h3>\r\n                        <Divider className={\"form-request-divider\"}/>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row gutter={20} className={\"form-request-rows\"}>\r\n                    <Col xs={12} sm={12} md={8} lg={7}>\r\n                    <span className={\"type-account\"}>{\"Banco \"}<Switch onChange={this.handleWallet}/>{\" Billetera virtual\"}</span>  \r\n                    </Col>\r\n                    <Col xs={24} sm={12} md={12} lg={10} className={\"form-bank-col\"}>\r\n                      {\r\n                        bank_account &&\r\n                        <div >\r\n                          <span className={\"bank-requires\"}>* El tiempo de desembolso depende de los ciclos ACH</span>\r\n                        </div> \r\n                      }\r\n                      {\r\n                        (!bank_account && !money_wallet) && \r\n                        <div >\r\n                          <span>* Escoge un medio para realizar el desembolso</span>\r\n                        </div> \r\n                      }\r\n                    </Col>\r\n                  </Row>\r\n                  <br/>\r\n                    {\r\n                      bank_account && \r\n                      <Row gutter={12} className={\"form-request-rows\"}>\r\n                        <Col xs={12} sm={12} md={7} lg={7} >\r\n                          <FieldTitle title={\"Cuenta\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('moyen',\r\n                              {initialValue: accountBank, rules: [\r\n                                {required: false, message: 'Por favor selecciona una cuenta'}\r\n                              ]})(\r\n                                <Select onChange={this.changeBankName} disabled={sliderValue < 80000 ? true : false} placeholder={\"Cuenta\"} showSearch={true} allowClear={true} autoClearSearchValue={true}>\r\n                                  {bankInfo.map((bank, i) =>(\r\n                                    <Select.Option value={bank.bankName} key={i}>\r\n                                      {bank.bankName}\r\n                                    </Select.Option>\r\n                                  ))\r\n                                  }\r\n                                </Select>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={7} lg={7} >\r\n                          <FieldTitle title={\"Tipo de cuenta\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('account_type',\r\n                              {initialValue: accountType, rules: [\r\n                                {required: false, message: 'Por favor ingresa un tipo de cuenta'}\r\n                              ]})(\r\n                                <Select placeholder={\"Tipo de cuenta\"} disabled={sliderValue < 80000 ? true : false} showSearch={true} onChange={this.changeBankType}>\r\n                                  {bankTypeAccountInfo.map((accountType, i) =>(\r\n                                    <Select.Option value={accountType.accountTypeName} key={i}>\r\n                                      {accountType.accountTypeName}\r\n                                    </Select.Option>\r\n                                  ))\r\n                                  }\r\n                                </Select>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={10} lg={10}>\r\n                        <FieldTitle title={\"Número de cuenta\"}/>\r\n                          <FormItem >\r\n                            {getFieldDecorator('account_number',\r\n                              {initialValue: accountNumber, rules: [\r\n                                {required: false, message: 'Por favor ingresa un número de cuenta' }\r\n                              ]})(\r\n                                <Input className={\"form-input-number\"} placeholder={\"Número de cuenta\"} \r\n                                onChange={this.changeBankNumber} disabled={sliderValue < 80000 ? true : false}/>\r\n                              )\r\n                            }\r\n                          </FormItem>  \r\n                        </Col>\r\n                      </Row>\r\n                    }\r\n                    {\r\n                      money_wallet &&\r\n                      <Row  gutter={12} className={\"form-request-rows\"}>\r\n                        <Col xs={12} sm={12} md={7} lg={7} >\r\n                          <FieldTitle title={\"Billetera virtual\"}/>\r\n                          <FormItem>\r\n                            {getFieldDecorator('moyen',\r\n                              {initialValue: null, rules: [\r\n                                {required: false, message: 'Por favor ingresa un tipo de billetera'}\r\n                              ]})(\r\n                                <Select placeholder={\"Tipo de billetera\"} disabled={sliderValue < 80000 ? true : false} showSearch={true} onChange={this.changeWalletType}>\r\n                                  {walletInfo.map((wallet, i) =>(\r\n                                    <Select.Option value={wallet.walletName} key={i}>\r\n                                      {wallet.walletName}\r\n                                    </Select.Option>\r\n                                  ))\r\n                                  }\r\n                                </Select>\r\n                              )\r\n                            }\r\n                          </FormItem>\r\n                        </Col>\r\n                        <Col xs={24} sm={24} md={10} lg={10}>\r\n                        <FieldTitle title={\"Número de celular\"}/>\r\n                          <FormItem >\r\n                            {getFieldDecorator('account_number',\r\n                              {initialValue: phoneNumber, rules: [\r\n                                {required: false, message: 'Por favor ingresa un número de celular' }\r\n                              ]})(\r\n                                <Input  className={\"form-input-number\"} placeholder={\"Número de celular\"} \r\n                                onChange={this.changeWalletNumber} disabled={sliderValue < 80000 ? true : false}/>\r\n                              )\r\n                            }\r\n                          </FormItem>  \r\n                        </Col>\r\n                      </Row>\r\n                    }\r\n                    \r\n                \r\n                    <Row>\r\n                      <Col lg={1} md={3} sm={5} xs={4}>\r\n                        <Button className={\"step-one\"}>\r\n                          3.\r\n                        </Button>\r\n                      </Col>\r\n                      <Col lg={23} md={21} sm={19} xs={20}>\r\n                        <div>\r\n                          <h3>Documentos de la solicitud</h3>\r\n                          <Divider className={\"form-request-divider\"}/>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                  <Row className={\"form-request-rows\"} gutter={8}>\r\n                    <Col xs={24} sm={12} md={12} lg={24}> \r\n                      <Card className={\"download-card\"}>\r\n                        <Row style={{textAlign: \"center\", fontWeight: \"bold\", fontSize: \"15px\"}}>\r\n                            Autorización de descuento\r\n                        </Row>\r\n                        <br/>\r\n                        <Row className={\"signature-field\"}>\r\n                          <SignaturePad canvasProps={{style:{width: '100%', height: '100%'}}}\r\n                            ref={(ref) => { this.sigPad = ref }} />\r\n                        </Row>\r\n                        <Row gutter={6}>\r\n                          <Col xs={4} sm={10} md={12} lg={16}/>\r\n                          <Col xs={10} sm={7} md={6} lg={4}>\r\n                            <Button className={\"request-signature-clean-button\"} style={{width: '100%', height: '30px'}} onClick={this.clear}>\r\n                              Limpiar firma\r\n                            </Button>\r\n                          </Col>\r\n                          <Col xs={10} sm={7} md={6} lg={4}>\r\n                            <Button className={\"request-signature-make-button\"} style={{width: '100%', height: '30px'}} onClick={this.trim}>\r\n                              Realizar firma\r\n                            </Button>\r\n                          </Col>\r\n                        </Row>\r\n                        <br/>\r\n                        <br/>\r\n                        {trimmedDataURL\r\n                          ? <img alt=\"signature\" style={{backgroundSize: '200px 50px', width: '200px', backgroundColor: 'white'}}\r\n                            src={trimmedDataURL} />\r\n                          : null}\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  \r\n                  \r\n                  <Row className={\"form-request-rows\"}>\r\n                    <Col xs={24} sm={12} md={18} lg={19}/>\r\n                    <Col xs={24} sm={12} md={6} lg={5}>\r\n                      <Button className={\"request-confirm-button\"} icon=\"file\"  disabled={!feeCondition || sliderValue < 80000}\r\n                              onClick={() => this.checkRequest(interestValue, adminValue)}>\r\n                          Solicitar préstamo\r\n                      </Button> \r\n                    </Col>\r\n                    \r\n                  </Row>\r\n                </Form>\r\n              </div>\r\n              {\r\n                this.props.requestResponse && \r\n                <Redirect to={routes.customer}/>\r\n              }\r\n          </Row>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n}\r\n\r\nlet RequestForm = Form.create()(LoanRequest);\r\n\r\nRequestForm.propTypes = {\r\n  requestDataResponse: PropTypes.object,\r\n  outlayDataResponse: PropTypes.object,\r\n  outlayDatesList: PropTypes.array,\r\n  requestResponse: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    requestDataResponse: state.customer.requestDataResponse,\r\n    outlayDataResponse: state.customer.outlayDataResponse,\r\n    outlayDatesList: state.customer.outlayDatesList,\r\n    requestResponse: state.customer.requestResponse,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getRequestData: (customerId, token) => dispatch(getRequestData(customerId, token)),\r\n    getOutlayData: (customerId, token) => dispatch(getOutlayData(customerId, token)),\r\n    getOultayDatesList: (customerId, split, quantity) => dispatch(getOultayDatesList(customerId, split, quantity)),\r\n    createRequest: (data, token) => dispatch(createRequest(data, token)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestForm);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Col, Row, Tooltip, Icon, Divider, Steps, Badge} from 'antd';\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\n//Styles\r\nimport '../../styles/customer/request-state.css';\r\n\r\n//Constants\r\nconst Step = Steps.Step;\r\n\r\nclass RequestStateModal extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: null,\r\n      card_style_requested: \"requested\",\r\n      card_style_analysis: \"analysis\",\r\n      card_style_approved: \"approved\",\r\n      card_style_rejected: \"rejected\",\r\n    };\r\n    \r\n  };\r\n\r\n  defineBadgeName = (id) => {\r\n    if(id === 1){\r\n      return \"Solicitada\";\r\n    }else if(id === 2){\r\n      return \"Evaluada\";\r\n    }else if(id === 3){\r\n      return \"Aprobada RR.HH.\";\r\n    }else if(id === 4){\r\n      return \"Aprobada Admon.\";\r\n    }else if(id === 5){\r\n      return \"Desembolsada\";\r\n    }else if(id=== 6){\r\n      return \"Rechazada\"\r\n    }\r\n  };\r\n\r\n  defineButtonClass = (id) => {\r\n    if(id === 1){\r\n      return \"#c1c1c1\";\r\n    }else if(id === 2){\r\n      return \"yellow\";\r\n    }else if(id === 3){\r\n      return \"#ffa962\";\r\n    }else if(id === 4){\r\n      return \"#62ffb5\";\r\n    }else if(id === 5){\r\n      return \"#6cff55 \";\r\n    }else if(id === 6){\r\n      return \"#ff4747\";\r\n    }else{\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n  render(){\r\n\r\n    let item = this.props.item;\r\n    //console.log(item);\r\n    return (\r\n        <Badge count={this.defineBadgeName(item.idRequestState)} style={{backgroundColor: this.defineButtonClass(item.idRequestState), color: \"black\"} }>\r\n          <div key={item.key} className={\"request-state-item-requested\"}>\r\n            <Row>\r\n              <Col xs={12} sm={12} md={8} lg={6} className=\"request-item-initial-col\">\r\n                <b>Número de Solicitud</b> <br/><br/>\r\n                {\"Solicitud No. \" + item.idRequest} \r\n              </Col>\r\n              <Col xs={12} sm={12} md={8} lg={5} className=\"request-item-initial-col\" >\r\n                  <b>Estado</b> <br/><br/>  {item.stateName}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={6}  className=\"request-item-initial-col\">\r\n                  <b>Fecha de Solicitud</b> <br/><br/> {item.createdDate.split(\"T\")[0]}\r\n              </Col>\r\n              <Col xs={12} sm={12} md={7} lg={5}  className=\"request-item-initial-col\">\r\n                  <b>Monto</b> <br/><br/>\r\n                  <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                      value={item.quantity} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/>\r\n              </Col>\r\n              <Col xs={24} sm={12} md={2} lg={2}>\r\n                <Tooltip title=\"Detallar solicitud\">\r\n                  <Icon type={\"plus-circle\"} className={\"request-item-icon\"} onClick={() => this.setState({visible: !this.state.visible})}/> \r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n          \r\n          {\r\n            this.state.visible && \r\n            <div>\r\n              <Row>\r\n                <Divider/>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Flujo de aprobación</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Steps current={item.idRequestState-1} size=\"small\" className={\"request-state-steps\"}>\r\n                  <Step title=\"Solicitada\"/>\r\n                  <Step title=\"En evaluación\"/>\r\n                  {\r\n                    (item.state-1 !== 3) && \r\n                    <Step title=\"Aprobar RR.HH.\"/>\r\n                  }\r\n                  {\r\n                    (item.state-1 !== 3) && \r\n                    <Step title=\"Aprobar Admon.\"/>\r\n                  }\r\n                  \r\n                  {\r\n                    (item.state-1 === 3) && \r\n                    <Step title=\"Rechazada\"/>\r\n                  }\r\n                  {\r\n                    (item.state-1 !== 3) && \r\n                    <Step title=\"Desembolsada\"/>\r\n                  }                 \r\n                </Steps>\r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={24} sm={12} md={8} lg={6} >\r\n                  <b>Información adicional</b>\r\n                </Col>  \r\n              </Row>\r\n              <br/><br/>\r\n              <Row>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                  <b>Valor total</b><br/><br/>\r\n                  <CurrencyFormat  displayType={'text'} style={{width: \"100%\"}}\r\n                      value={item.quantity+item.interestValue+item.administrationValue} thousandSeparator={'.'} decimalSeparator={','} prefix={'$'}/> \r\n                </Col>\r\n                <Col xs={12} sm={12} md={8} lg={4} >\r\n                    <b>Cuotas</b><br/><br/>\r\n                    {item.split}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={4}>\r\n                    <b>Cuenta</b><br/><br/>\r\n                    {item.account}\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                    <b>Tipo de Cuenta</b><br/><br/>\r\n                    {item.accountType !== \"null\" ? item.accountType : \"-\" }\r\n                </Col>\r\n                <Col xs={12} sm={12} md={7} lg={6}>\r\n                    <b>Número de cuenta</b><br/><br/>\r\n                    {item.accountNumber}\r\n                </Col>\r\n              </Row>\r\n              <br/><br/>\r\n              {\r\n                item.state === 3 &&\r\n                <div className={\"request-item-requested-alert\"}>\r\n                  <Row>\r\n                    <h3> \r\n                      <Icon type=\"exclamation-circle\" className={\"request-item-alert-icon\"}/> \r\n                      {\" \"}Ayudanos para que el área de recursos humanos de tu empresa realice la aprobación del crédito.\r\n                    </h3>\r\n                  </Row>\r\n                </div>\r\n              }\r\n              {\r\n                item.state === 5 &&\r\n                <div className={\"request-item-requested-confirm\"}>\r\n                  <Row>\r\n                    <h3> \r\n                      <Icon type=\"check-circle\" className={\"request-item-alert-icon\"}/> \r\n                      {\" \"}¡Tu solicitud ha sido desembolsada exitosamente!\r\n                    </h3>\r\n                  </Row>\r\n                </div>\r\n              }\r\n              {\r\n                item.state === 4 &&\r\n                <div className={\"request-item-requested-reject\"}>\r\n                  <Row>\r\n                    <h3> \r\n                      <Icon type=\"close-circle\" className={\"request-item-alert-icon\"}/> \r\n                      {\" \"}¡Tu solicitud fue rechazada por este motivo: ... !\r\n                    </h3>\r\n                  </Row>\r\n                </div>\r\n              }\r\n\r\n            </div>\r\n          }\r\n        </div>\r\n      </Badge>\r\n    );\r\n  };\r\n\r\n}\r\n\r\nexport default RequestStateModal;\r\n","//Libraries\r\nimport React, { Component } from 'react';\r\nimport { Col, Row, List, Spin, Tabs, Icon} from 'antd';\r\nimport connect from 'react-redux/es/connect/connect';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Subcomponents\r\nimport RequestModal from \"./RequestStateModal\";\r\n//import MiniLoading from '../subcomponents/MiniLoading';\r\n\r\n//Actions\r\nimport {getAllRequest, getAllOutlayedRequest} from \"../../../store/redux/actions/customer/customerActions\";\r\n\r\n//Styles\r\nimport '../../styles/customer/request-state.css';\r\nimport { SUCCESS_MODAL } from '../subcomponents/modalMessages';\r\n\r\n//Constants\r\nconst { TabPane } = Tabs;\r\n\r\nclass RequestState extends Component {\r\n\r\n  constructor (props) {\r\n\r\n    super(props);\r\n    \r\n    this.state = {\r\n      visible: null,\r\n    };\r\n\r\n    this.props.getAllRequest(parseInt(localStorage.user_id, 10));\r\n    this.props.getAllOutlayedRequest(parseInt(localStorage.user_id, 10));\r\n\r\n  };\r\n\r\n  onChangeMoyen = (e) => {\r\n    this.setState({\r\n      moyen: true\r\n    }); \r\n  };\r\n\r\n  onConfirmRequest = () => {\r\n    SUCCESS_MODAL(\"Acción realizada exitosamente\", \"El préstamo ha sido solicitado correctamente.\");\r\n    this.setState({\r\n      loan: true\r\n    });\r\n  };\r\n\r\n  render(){\r\n\r\n  let tableData = this.props.requestList.request;\r\n  let tableOutlayedData = this.props.outlayedRequestList.request;\r\n  //console.log(\"TableData\", tableData);\r\n\r\n  if(JSON.stringify(tableData) === '{}' || JSON.stringify(tableData) === undefined ||\r\n     JSON.stringify(tableOutlayedData) === '{}' || JSON.stringify(tableOutlayedData) === undefined){\r\n    return (<div style={{marginTop: '50px', color: \"#1c77ff\", fontSize:\"20px\", textAlign: \"center\"}}>\r\n              Cargando ...\r\n              <br/>\r\n              <br/>\r\n              <Spin size=\"large\" />\r\n            </div>);\r\n  }else{\r\n    return (\r\n      <div className={\"request-state-div\"}>\r\n        <Row>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n            <h2 className={'request-terms-title'}>Revisar solicitudes</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className={\"admin-row-content\"}>\r\n          <Col xxl={24} lg={24} md={24} sm={24} xs={24}>\r\n          <Tabs defaultActiveKey=\"1\">\r\n            <TabPane tab={<span> <Icon type=\"unordered-list\" />Solicitudes pendientes</span>} key=\"1\">\r\n              <List\r\n                locale={{ emptyText: 'No hay solicitudes pendientes' }}\r\n                dataSource={tableData}\r\n                renderItem={(item, k) => (\r\n                  <List.Item className={\"request-state-list-item\"}>\r\n                      <RequestModal item={item} key={k}/>\r\n                  </List.Item>\r\n                )}/>\r\n            </TabPane>\r\n            <TabPane tab={<span> <Icon type=\"plus-circle\" />Solicitudes desembolsadas</span>} key=\"2\">\r\n              <List\r\n                  locale={{ emptyText: 'No hay solicitudes desembolsadas' }}\r\n                  dataSource={tableOutlayedData}\r\n                  renderItem={(item, k) => (\r\n                    <List.Item className={\"request-state-list-item\"}>\r\n                        <RequestModal item={item} key={k}/>\r\n                    </List.Item>\r\n                  )}/>\r\n            </TabPane>\r\n          </Tabs>\r\n          </Col>\r\n        </Row>\r\n          \r\n      </div>\r\n    );\r\n  }\r\n  };\r\n  \r\n}\r\n\r\nRequestState.propTypes = {\r\n  requestList: PropTypes.object,\r\n  outlayedRequestList: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    requestList: state.customer.requestList,\r\n    outlayedRequestList: state.customer.outlayedRequestList,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllRequest: (customerId) => dispatch(getAllRequest(customerId)),\r\n    getAllOutlayedRequest: (customerId) => dispatch(getAllOutlayedRequest(customerId)),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestState);\r\n","//Libraries\r\nimport React, {Component} from 'react';\r\nimport {Route, Switch, withRouter, Redirect} from 'react-router-dom'\r\nimport {Layout} from \"antd\";\r\n\r\n//Components - Admin\r\nimport AdminCompanyManagement from \"../admin/company_management/index\";\r\nimport AdminCustomerManagement from \"../admin/customer_management/index\";\r\nimport AdminRequestManagement from \"../admin/request_management/index\";\r\nimport AdminGenerateReports from \"../admin/generate_reports/index\";\r\n\r\n//Components - Company\r\nimport Company from \"../company/request_management/index\";\r\nimport CompanyGenerateReports from \"../company/generate_reports/index\";\r\n\r\n//Components - Customer\r\nimport Customer from \"../customer/index\";\r\nimport Customer_Transactions from \"../customer/Transactions\";\r\nimport Customer_RequestForm from \"../customer/RequestForm\";\r\nimport Customer_ListRequest from \"../customer/RequestState\";\r\n\r\n//Subcomponents\r\nimport routes from \"../../../configuration/routing/Routes\";    \r\n\r\nclass Router extends Component {\r\n  \r\n  render() {\r\n\r\n    return (\r\n      <Layout.Content className={\"content\"}>\r\n        { \r\n          (parseInt(localStorage.role_id, 10) === 2 || parseInt(localStorage.role_id, 10) === 1) &&\r\n          <Switch>\r\n            <Route path={routes.admin_company_management} component={AdminCompanyManagement}/>\r\n            <Route path={routes.admin_customer_management} component={AdminCustomerManagement}/>\r\n            <Route path={routes.admin_request_management} component={AdminRequestManagement}/>\r\n            <Route path={routes.admin_generate_reports} component={AdminGenerateReports}/>\r\n            <Route render = {()=><Redirect to={routes.admin_company_management}/>}/>\r\n          </Switch>\r\n        }\r\n        { \r\n          parseInt(localStorage.role_id, 10) === 3 &&\r\n          <Switch>\r\n            <Route path={routes.company_request_management} component={Company}/>\r\n            <Route path={routes.company_generate_reports} component={CompanyGenerateReports}/>\r\n            <Route render = {()=><Redirect to={routes.company_request_management}/>}/>\r\n          </Switch>\r\n        }\r\n        { \r\n          parseInt(localStorage.role_id, 10) === 4 &&\r\n          <Switch>\r\n            <Route path={routes.customer} component={Customer}/>\r\n            <Route path={routes.customer_transactions} component={Customer_Transactions}/>\r\n            <Route path={routes.customer_form_request} component={Customer_RequestForm}/>\r\n            <Route path={routes.customer_review_requests} component={Customer_ListRequest}/>\r\n            <Route render = {()=><Redirect to={routes.customer}/>}/>\r\n          </Switch>\r\n        }\r\n        </Layout.Content>  \r\n    );\r\n  };\r\n}\r\n\r\nexport default withRouter(Router);","//Libraries\r\nimport React, { Component } from 'react';\r\nimport {Divider, Layout, Form} from \"antd\";\r\nimport {withRouter, Route, Switch,} from 'react-router-dom';\r\n\r\n//Components\r\nimport MainMenu from \"../components/general/MainMenu\";\r\nimport Login from \"../components/authentication/index\";\r\nimport Information from \"../components/general/Information\";\r\n//import ConfirmedAccount from \"../components/authentication/AccountRouting\";\r\n\r\n//IntegrationSubcomponents\r\nimport IFormRequest from \"./integration/IFormRequest\";\r\nimport ITransactions from \"./integration/ITransactions\";\r\nimport ResetPassword from \"./authentication/password/ResetPassword\";\r\nimport Home from \"./home/index\";\r\n\r\n//Subcomponents\r\nimport Router from \"../components/general/Router\";\r\nimport routes from \"../../configuration/routing/Routes\";\r\n\r\n//Styles\r\nimport '../styles/App.css';\r\nimport 'antd/dist/antd.css';\r\nimport { WARNING_MODAL } from './subcomponents/modalMessages';\r\n\r\n//Constants\r\nconst { Footer } = Layout;\r\nconst WrappedResetPassword = Form.create()(ResetPassword);\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    \r\n    super(props);\r\n    \r\n    this.state = {\r\n      viewportWidth: 0\r\n    };\r\n\r\n    this.isSignedIn = this.isSignedIn.bind(this);\r\n\r\n  };\r\n\r\n  componentDidUpdate(){\r\n    this.isSignedIn();\r\n  }\r\n\r\n  isSignedIn(){\r\n    if (localStorage.access_token !== undefined && localStorage.access_token !== null &&\r\n       localStorage.access_token){\r\n      let expireTime = new Date(localStorage.expires_on);\r\n      let today = new Date();\r\n      //console.log(\"Dates\", expireTime, today);\r\n      if(today<=expireTime){\r\n        return true;\r\n      }else{\r\n        localStorage.clear();\r\n        WARNING_MODAL(\"Advertencia\", \"La sesión ha caducado. Por favor, vuelve a iniciar sesión.\")\r\n        return false;\r\n      }\r\n    }else{\r\n      return false;\r\n    }\r\n  };\r\n\r\n  render(){\r\n\r\n    let signedIn = this.isSignedIn();\r\n\r\n    if(!signedIn){\r\n      if (this.props.location.pathname === routes.login || this.props.location.pathname === routes.forgot_password || this.props.location.pathname === routes.confirm_password ||\r\n        this.props.location.pathname === routes.confirm_account || this.props.location.pathname === routes.admin_register){\r\n          return( <Login pathname={this.props.location.pathname}/> );\r\n        }else{\r\n          return(\r\n            <div>           \r\n              <Layout className={'back-home'}>\r\n                <Switch>         \r\n                  <Route exact path={routes.integration_form} component={IFormRequest}/>\r\n                  <Route exact path={routes.integration_transactions} component={ITransactions} />\r\n                  <Route exact path={routes.reset_password} component={WrappedResetPassword}/>\r\n                  <Route render = {()=><Home/>}/>\r\n                </Switch>\r\n              </Layout>\r\n            </div>\r\n          );\r\n        }          \r\n    }else{\r\n      return(\r\n          <div>\r\n            <MainMenu viewPortWidth={this.state.viewportWidth}/>\r\n            <Information/>\r\n            <Layout className={'back-home'}>\r\n              <Router/>\r\n            </Layout>\r\n            <Layout >\r\n              <Footer className={'back-home2'}>\r\n                <br/>\r\n                <Divider className={\"layout-divider\"}/>\r\n                <div className={\"footer-div\"}>\r\n                  Avanzo © 2019 \r\n                </div>\r\n              </Footer>\r\n            </Layout>\r\n          </div>)\r\n    }\r\n  };\r\n\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","///Types\r\nimport {loginTypes as C} from '../../types';\r\nimport {customerTypes as Cu} from '../../types';\r\n\r\nconst initialState={\r\n  isLogin: false,\r\n  forgetPasswordResponse: null,\r\n  resetPasswordResponse: null,\r\n  correct: false,\r\n  newRegisterResponse: null,\r\n  companyList: [],\r\n};\r\n\r\nexport default function loginReducer(state = initialState, action){\r\n  switch (action.type) {\r\n    case C.RESET_ALL:\r\n      return{\r\n        ...state,\r\n        isLogin: action.isLogin,\r\n      };\r\n    case C.LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLogin: action.isLogin\r\n      };\r\n    case C.LOGGING:\r\n      return{\r\n        ...state,\r\n        isLogin: action.payload\r\n      };\r\n    case C.RESET_PASSWORD:\r\n      return{\r\n        ...state,\r\n        forgetPasswordResponse: action.payload\r\n      };\r\n    case C.CONFIRM_PASSWORD:\r\n      return{\r\n        ...state,\r\n        resetPasswordResponse: action.payload,\r\n        correct: action.correct\r\n      };\r\n    case Cu.NEW_REGISTER:\r\n      return{\r\n        ...state,\r\n        newRegisterResponse: action.payload\r\n      };\r\n    case Cu.GET_COMPANIES:\r\n      return{\r\n        ...state,\r\n        companyList: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","///Types\r\nimport {customerTypes as C} from '../../types';\r\n\r\nconst initialState={\r\n  idDocumentsTypes: [],\r\n  registerDataResponse: {},\r\n  registerResponse: null,\r\n  homeDataResponse: {},\r\n  requestDataResponse: {},\r\n  outlayDataResponse: {},\r\n  outlayDatesList: [],\r\n  documentsReponse: {},\r\n  transactionList: [],\r\n  requestList: {},\r\n  outlayedRequestList: {},\r\n  requestResponse: null,\r\n};\r\n\r\nexport default function customerReducer(state = initialState, action){\r\n  switch (action.type) {\r\n    case C.GET_DOCUMENTS_TYPE:\r\n      return{\r\n        ...state,\r\n        idDocumentsTypes: action.payload,\r\n      };\r\n    case C.REGISTER:\r\n      return{\r\n        ...state,\r\n        registerDataResponse: action.payload,\r\n        registerResponse: action.correct,\r\n      };\r\n    case C.GET_HOME_DATA:\r\n      return{\r\n        ...state,\r\n        homeDataResponse: action.payload,\r\n      };\r\n    case C.GET_REQUEST_DATA:\r\n      return{\r\n        ...state,\r\n        requestDataResponse: action.payload,\r\n      };\r\n    case C.GET_OUTLAY_DATA:\r\n      return{\r\n        ...state,\r\n        outlayDataResponse: action.payload,\r\n      };\r\n    case C.GET_OUTLAY_DATESLIST:\r\n      return{\r\n        ...state,\r\n        outlayDatesList: action.payload,\r\n      };\r\n    case C.GENERATE_DOCUMENTS:\r\n      return{\r\n        ...state,\r\n        documentsReponse: action.payload,\r\n      };\r\n    case C.GET_TRANSACTIONS_LIST:\r\n      return{\r\n        ...state,\r\n        transactionList: action.payload,\r\n      };\r\n    case C.GET_REQUEST_LIST:\r\n      return{\r\n        ...state,\r\n        requestList: action.payload,\r\n      };\r\n    case C.GET_OUTLAYED_REQUEST_LIST:\r\n      return{\r\n        ...state,\r\n        outlayedRequestList: action.payload,\r\n      };\r\n    case C.CREATE_REQUEST:\r\n      return{\r\n        ...state,\r\n        requestResponse: action.correct\r\n      }\r\n    case C.RESET_VALUES:\r\n      return{\r\n        ...state,\r\n        requestResponse: null\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","///Types\r\nimport {companyTypes as C} from '../../types';\r\n\r\nconst initialState={\r\n  requestList: [],\r\n};\r\n\r\nexport default function companyReducer(state = initialState, action){\r\n  switch (action.type) {    \r\n    case C.GET_REQUEST_LIST:\r\n      return{\r\n        ...state,\r\n        requestList: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","\r\n///Types\r\nimport {adminTypes as C} from '../../types';\r\n\r\nconst initialState={\r\n  registerAdminResponse: null,\r\n  requestResponse: null,\r\n  requestOutLayResponse: null,\r\n  createCustomerResponse: null,\r\n  companyResponse: null,\r\n  companySalaryResponse: [],  \r\n  companyList: null,\r\n  customerList: null,\r\n  customerListToApprove: null\r\n};\r\n\r\nexport default function adminReducer(state = initialState, action){\r\n  switch (action.type) {\r\n    case C.RESET_VALUES:\r\n      return{\r\n      ...state,\r\n        companyResponse: null\r\n      };\r\n    case C.REGISTER_ADMIN:\r\n      return{\r\n        ...state,\r\n        registerAdminResponse: action.payload,\r\n      };\r\n    case C.GET_REQUEST_TO_APPROVE:\r\n      return{\r\n        ...state,\r\n        requestResponse: action.payload\r\n      };\r\n    case C.CREATE_COMPANY:\r\n      return{\r\n        ...state,\r\n        companyResponse: action.correct\r\n      };\r\n    case C.CREATE_CUSTOMER:\r\n      return{\r\n        ...state,\r\n        createCustomerResponse: action.correct\r\n      }\r\n    case C.GET_ALL_COMPANIES:\r\n      return{\r\n        ...state,\r\n        companyList: action.payload\r\n      };\r\n    case C.GET_COMPANY_WITH_SALARY:\r\n      return{\r\n        ...state,\r\n        companySalaryResponse: action.payload\r\n      }\r\n    case C.GET_ALL_CUSTOMERS:\r\n      return{\r\n        ...state,\r\n        customerList: action.payload\r\n      };\r\n    case C.GET_CUSTOMERS_TO_APPROVE:\r\n      return{\r\n        ...state,\r\n        customerListToApprove: action.payload\r\n      };  \r\n    case C.GET_REQUEST_TO_OUTLAY:\r\n      return{\r\n        ...state,\r\n        requestOutLayResponse: action.payload\r\n      };       \r\n    default:\r\n      return state;\r\n  }\r\n}","//Types\r\nimport {integrationTypes as C} from '../../types';\r\n\r\nconst initialState={\r\n  integrationRegisterResponse: null,\r\n  integrationToken: null,\r\n};\r\n\r\nexport default function integrationReducer(state = initialState, action){\r\n  switch (action.type) {\r\n    case C.INTEGRATION_REGISTER:\r\n      return{\r\n        ...state,\r\n        integrationRegisterResponse: action.payload,\r\n        integrationToken: action.token,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}","//Dependencias\r\nimport { combineReducers } from 'redux'; //Combinar todos\r\n\r\n//Reducers\r\nimport loginReducer from \"./login/loginReducer\";\r\nimport customerReducer from './customer/customerReducer';\r\nimport companyReducer from \"./company/companyReducer\";\r\nimport adminReducer from \"./admin/adminReducer\";\r\nimport integrationReducer from \"./integration/integrationReducer\";\r\n\r\nexport default combineReducers({\r\n  login: loginReducer,\r\n  customer: customerReducer,\r\n  company: companyReducer,\r\n  admin: adminReducer,\r\n  integration: integrationReducer,\r\n});","//Importar de Node-Modules\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n//Importar combinador de reducers.\r\nimport reducer from './redux/reducers/index';\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer, initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.devToolsExtension ? window.devToolsExtension() : f => f\r\n  ) \r\n);\r\n\r\nexport default store;","//Libraries\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\n//Components\r\nimport App from './ui/components/App';\r\n\r\n//Subcomponents\r\nimport * as serviceWorker from './configuration/serviceWorker';\r\nimport store from './store/store';\r\n\r\n//Styles\r\nimport './ui/styles/index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>\r\n  </Provider>, \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}